[
  "database schema :\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.gender ( varchar(1) ) , staff.first_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.email_address ( varchar(255) ) , staff.phone_number ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_type_code ( varchar(20) ) , customers.address_line_1 ( varchar(80) ) , customers.address_line_2 ( varchar(80) ) , customers.town_city ( varchar(80) ) , customers.state ( varchar(80) ) , customers.email_address ( varchar(255) ) , customers.phone_number ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.product_category_code ( varchar(20) ) , products.date_product_first_available ( datetime ) , products.date_product_discontinued ( datetime ) , products.product_name ( varchar(80) ) , products.product_description ( varchar(255) ) , products.product_price ( decimal(19,4) ) ]\ntable complaints , columns = [ complaints.complaint_id ( integer ) , complaints.product_id ( integer ) , complaints.customer_id ( integer ) , complaints.complaint_outcome_code ( varchar(20) ) , complaints.complaint_status_code ( varchar(20) ) , complaints.complaint_type_code ( varchar(20) ) , complaints.date_complaint_raised ( datetime ) , complaints.date_complaint_closed ( datetime ) , complaints.staff_id ( integer ) ]\nforeign keys :\ncomplaints.customer_id = customers.customer_id\ncomplaints.product_id = products.product_id\ncomplaints.staff_id = staff.staff_id\nmatched contents :\nstaff.gender ( 1 )\ncustomers.email_address ( vbogisich@example.org )\ncomplaints.complaint_id ( 1 , 2 )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergytype ( animal , food )\nstudent.age ( 18 )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_status_code ( Reported )\nproblem_status_codes.problem_status_code ( Reported )\nproblem_status_codes.problem_status_description ( Reported )\nstaff.staff_first_name ( Dameon , Jolie )\nstaff.staff_last_name ( Frami , Weber )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Marketing , Finance )\ncourse.dept_name ( Marketing , Finance )\ninstructor.dept_name ( Marketing , Finance )\nstudent.name ( Finance )\nstudent.dept_name ( Marketing , Finance )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\norders.order_status ( On Road , Shipped )",
  "database schema :\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_name ( text ) , region.date ( text ) , region.label ( text ) , region.format ( text ) , region.catalogue ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.minister ( text ) , party.took_office ( text ) , party.left_office ( text ) , party.region_id ( int ) , party.party_name ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.member_name ( text ) , member.party_id ( text ) , member.in_office ( text ) ]\ntable party_events , columns = [ party_events.event_id ( int | primary key ) , party_events.event_name ( text ) , party_events.party_id ( int ) , party_events.member_in_charge_id ( int ) ]\nforeign keys :\nparty.region_id = region.region_id\nmember.party_id = party.party_id\nparty_events.member_in_charge_id = member.member_id\nparty_events.party_id = party.party_id\nmatched contents :\nregion.region_name ( United Kingdom )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.lname ( Ohori )\nauthors.fname ( Atsushi )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\ndorm.gender ( X )",
  "database schema :\ntable item , columns = [ item.i_id ( integer | primary key | comment : item id ) , item.title ( varchar(20) ) ]\ntable review , columns = [ review.a_id ( integer | primary key ) , review.u_id ( integer | comment : user id ) , review.i_id ( integer | comment : item id ) , review.rating ( integer ) , review.rank ( integer ) ]\ntable useracct , columns = [ useracct.u_id ( integer | primary key | comment : user id ) , useracct.name ( varchar(128) ) ]\ntable trust , columns = [ trust.source_u_id ( integer | comment : source user id ) , trust.target_u_id ( integer | comment : target user id ) , trust.trust ( integer ) ]\nforeign keys :\nreview.i_id = item.i_id\nreview.u_id = useracct.u_id\ntrust.target_u_id = useracct.u_id\ntrust.source_u_id = useracct.u_id\nmatched contents : None",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\ncatalogs.catalog_id ( 5 )\ncatalog_contents.catalog_entry_id ( 5 )\ncatalog_contents.parent_entry_id ( 5 )\ncatalog_contents.previous_entry_id ( 5 )\ncatalog_contents.capacity ( 5 )\ncatalog_contents.length ( 5 )\ncatalog_contents.height ( 5 )\ncatalog_contents.width ( 5 )\ncatalog_contents_additional_attributes.catalog_entry_id ( 5 )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.title ( text ) , film.studio ( text ) , film.director ( text ) , film.gross_in_dollar ( int ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.country ( text ) , market.number_cities ( int ) ]\ntable film_market_estimation , columns = [ film_market_estimation.estimation_id ( int | primary key ) , film_market_estimation.low_estimate ( real ) , film_market_estimation.high_estimate ( real ) , film_market_estimation.film_id ( int ) , film_market_estimation.type ( text ) , film_market_estimation.market_id ( int ) , film_market_estimation.year ( int ) ]\nforeign keys :\nfilm_market_estimation.market_id = market.market_id\nfilm_market_estimation.film_id = film.film_id\nmatched contents :\nmarket.country ( China )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2008 )\nappearances.year ( 2008 )\nbatting.year ( 2008 )\nbatting_postseason.year ( 2008 )\nfielding.year ( 2008 )\nfielding.inn_outs ( 2008 )\nfielding_postseason.year ( 2008 )\nhall_of_fame.yearid ( 2008 )\nhome_game.year ( 2008 )\nmanager.year ( 2008 )\nplayer.death_city ( Park )",
  "database schema :\ntable roller_coaster , columns = [ roller_coaster.roller_coaster_id ( int | primary key ) , roller_coaster.name ( text ) , roller_coaster.park ( text ) , roller_coaster.country_id ( int ) , roller_coaster.length ( real ) , roller_coaster.height ( real ) , roller_coaster.speed ( text ) , roller_coaster.opened ( text ) , roller_coaster.status ( text ) ]\ntable country , columns = [ country.country_id ( int | primary key ) , country.name ( text ) , country.population ( int ) , country.area ( int ) , country.languages ( text ) ]\nforeign keys :\nroller_coaster.country_id = country.country_id\nmatched contents : None",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ncustomer.firstname ( Leonie )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nplayer.name_last ( Hall , Peoples )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nenrolled_in.grade ( B )\ngradeconversion.lettergrade ( B )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nemployee.emp_jobcode ( PROF )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.artist ( text ) , artist.age ( int ) , artist.famous_title ( text ) , artist.famous_release_date ( text ) ]\ntable volume , columns = [ volume.volume_id ( int | primary key ) , volume.volume_issue ( text ) , volume.issue_date ( text ) , volume.weeks_on_top ( real ) , volume.song ( text ) , volume.artist_id ( int ) ]\ntable music_festival , columns = [ music_festival.id ( int | primary key ) , music_festival.music_festival ( text ) , music_festival.date_of_ceremony ( text ) , music_festival.category ( text ) , music_festival.volume ( int ) , music_festival.result ( text ) ]\nforeign keys :\nvolume.artist_id = artist.artist_id\nmusic_festival.volume = volume.volume_id\nmatched contents :\nartist.artist ( Triumfall )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\ncourses.course_name ( operating system , data structure )\ncourses.course_description ( operating system , data structure )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.no ( 50 )\nappellations.appelation ( Monterey County )\nappellations.county ( Monterey )\nwine.no ( 50 )\nwine.appelation ( Monterey County )\nwine.price ( 50 )\nwine.cases ( 50 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ntracks.name ( Numbers )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nsong.languages ( english )",
  "database schema :\ntable investors , columns = [ investors.investor_id ( integer | primary key ) , investors.investor_details ( varchar(255) ) ]\ntable lots , columns = [ lots.lot_id ( integer | primary key ) , lots.investor_id ( integer ) , lots.lot_details ( varchar(255) ) ]\ntable ref_transaction_types , columns = [ ref_transaction_types.transaction_type_code ( varchar(10) | primary key ) , ref_transaction_types.transaction_type_description ( varchar(80) ) ]\ntable transactions , columns = [ transactions.transaction_id ( integer | primary key ) , transactions.investor_id ( integer ) , transactions.transaction_type_code ( varchar(10) ) , transactions.date_of_transaction ( datetime ) , transactions.amount_of_transaction ( decimal(19,4) ) , transactions.share_count ( varchar(40) ) , transactions.other_details ( varchar(255) ) ]\ntable sales , columns = [ sales.sales_transaction_id ( integer | primary key ) , sales.sales_details ( varchar(255) ) ]\ntable purchases , columns = [ purchases.purchase_transaction_id ( integer ) , purchases.purchase_details ( varchar(255) ) ]\ntable transactions_lots , columns = [ transactions_lots.transaction_id ( integer ) , transactions_lots.lot_id ( integer ) ]\nforeign keys :\nlots.investor_id = investors.investor_id\ntransactions.transaction_type_code = ref_transaction_types.transaction_type_code\ntransactions.investor_id = investors.investor_id\nsales.sales_transaction_id = transactions.transaction_id\npurchases.purchase_transaction_id = transactions.transaction_id\ntransactions_lots.transaction_id = transactions.transaction_id\ntransactions_lots.lot_id = lots.lot_id\nmatched contents :\ninvestors.investor_id ( 10 )\nlots.lot_id ( 10 )\nlots.investor_id ( 10 )\ntransactions.transaction_id ( 10 )\nsales.sales_transaction_id ( 10 )\npurchases.purchase_transaction_id ( 10 )\ntransactions_lots.transaction_id ( 10 )\ntransactions_lots.lot_id ( 10 )",
  "database schema :\ntable party , columns = [ party.party_id ( int | primary key ) , party.party_theme ( text ) , party.location ( text ) , party.first_year ( text ) , party.last_year ( text ) , party.number_of_hosts ( int ) ]\ntable host , columns = [ host.host_id ( int | primary key ) , host.name ( text ) , host.nationality ( text ) , host.age ( text ) ]\ntable party_host , columns = [ party_host.party_id ( int | primary key ) , party_host.host_id ( int | primary key ) , party_host.is_main_in_charge ( bool ) ]\nforeign keys :\nparty_host.party_id = party.party_id\nparty_host.host_id = host.host_id\nmatched contents : None",
  "database schema :\ntable entrepreneur , columns = [ entrepreneur.entrepreneur_id ( int | primary key ) , entrepreneur.people_id ( int ) , entrepreneur.company ( text ) , entrepreneur.money_requested ( real ) , entrepreneur.investor ( text ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.height ( real ) , people.weight ( real ) , people.date_of_birth ( text ) ]\nforeign keys :\nentrepreneur.people_id = people.people_id\nmatched contents :\nentrepreneur.investor ( Simon Woodroffe , Peter Jones )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nlocations.location_name ( Film Festival )\ntourist_attractions.name ( film festival )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.albumid ( 20 )\nalbum.artistid ( 20 )\nartist.artistid ( 20 )\ncustomer.customerid ( 20 )\ngenre.genreid ( 20 )\ninvoice.invoiceid ( 20 )\ninvoice.customerid ( 20 )\ninvoiceline.invoicelineid ( 20 )\ninvoiceline.invoiceid ( 20 )\ninvoiceline.trackid ( 20 )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nrating.stars ( 2 )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nteachers.lastname ( KAWA )\nteachers.firstname ( GORDON )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.country ( text ) , people.is_male ( text ) , people.age ( int ) ]\ntable church , columns = [ church.church_id ( int | primary key ) , church.name ( text ) , church.organized_by ( text ) , church.open_date ( int ) , church.continuation_of ( text ) ]\ntable wedding , columns = [ wedding.church_id ( int | primary key ) , wedding.male_id ( int | primary key ) , wedding.female_id ( int | primary key ) , wedding.year ( int ) ]\nforeign keys :\nwedding.female_id = people.people_id\nwedding.male_id = people.people_id\nwedding.church_id = church.church_id\nmatched contents :\npeople.age ( 30 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.albumid ( 10 )\nalbum.artistid ( 10 )\nartist.artistid ( 10 )\ncustomer.customerid ( 10 )\ngenre.genreid ( 10 )\ninvoice.invoiceid ( 10 )\ninvoice.customerid ( 10 )\ninvoiceline.invoicelineid ( 10 )\ninvoiceline.invoiceid ( 10 )\ninvoiceline.trackid ( 10 )\ntrack.name ( Please )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\ncustomers.payment_method_code ( Credit Card )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2000 )\nappearances.year ( 2000 )\nbatting.year ( 2000 )\nbatting_postseason.year ( 2000 )\nfielding.year ( 2000 )\nfielding.inn_outs ( 2000 )\nfielding_postseason.year ( 2000 )\nhall_of_fame.yearid ( 2000 )\nhome_game.year ( 2000 )\nhome_game.attendance ( 2000 )\nplayer.birth_city ( Atlanta )\nplayer.death_city ( Atlanta )\npark.city ( Atlanta )\ncollege.city ( Atlanta )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ngenre.name ( Reggae , Rock )",
  "database schema :\ntable roles , columns = [ roles.role_code ( varchar(15) | primary key ) , roles.role_description ( varchar(80) ) ]\ntable users , columns = [ users.user_id ( integer | primary key ) , users.role_code ( varchar(15) ) , users.user_name ( varchar(40) ) , users.user_login ( varchar(40) ) , users.password ( varchar(40) ) ]\ntable document_structures , columns = [ document_structures.document_structure_code ( varchar(15) | primary key ) , document_structures.parent_document_structure_code ( varchar(15) ) , document_structures.document_structure_description ( varchar(80) ) ]\ntable functional_areas , columns = [ functional_areas.functional_area_code ( varchar(15) | primary key ) , functional_areas.parent_functional_area_code ( varchar(15) ) , functional_areas.functional_area_description ( varchar(80) ) ]\ntable images , columns = [ images.image_id ( integer | primary key ) , images.image_alt_text ( varchar(80) ) , images.image_name ( varchar(40) ) , images.image_url ( varchar(255) ) ]\ntable documents , columns = [ documents.document_code ( varchar(15) | primary key ) , documents.document_structure_code ( varchar(15) ) , documents.document_type_code ( varchar(15) ) , documents.access_count ( integer ) , documents.document_name ( varchar(80) ) ]\ntable document_functional_areas , columns = [ document_functional_areas.document_code ( varchar(15) ) , document_functional_areas.functional_area_code ( varchar(15) ) ]\ntable document_sections , columns = [ document_sections.section_id ( integer | primary key ) , document_sections.document_code ( varchar(15) ) , document_sections.section_sequence ( integer ) , document_sections.section_code ( varchar(20) ) , document_sections.section_title ( varchar(80) ) ]\ntable document_sections_images , columns = [ document_sections_images.section_id ( integer | primary key ) , document_sections_images.image_id ( integer | primary key ) ]\nforeign keys :\nusers.role_code = roles.role_code\ndocuments.document_structure_code = document_structures.document_structure_code\ndocument_functional_areas.functional_area_code = functional_areas.functional_area_code\ndocument_functional_areas.document_code = documents.document_code\ndocument_sections.document_code = documents.document_code\ndocument_sections_images.image_id = images.image_id\ndocument_sections_images.section_id = document_sections.section_id\nmatched contents :\nimages.image_alt_text ( Name )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_buildings.building_manager ( Brenden )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nsportsinfo.sportname ( Football )",
  "database schema :\ntable repair , columns = [ repair.repair_id ( int | primary key ) , repair.name ( text ) , repair.launch_date ( text ) , repair.notes ( text ) ]\ntable machine , columns = [ machine.machine_id ( int | primary key ) , machine.making_year ( int ) , machine.class ( text ) , machine.team ( text ) , machine.machine_series ( text ) , machine.value_points ( real ) , machine.quality_rank ( int ) ]\ntable technician , columns = [ technician.technician_id ( real | primary key ) , technician.name ( text ) , technician.team ( text ) , technician.starting_year ( real ) , technician.age ( int ) ]\ntable repair_assignment , columns = [ repair_assignment.technician_id ( int | primary key ) , repair_assignment.repair_id ( int | primary key ) , repair_assignment.machine_id ( int | primary key ) ]\nforeign keys :\nrepair_assignment.machine_id = machine.machine_id\nrepair_assignment.repair_id = repair.repair_id\nrepair_assignment.technician_id = technician.technician_id\nmatched contents :\ntechnician.team ( CLE , CWS )",
  "database schema :\ntable event , columns = [ event.event_id ( int | primary key ) , event.date ( text ) , event.venue ( text ) , event.name ( text ) , event.event_attendance ( int ) ]\ntable journalist , columns = [ journalist.journalist_id ( int | primary key ) , journalist.name ( text ) , journalist.nationality ( text ) , journalist.age ( text ) , journalist.years_working ( int ) ]\ntable news_report , columns = [ news_report.journalist_id ( int | primary key ) , news_report.event_id ( int | primary key ) , news_report.work_type ( text ) ]\nforeign keys :\nnews_report.event_id = event.event_id\nnews_report.journalist_id = journalist.journalist_id\nmatched contents :\njournalist.nationality ( England , Wales )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\naddresses.address_id ( 3 )\ndepartment_store_chain.dept_store_chain_id ( 3 )\ncustomers.customer_id ( 3 )\ncustomer_orders.order_id ( 3 )\ndepartment_stores.dept_store_id ( 3 )\ndepartment_stores.dept_store_chain_id ( 3 )\ndepartments.department_id ( 3 )\norder_items.order_item_id ( 3 )\norder_items.product_id ( 3 )\nproduct_suppliers.product_id ( 3 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\nproducts.product_details ( Latte )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nmanufacturers.founder ( James )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.gender ( male )",
  "database schema :\ntable mountain , columns = [ mountain.mountain_id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable climber , columns = [ climber.climber_id ( int | primary key ) , climber.name ( text ) , climber.country ( text ) , climber.time ( text ) , climber.points ( real ) , climber.mountain_id ( int ) ]\nforeign keys :\nclimber.mountain_id = mountain.mountain_id\nmatched contents :\nclimber.country ( Switzerland )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(80) ) , addresses.line_2 ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( char(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable people , columns = [ people.person_id ( integer | primary key ) , people.first_name ( varchar(255) ) , people.middle_name ( varchar(255) ) , people.last_name ( varchar(255) ) , people.cell_mobile_number ( varchar(40) ) , people.email_address ( varchar(40) ) , people.login_name ( varchar(40) ) , people.password ( varchar(40) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.student_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( varchar(100) | primary key ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable people_addresses , columns = [ people_addresses.person_address_id ( integer | primary key ) , people_addresses.person_id ( integer ) , people_addresses.address_id ( integer ) , people_addresses.date_from ( datetime ) , people_addresses.date_to ( datetime ) ]\ntable student_course_registrations , columns = [ student_course_registrations.student_id ( integer | primary key ) , student_course_registrations.course_id ( integer | primary key ) , student_course_registrations.registration_date ( datetime ) ]\ntable student_course_attendance , columns = [ student_course_attendance.student_id ( integer | primary key ) , student_course_attendance.course_id ( integer | primary key ) , student_course_attendance.date_of_attendance ( datetime ) ]\ntable candidates , columns = [ candidates.candidate_id ( integer | primary key ) , candidates.candidate_details ( varchar(255) ) ]\ntable candidate_assessments , columns = [ candidate_assessments.candidate_id ( integer | primary key ) , candidate_assessments.qualification ( char(15) | primary key ) , candidate_assessments.assessment_date ( datetime ) , candidate_assessments.asessment_outcome_code ( char(15) ) ]\nforeign keys :\nstudents.student_id = people.person_id\npeople_addresses.address_id = addresses.address_id\npeople_addresses.person_id = people.person_id\nstudent_course_registrations.course_id = courses.course_id\nstudent_course_registrations.student_id = students.student_id\nstudent_course_attendance.student_id = student_course_registrations.student_id\nstudent_course_attendance.course_id = student_course_registrations.course_id\ncandidates.candidate_id = people.person_id\ncandidate_assessments.candidate_id = candidates.candidate_id\nmatched contents :\npeople.person_id ( 171 )\nstudents.student_id ( 171 )\npeople_addresses.person_id ( 171 )\nstudent_course_registrations.student_id ( 171 )\nstudent_course_attendance.student_id ( 171 )\ncandidates.candidate_id ( 171 )",
  "database schema :\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_name ( text ) , region.date ( text ) , region.label ( text ) , region.format ( text ) , region.catalogue ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.minister ( text ) , party.took_office ( text ) , party.left_office ( text ) , party.region_id ( int ) , party.party_name ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.member_name ( text ) , member.party_id ( text ) , member.in_office ( text ) ]\ntable party_events , columns = [ party_events.event_id ( int | primary key ) , party_events.event_name ( text ) , party_events.party_id ( int ) , party_events.member_in_charge_id ( int ) ]\nforeign keys :\nparty.region_id = region.region_id\nmember.party_id = party.party_id\nparty_events.member_in_charge_id = member.member_id\nparty_events.party_id = party.party_id\nmatched contents :\nregion.region_id ( 2 )\nparty.party_id ( 2 )\nparty.region_id ( 2 )\nmember.member_id ( 2 )\nmember.party_id ( 2 )\nparty_events.event_id ( 2 )\nparty_events.party_id ( 2 )\nparty_events.member_in_charge_id ( 2 )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nloan.amount ( 5000 )",
  "database schema :\ntable mountain , columns = [ mountain.mountain_id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable climber , columns = [ climber.climber_id ( int | primary key ) , climber.name ( text ) , climber.country ( text ) , climber.time ( text ) , climber.points ( real ) , climber.mountain_id ( int ) ]\nforeign keys :\nclimber.mountain_id = mountain.mountain_id\nmatched contents :\nmountain.country ( Uganda )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.year ( 2009 , 2011 )\nseasons.year ( 2009 , 2011 )\nresults.resultid ( 2009 , 2011 )\nconstructorresults.constructorresultsid ( 2009 , 2011 )\nqualifying.qualifyid ( 2009 , 2011 )",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents : None",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.artist ( text ) , artist.age ( int ) , artist.famous_title ( text ) , artist.famous_release_date ( text ) ]\ntable volume , columns = [ volume.volume_id ( int | primary key ) , volume.volume_issue ( text ) , volume.issue_date ( text ) , volume.weeks_on_top ( real ) , volume.song ( text ) , volume.artist_id ( int ) ]\ntable music_festival , columns = [ music_festival.id ( int | primary key ) , music_festival.music_festival ( text ) , music_festival.date_of_ceremony ( text ) , music_festival.category ( text ) , music_festival.volume ( int ) , music_festival.result ( text ) ]\nforeign keys :\nvolume.artist_id = artist.artist_id\nmusic_festival.volume = volume.volume_id\nmatched contents :\nartist.artist_id ( 2 )\nvolume.volume_id ( 2 )\nvolume.artist_id ( 2 )\nmusic_festival.id ( 2 )\nmusic_festival.volume ( 2 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nstudent.lname ( Shieber )\nstudent.fname ( David )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\narchitect.gender ( male )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nmarketing_regions.marketing_region_name ( China )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Alice )\nperson.job ( doctor )\npersonfriend.name ( Alice )\npersonfriend.friend ( Alice )",
  "database schema :\ntable accounts , columns = [ accounts.custid ( bigint | primary key | comment : customer id ) , accounts.name ( varchar(64) ) ]\ntable savings , columns = [ savings.custid ( bigint | primary key | comment : customer id ) , savings.balance ( float ) ]\ntable checking , columns = [ checking.custid ( bigint | primary key | comment : customer id ) , checking.balance ( float ) ]\nforeign keys :\nsavings.custid = accounts.custid\nchecking.custid = accounts.custid\nmatched contents :\naccounts.name ( Brown )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_document_types.document_type_code ( CV )\nref_document_types.document_type_name ( CV )\nall_documents.document_type_code ( CV )\nall_documents.document_name ( Marry CV )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 1980 )\nappearances.year ( 1980 )\nbatting.year ( 1980 )\nbatting_postseason.year ( 1980 )\nfielding.year ( 1980 )\nfielding.inn_outs ( 1980 )\nfielding_postseason.year ( 1980 )\nhall_of_fame.yearid ( 1980 )\nhome_game.year ( 1980 )\nmanager.year ( 1980 )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.city ( Palo Alto )\ntrip.duration ( 100 )\nweather.max_humidity ( 100 )\nweather.max_wind_speed_mph ( 100 )\nweather.wind_dir_degrees ( 100 )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.circuitid ( 11 , 5 )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\nconstructors.constructorid ( 11 , 5 )\nconstructorstandings.constructorstandingsid ( 5 )\nconstructorstandings.raceid ( 5 )\nconstructorstandings.constructorid ( 11 , 5 )\nconstructorstandings.position ( 5 )\nconstructorstandings.positiontext ( 5 )\nconstructorresults.constructorresultsid ( 11 , 5 )\nconstructorresults.raceid ( 11 , 5 )\nconstructorresults.constructorid ( 11 , 5 )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\naccounts.account_name ( 338 )",
  "database schema :\ntable train , columns = [ train.id ( int | primary key ) , train.train_number ( int ) , train.name ( text ) , train.origin ( text ) , train.destination ( text ) , train.time ( text ) , train.interval ( text ) ]\ntable station , columns = [ station.id ( int | primary key ) , station.network_name ( text ) , station.services ( text ) , station.local_authority ( text ) ]\ntable route , columns = [ route.train_id ( int | primary key ) , route.station_id ( int | primary key ) ]\ntable weekly_weather , columns = [ weekly_weather.station_id ( int | primary key ) , weekly_weather.day_of_week ( text | primary key ) , weekly_weather.high_temperature ( int ) , weekly_weather.low_temperature ( int ) , weekly_weather.precipitation ( real ) , weekly_weather.wind_speed_mph ( int ) ]\nforeign keys :\nroute.station_id = station.id\nroute.train_id = train.id\nweekly_weather.station_id = station.id\nmatched contents :\ntrain.origin ( Chennai )\ntrain.destination ( Chennai )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncsu_fees.year ( 1996 )\ndegrees.year ( 1996 )\nenrollments.year ( 1996 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nplaylist.name ( Music )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nclass.class_code ( 10018 )\nenroll.class_code ( 10018 )",
  "database schema :\ntable pilot , columns = [ pilot.pilot_id ( int(11) | primary key ) , pilot.name ( varchar(50) ) , pilot.age ( int(11) ) ]\ntable aircraft , columns = [ aircraft.aircraft_id ( int(11) | primary key ) , aircraft.aircraft ( varchar(50) ) , aircraft.description ( varchar(50) ) , aircraft.max_gross_weight ( varchar(50) ) , aircraft.total_disk_area ( varchar(50) ) , aircraft.max_disk_loading ( varchar(50) ) ]\ntable match , columns = [ match.round ( real | primary key ) , match.location ( text ) , match.country ( text ) , match.date ( text ) , match.fastest_qualifying ( text ) , match.winning_pilot ( text ) , match.winning_aircraft ( text ) ]\ntable airport , columns = [ airport.airport_id ( int | primary key ) , airport.airport_name ( text ) , airport.total_passengers ( real ) , airport.%_change_2007 ( text ) , airport.international_passengers ( real ) , airport.domestic_passengers ( real ) , airport.transit_passengers ( real ) , airport.aircraft_movements ( real ) , airport.freight_metric_tonnes ( real ) ]\ntable airport_aircraft , columns = [ airport_aircraft.id ( int ) , airport_aircraft.airport_id ( int | primary key ) , airport_aircraft.aircraft_id ( int | primary key ) ]\nforeign keys :\nmatch.winning_pilot = pilot.pilot_id\nmatch.winning_aircraft = aircraft.aircraft_id\nairport_aircraft.aircraft_id = aircraft.aircraft_id\nairport_aircraft.airport_id = airport.airport_id\nmatched contents :\npilot.age ( 30 )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nphone.accreditation_type ( Full )",
  "database schema :\ntable club , columns = [ club.club_id ( int | primary key ) , club.name ( text ) , club.region ( text ) , club.start_year ( text ) ]\ntable club_rank , columns = [ club_rank.rank ( real | primary key ) , club_rank.club_id ( int | primary key ) , club_rank.gold ( real ) , club_rank.silver ( real ) , club_rank.bronze ( real ) , club_rank.total ( real ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.name ( text ) , player.position ( text ) , player.club_id ( int ) , player.apps ( real ) , player.tries ( real ) , player.goals ( text ) , player.points ( real ) ]\ntable competition , columns = [ competition.competition_id ( int | primary key ) , competition.year ( real ) , competition.competition_type ( text ) , competition.country ( text ) ]\ntable competition_result , columns = [ competition_result.competition_id ( int | primary key ) , competition_result.club_id_1 ( int | primary key ) , competition_result.club_id_2 ( int | primary key ) , competition_result.score ( text ) ]\nforeign keys :\nclub_rank.club_id = club.club_id\nplayer.club_id = club.club_id\ncompetition_result.competition_id = competition.competition_id\ncompetition_result.club_id_2 = club.club_id\ncompetition_result.club_id_1 = club.club_id\nmatched contents :\ncompetition.competition_type ( Friendly )",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nmember.hometown ( Louisville, Kentucky )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nstudent.advisor ( 1121 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomers.payment_method ( Cash )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\nproducts.product_name ( keyboard )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Alice )\nperson.gender ( female )\npersonfriend.name ( Alice )\npersonfriend.friend ( Alice )",
  "database schema :\ntable body_builder , columns = [ body_builder.body_builder_id ( int | primary key ) , body_builder.people_id ( int ) , body_builder.snatch ( real ) , body_builder.clean_jerk ( real ) , body_builder.total ( real ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.height ( real ) , people.weight ( real ) , people.birth_date ( text ) , people.birth_place ( text ) ]\nforeign keys :\nbody_builder.people_id = people.people_id\nmatched contents : None",
  "database schema :\ntable race , columns = [ race.race_id ( int | primary key ) , race.name ( text ) , race.class ( text ) , race.date ( text ) , race.track_id ( text ) ]\ntable track , columns = [ track.track_id ( int | primary key ) , track.name ( text ) , track.location ( text ) , track.seating ( real ) , track.year_opened ( real ) ]\nforeign keys :\nrace.track_id = track.track_id\nmatched contents :\nrace.race_id ( 1 )\nrace.track_id ( 1 )\ntrack.track_id ( 1 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nclub.clubname ( Tennis Club )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( San Jose )",
  "database schema :\ntable city , columns = [ city.city_id ( int | primary key ) , city.official_name ( text ) , city.status ( text ) , city.area_km_2 ( real ) , city.population ( real ) , city.census_ranking ( text ) ]\ntable farm , columns = [ farm.farm_id ( int | primary key ) , farm.year ( int ) , farm.total_horses ( real ) , farm.working_horses ( real ) , farm.total_cattle ( real ) , farm.oxen ( real ) , farm.bulls ( real ) , farm.cows ( real ) , farm.pigs ( real ) , farm.sheep_and_goats ( real ) ]\ntable farm_competition , columns = [ farm_competition.competition_id ( int | primary key ) , farm_competition.year ( int ) , farm_competition.theme ( text ) , farm_competition.host_city_id ( int ) , farm_competition.hosts ( text ) ]\ntable competition_record , columns = [ competition_record.competition_id ( int | primary key ) , competition_record.farm_id ( int | primary key ) , competition_record.rank ( int ) ]\nforeign keys :\nfarm_competition.host_city_id = city.city_id\ncompetition_record.farm_id = farm.farm_id\ncompetition_record.competition_id = farm_competition.competition_id\nmatched contents :\nfarm_competition.theme ( Aliens )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nemployees.employee_name ( Armani )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents :\nweb_client_accelerator.id ( 5 )",
  "database schema :\ntable school , columns = [ school.school_id ( int | primary key ) , school.school ( text ) , school.location ( text ) , school.enrollment ( real ) , school.founded ( real ) , school.denomination ( text ) , school.boys_or_girls ( text ) , school.day_or_boarding ( text ) , school.year_entered_competition ( real ) , school.school_colors ( text ) ]\ntable school_details , columns = [ school_details.school_id ( int | primary key ) , school_details.nickname ( text ) , school_details.colors ( text ) , school_details.league ( text ) , school_details.class ( text ) , school_details.division ( text ) ]\ntable school_performance , columns = [ school_performance.school_id ( int | primary key ) , school_performance.school_year ( text | primary key ) , school_performance.class_a ( text ) , school_performance.class_aa ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.team ( text ) , player.age ( int ) , player.position ( text ) , player.school_id ( int ) ]\nforeign keys :\nschool_details.school_id = school.school_id\nschool_performance.school_id = school.school_id\nplayer.school_id = school.school_id\nmatched contents :\nschool.denomination ( Catholic )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents :\nstudent.advisor ( 1121 )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nproducts.product_name ( flax )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nemployee.emp_lname ( Graztevski )",
  "database schema :\ntable perpetrator , columns = [ perpetrator.perpetrator_id ( int | primary key ) , perpetrator.people_id ( int ) , perpetrator.date ( text ) , perpetrator.year ( real ) , perpetrator.location ( text ) , perpetrator.country ( text ) , perpetrator.killed ( int ) , perpetrator.injured ( int ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.height ( real ) , people.weight ( real ) , people.`home town` ( text ) ]\nforeign keys :\nperpetrator.people_id = people.people_id\nmatched contents :\nperpetrator.country ( China )",
  "database schema :\ntable party , columns = [ party.party_id ( int | primary key ) , party.party_theme ( text ) , party.location ( text ) , party.first_year ( text ) , party.last_year ( text ) , party.number_of_hosts ( int ) ]\ntable host , columns = [ host.host_id ( int | primary key ) , host.name ( text ) , host.nationality ( text ) , host.age ( text ) ]\ntable party_host , columns = [ party_host.party_id ( int | primary key ) , party_host.host_id ( int | primary key ) , party_host.is_main_in_charge ( bool ) ]\nforeign keys :\nparty_host.party_id = party.party_id\nparty_host.host_id = host.host_id\nmatched contents :\nhost.age ( 45 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable premises , columns = [ premises.premise_id ( integer | primary key ) , premises.premises_type ( varchar(15) ) , premises.premise_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_category ( varchar(15) ) , products.product_name ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_login ( varchar(80) ) , customers.customer_password ( varchar(10) ) ]\ntable mailshot_campaigns , columns = [ mailshot_campaigns.mailshot_id ( integer | primary key ) , mailshot_campaigns.product_category ( varchar(15) ) , mailshot_campaigns.mailshot_name ( varchar(80) ) , mailshot_campaigns.mailshot_start_date ( datetime ) , mailshot_campaigns.mailshot_end_date ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.premise_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type_code ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(15) ) , customer_orders.shipping_method_code ( varchar(15) ) , customer_orders.order_placed_datetime ( datetime ) , customer_orders.order_delivered_datetime ( datetime ) , customer_orders.order_shipping_charges ( varchar(255) ) ]\ntable mailshot_customers , columns = [ mailshot_customers.mailshot_id ( integer ) , mailshot_customers.customer_id ( integer ) , mailshot_customers.outcome_code ( varchar(15) ) , mailshot_customers.mailshot_customer_date ( datetime ) ]\ntable order_items , columns = [ order_items.item_id ( integer ) , order_items.order_item_status_code ( varchar(15) ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.item_status_code ( varchar(15) ) , order_items.item_delivered_datetime ( datetime ) , order_items.item_order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.premise_id = premises.premise_id\ncustomer_orders.customer_id = customers.customer_id\nmailshot_customers.mailshot_id = mailshot_campaigns.mailshot_id\nmailshot_customers.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\nmailshot_customers.outcome_code ( No Response )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.product_price ( double ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(15) ) , customers.customer_number ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable contacts , columns = [ contacts.contact_id ( integer | primary key ) , contacts.customer_id ( integer ) , contacts.gender ( varchar(1) ) , contacts.first_name ( varchar(80) ) , contacts.last_name ( varchar(50) ) , contacts.contact_phone ( varchar(80) ) ]\ntable customer_address_history , columns = [ customer_address_history.customer_id ( integer ) , customer_address_history.address_id ( integer ) , customer_address_history.date_from ( datetime ) , customer_address_history.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.order_status_code ( varchar(15) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_address_history.address_id = addresses.address_id\ncustomer_address_history.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents : None",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.title ( text ) , film.studio ( text ) , film.director ( text ) , film.gross_in_dollar ( int ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.country ( text ) , market.number_cities ( int ) ]\ntable film_market_estimation , columns = [ film_market_estimation.estimation_id ( int | primary key ) , film_market_estimation.low_estimate ( real ) , film_market_estimation.high_estimate ( real ) , film_market_estimation.film_id ( int ) , film_market_estimation.type ( text ) , film_market_estimation.market_id ( int ) , film_market_estimation.year ( int ) ]\nforeign keys :\nfilm_market_estimation.market_id = market.market_id\nfilm_market_estimation.film_id = film.film_id\nmatched contents :\nfilm.studio ( Universal )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\ncountry.official_native_language ( English )",
  "database schema :\ntable player_attributes , columns = [ player_attributes.id ( integer | primary key ) , player_attributes.player_fifa_api_id ( integer ) , player_attributes.player_api_id ( integer ) , player_attributes.date ( text ) , player_attributes.overall_rating ( integer ) , player_attributes.potential ( integer ) , player_attributes.preferred_foot ( text ) , player_attributes.attacking_work_rate ( text ) , player_attributes.defensive_work_rate ( text ) , player_attributes.crossing ( integer ) , player_attributes.finishing ( integer ) , player_attributes.heading_accuracy ( integer ) , player_attributes.short_passing ( integer ) , player_attributes.volleys ( integer ) , player_attributes.dribbling ( integer ) , player_attributes.curve ( integer ) , player_attributes.free_kick_accuracy ( integer ) , player_attributes.long_passing ( integer ) , player_attributes.ball_control ( integer ) , player_attributes.acceleration ( integer ) , player_attributes.sprint_speed ( integer ) , player_attributes.agility ( integer ) , player_attributes.reactions ( integer ) , player_attributes.balance ( integer ) , player_attributes.shot_power ( integer ) , player_attributes.jumping ( integer ) , player_attributes.stamina ( integer ) , player_attributes.strength ( integer ) , player_attributes.long_shots ( integer ) , player_attributes.aggression ( integer ) , player_attributes.interceptions ( integer ) , player_attributes.positioning ( integer ) , player_attributes.vision ( integer ) , player_attributes.penalties ( integer ) , player_attributes.marking ( integer ) , player_attributes.standing_tackle ( integer ) , player_attributes.sliding_tackle ( integer ) , player_attributes.gk_diving ( integer ) , player_attributes.gk_handling ( integer ) , player_attributes.gk_kicking ( integer ) , player_attributes.gk_positioning ( integer ) , player_attributes.gk_reflexes ( integer ) ]\ntable player , columns = [ player.id ( integer | primary key ) , player.player_api_id ( integer ) , player.player_name ( text ) , player.player_fifa_api_id ( integer ) , player.birthday ( text ) , player.height ( integer ) , player.weight ( integer ) ]\ntable league , columns = [ league.id ( integer | primary key ) , league.country_id ( integer ) , league.name ( text ) ]\ntable country , columns = [ country.id ( integer | primary key ) , country.name ( text ) ]\ntable team , columns = [ team.id ( integer | primary key ) , team.team_api_id ( integer ) , team.team_fifa_api_id ( integer ) , team.team_long_name ( text ) , team.team_short_name ( text ) ]\ntable team_attributes , columns = [ team_attributes.id ( integer | primary key ) , team_attributes.team_fifa_api_id ( integer ) , team_attributes.team_api_id ( integer ) , team_attributes.date ( text ) , team_attributes.buildupplayspeed ( integer ) , team_attributes.buildupplayspeedclass ( text ) , team_attributes.buildupplaydribbling ( integer ) , team_attributes.buildupplaydribblingclass ( text ) , team_attributes.buildupplaypassing ( integer ) , team_attributes.buildupplaypassingclass ( text ) , team_attributes.buildupplaypositioningclass ( text ) , team_attributes.chancecreationpassing ( integer ) , team_attributes.chancecreationpassingclass ( text ) , team_attributes.chancecreationcrossing ( integer ) , team_attributes.chancecreationcrossingclass ( text ) , team_attributes.chancecreationshooting ( integer ) , team_attributes.chancecreationshootingclass ( text ) , team_attributes.chancecreationpositioningclass ( text ) , team_attributes.defencepressure ( integer ) , team_attributes.defencepressureclass ( text ) , team_attributes.defenceaggression ( integer ) , team_attributes.defenceaggressionclass ( text ) , team_attributes.defenceteamwidth ( integer ) , team_attributes.defenceteamwidthclass ( text ) , team_attributes.defencedefenderlineclass ( text ) ]\nforeign keys :\nplayer_attributes.player_api_id = player.player_api_id\nplayer_attributes.player_fifa_api_id = player.player_fifa_api_id\nleague.country_id = country.id\nteam_attributes.team_api_id = team.team_api_id\nteam_attributes.team_fifa_api_id = team.team_fifa_api_id\nmatched contents :\nplayer_attributes.defensive_work_rate ( 3 )\nplayer_attributes.crossing ( 3 )\nplayer_attributes.finishing ( 3 )\nplayer_attributes.dribbling ( 3 )\nplayer_attributes.free_kick_accuracy ( 3 )\nplayer_attributes.gk_diving ( 3 )\nplayer_attributes.gk_handling ( 3 )\nplayer_attributes.gk_kicking ( 3 )\nplayer_attributes.gk_positioning ( 3 )\nplayer.id ( 3 )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\norganisation_types.organisation_type_description ( Research )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nfeatures.feature_details ( parking , shopping )\ntourist_attractions.name ( parking )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\nlocations.city ( London )",
  "database schema :\ntable festival_detail , columns = [ festival_detail.festival_id ( int | primary key ) , festival_detail.festival_name ( text ) , festival_detail.chair_name ( text ) , festival_detail.location ( text ) , festival_detail.year ( int ) , festival_detail.num_of_audience ( int ) ]\ntable artwork , columns = [ artwork.artwork_id ( int | primary key ) , artwork.type ( text ) , artwork.name ( text ) ]\ntable nomination , columns = [ nomination.artwork_id ( int | primary key ) , nomination.festival_id ( int | primary key ) , nomination.result ( text ) ]\nforeign keys :\nnomination.festival_id = festival_detail.festival_id\nnomination.artwork_id = artwork.artwork_id\nmatched contents :\nfestival_detail.year ( 2008 , 2010 )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\nmountain.country ( Ethiopia )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nclub.clubname ( Bootup Baltimore )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.rating ( 7 )\ngenre.most_popular_in ( Bangladesh )\nartist.country ( Bangladesh )\nsong.country ( Bangladesh )\nsong.rating ( 7 )",
  "database schema :\ntable follows , columns = [ follows.f1 ( int(11) | primary key | comment : user id ) , follows.f2 ( int(11) | primary key | comment : follower id ) ]\ntable tweets , columns = [ tweets.id ( bigint(20) | primary key ) , tweets.uid ( int(11) | comment : user id ) , tweets.text ( char(140) ) , tweets.createdate ( datetime ) ]\ntable user_profiles , columns = [ user_profiles.uid ( int(11) | primary key ) , user_profiles.name ( varchar(255) ) , user_profiles.email ( varchar(255) ) , user_profiles.partitionid ( int(11) ) , user_profiles.followers ( int(11) ) ]\nforeign keys :\nfollows.f2 = user_profiles.uid\nfollows.f1 = user_profiles.uid\ntweets.uid = user_profiles.uid\nmatched contents :\nfollows.f1 ( 5 )\nfollows.f2 ( 5 )\ntweets.id ( 5 )\ntweets.uid ( 5 )\nuser_profiles.uid ( 5 )\nuser_profiles.partitionid ( 5 )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\npayments.payment_type_code ( Check )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.year ( 2014 , 2017 )\nseasons.year ( 2014 , 2017 )\nresults.resultid ( 2014 , 2017 )\nconstructorresults.constructorresultsid ( 2014 , 2017 )\nqualifying.qualifyid ( 2014 , 2017 )",
  "database schema :\ntable entrepreneur , columns = [ entrepreneur.entrepreneur_id ( int | primary key ) , entrepreneur.people_id ( int ) , entrepreneur.company ( text ) , entrepreneur.money_requested ( real ) , entrepreneur.investor ( text ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.height ( real ) , people.weight ( real ) , people.date_of_birth ( text ) ]\nforeign keys :\nentrepreneur.people_id = people.people_id\nmatched contents :\nentrepreneur.investor ( Rachel Elnaugh )",
  "database schema :\ntable pilot , columns = [ pilot.pilot_id ( int(11) | primary key ) , pilot.name ( varchar(50) ) , pilot.age ( int(11) ) ]\ntable aircraft , columns = [ aircraft.aircraft_id ( int(11) | primary key ) , aircraft.aircraft ( varchar(50) ) , aircraft.description ( varchar(50) ) , aircraft.max_gross_weight ( varchar(50) ) , aircraft.total_disk_area ( varchar(50) ) , aircraft.max_disk_loading ( varchar(50) ) ]\ntable match , columns = [ match.round ( real | primary key ) , match.location ( text ) , match.country ( text ) , match.date ( text ) , match.fastest_qualifying ( text ) , match.winning_pilot ( text ) , match.winning_aircraft ( text ) ]\ntable airport , columns = [ airport.airport_id ( int | primary key ) , airport.airport_name ( text ) , airport.total_passengers ( real ) , airport.%_change_2007 ( text ) , airport.international_passengers ( real ) , airport.domestic_passengers ( real ) , airport.transit_passengers ( real ) , airport.aircraft_movements ( real ) , airport.freight_metric_tonnes ( real ) ]\ntable airport_aircraft , columns = [ airport_aircraft.id ( int ) , airport_aircraft.airport_id ( int | primary key ) , airport_aircraft.aircraft_id ( int | primary key ) ]\nforeign keys :\nmatch.winning_pilot = pilot.pilot_id\nmatch.winning_aircraft = aircraft.aircraft_id\nairport_aircraft.aircraft_id = aircraft.aircraft_id\nairport_aircraft.airport_id = airport.airport_id\nmatched contents :\nairport.airport_name ( London Heathrow )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.department_name ( Marketing )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 3 )\nstatus.station_id ( 3 )\nstatus.bikes_available ( 3 )\nstatus.docks_available ( 3 )\ntrip.start_station_id ( 3 )\ntrip.end_station_id ( 3 )\nweather.mean_wind_speed_mph ( 3 )\nweather.cloud_cover ( 3 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2014 )\nappearances.year ( 2014 )\nbatting.year ( 2014 )\nbatting_postseason.year ( 2014 )\nfielding.year ( 2014 )\nfielding.inn_outs ( 2014 )\nfielding_postseason.year ( 2014 )\nhall_of_fame.yearid ( 2014 )\nhome_game.year ( 2014 )\nhome_game.attendance ( 2014 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nvideo_games.gname ( Call of Destiny , Works of Widenius )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nlocations.address ( 660 Shea Crescent )\ntourist_attractions.how_to_get_there ( walk )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.appelation ( Central Coast )\nappellations.area ( Central Coast )\nwine.appelation ( Central Coast )\nwine.year ( 2005 )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\naddresses.address_id ( 3 )\nstudents.student_id ( 3 )\nassessment_notes.notes_id ( 3 )\nassessment_notes.student_id ( 3 )\nassessment_notes.teacher_id ( 3 )\nbehavior_incident.incident_id ( 3 )\ndetention.detention_id ( 3 )\ndetention.teacher_id ( 3 )\nstudent_addresses.student_id ( 3 )\nstudent_addresses.address_id ( 3 )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartments.apt_number ( Suite 634 )",
  "database schema :\ntable manufacturer , columns = [ manufacturer.manufacturer_id ( int | primary key ) , manufacturer.open_year ( real ) , manufacturer.name ( text ) , manufacturer.num_of_factories ( int ) , manufacturer.num_of_shops ( int ) ]\ntable furniture , columns = [ furniture.furniture_id ( int | primary key ) , furniture.name ( text ) , furniture.num_of_component ( int ) , furniture.market_rate ( real ) ]\ntable furniture_manufacte , columns = [ furniture_manufacte.manufacturer_id ( int | primary key ) , furniture_manufacte.furniture_id ( int | primary key ) , furniture_manufacte.price_in_dollar ( real ) ]\nforeign keys :\nfurniture_manufacte.furniture_id = furniture.furniture_id\nfurniture_manufacte.manufacturer_id = manufacturer.manufacturer_id\nmatched contents :\nmanufacturer.manufacturer_id ( 6 )\nfurniture.furniture_id ( 6 )\nfurniture.num_of_component ( 6 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ngenre.name ( Jazz )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.albumid ( 1 )\nalbum.artistid ( 1 )\nartist.artistid ( 1 )\ncustomer.customerid ( 1 )\nemployee.employeeid ( 1 )\nemployee.reportsto ( 1 )\ngenre.genreid ( 1 )\ninvoice.invoiceid ( 1 )\ninvoice.customerid ( 1 )\ninvoiceline.invoiceid ( 1 )",
  "database schema :\ntable driver , columns = [ driver.driver_id ( int | primary key ) , driver.name ( text ) , driver.party ( text ) , driver.home_city ( text ) , driver.age ( int ) ]\ntable school , columns = [ school.school_id ( int | primary key ) , school.grade ( text ) , school.school ( text ) , school.location ( text ) , school.type ( text ) ]\ntable school_bus , columns = [ school_bus.school_id ( int | primary key ) , school_bus.driver_id ( int | primary key ) , school_bus.years_working ( int ) , school_bus.if_full_time ( bool ) ]\nforeign keys :\nschool_bus.driver_id = driver.driver_id\nschool_bus.school_id = school.school_id\nmatched contents : None",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_document_types.document_type_name ( Film )",
  "database schema :\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(20) ) , products.product_price ( decimal(19,4) ) , products.product_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(10) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.date_became_customer ( datetime ) ]\ntable regular_orders , columns = [ regular_orders.regular_order_id ( integer | primary key ) , regular_orders.distributer_id ( integer ) ]\ntable regular_order_products , columns = [ regular_order_products.regular_order_id ( integer ) , regular_order_products.product_id ( integer ) ]\ntable actual_orders , columns = [ actual_orders.actual_order_id ( integer | primary key ) , actual_orders.order_status_code ( varchar(10) ) , actual_orders.regular_order_id ( integer ) , actual_orders.actual_order_date ( datetime ) ]\ntable actual_order_products , columns = [ actual_order_products.actual_order_id ( integer ) , actual_order_products.product_id ( integer ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_from ( datetime ) , customer_addresses.address_type ( varchar(10) ) , customer_addresses.date_to ( datetime ) ]\ntable delivery_routes , columns = [ delivery_routes.route_id ( integer | primary key ) , delivery_routes.route_name ( varchar(50) ) , delivery_routes.other_route_details ( varchar(255) ) ]\ntable delivery_route_locations , columns = [ delivery_route_locations.location_code ( varchar(10) | primary key ) , delivery_route_locations.route_id ( integer ) , delivery_route_locations.location_address_id ( integer ) , delivery_route_locations.location_name ( varchar(50) ) ]\ntable trucks , columns = [ trucks.truck_id ( integer | primary key ) , trucks.truck_licence_number ( varchar(20) ) , trucks.truck_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.employee_address_id ( integer ) , employees.employee_name ( varchar(80) ) , employees.employee_phone ( varchar(80) ) ]\ntable order_deliveries , columns = [ order_deliveries.location_code ( varchar(10) ) , order_deliveries.actual_order_id ( integer ) , order_deliveries.delivery_status_code ( varchar(10) ) , order_deliveries.driver_employee_id ( integer ) , order_deliveries.truck_id ( integer ) , order_deliveries.delivery_date ( datetime ) ]\nforeign keys :\nregular_orders.distributer_id = customers.customer_id\nregular_order_products.regular_order_id = regular_orders.regular_order_id\nregular_order_products.product_id = products.product_id\nactual_orders.regular_order_id = regular_orders.regular_order_id\nactual_order_products.actual_order_id = actual_orders.actual_order_id\nactual_order_products.product_id = products.product_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ndelivery_route_locations.route_id = delivery_routes.route_id\ndelivery_route_locations.location_address_id = addresses.address_id\nemployees.employee_address_id = addresses.address_id\norder_deliveries.driver_employee_id = employees.employee_id\norder_deliveries.location_code = delivery_route_locations.location_code\norder_deliveries.actual_order_id = actual_orders.actual_order_id\norder_deliveries.truck_id = trucks.truck_id\nmatched contents :\ncustomers.payment_method ( Visa )",
  "database schema :\ntable customer_master_index , columns = [ customer_master_index.master_customer_id ( integer | primary key ) , customer_master_index.cmi_details ( varchar(255) ) ]\ntable cmi_cross_references , columns = [ cmi_cross_references.cmi_cross_ref_id ( integer | primary key | comment : cmi cross reference id ) , cmi_cross_references.master_customer_id ( integer ) , cmi_cross_references.source_system_code ( char(15) ) ]\ntable council_tax , columns = [ council_tax.council_tax_id ( integer | primary key ) , council_tax.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable business_rates , columns = [ business_rates.business_rates_id ( integer | primary key ) , business_rates.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable benefits_overpayments , columns = [ benefits_overpayments.council_tax_id ( integer | primary key ) , benefits_overpayments.cmi_cross_ref_id ( integer ) ]\ntable parking_fines , columns = [ parking_fines.council_tax_id ( integer | primary key ) , parking_fines.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable rent_arrears , columns = [ rent_arrears.council_tax_id ( integer | primary key ) , rent_arrears.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable electoral_register , columns = [ electoral_register.electoral_register_id ( integer | primary key ) , electoral_register.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\nforeign keys :\ncmi_cross_references.master_customer_id = customer_master_index.master_customer_id\ncouncil_tax.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbusiness_rates.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbenefits_overpayments.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nparking_fines.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nrent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nelectoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nmatched contents :\ncmi_cross_references.source_system_code ( Benefits , Tax )",
  "database schema :\ntable player_attributes , columns = [ player_attributes.id ( integer | primary key ) , player_attributes.player_fifa_api_id ( integer ) , player_attributes.player_api_id ( integer ) , player_attributes.date ( text ) , player_attributes.overall_rating ( integer ) , player_attributes.potential ( integer ) , player_attributes.preferred_foot ( text ) , player_attributes.attacking_work_rate ( text ) , player_attributes.defensive_work_rate ( text ) , player_attributes.crossing ( integer ) , player_attributes.finishing ( integer ) , player_attributes.heading_accuracy ( integer ) , player_attributes.short_passing ( integer ) , player_attributes.volleys ( integer ) , player_attributes.dribbling ( integer ) , player_attributes.curve ( integer ) , player_attributes.free_kick_accuracy ( integer ) , player_attributes.long_passing ( integer ) , player_attributes.ball_control ( integer ) , player_attributes.acceleration ( integer ) , player_attributes.sprint_speed ( integer ) , player_attributes.agility ( integer ) , player_attributes.reactions ( integer ) , player_attributes.balance ( integer ) , player_attributes.shot_power ( integer ) , player_attributes.jumping ( integer ) , player_attributes.stamina ( integer ) , player_attributes.strength ( integer ) , player_attributes.long_shots ( integer ) , player_attributes.aggression ( integer ) , player_attributes.interceptions ( integer ) , player_attributes.positioning ( integer ) , player_attributes.vision ( integer ) , player_attributes.penalties ( integer ) , player_attributes.marking ( integer ) , player_attributes.standing_tackle ( integer ) , player_attributes.sliding_tackle ( integer ) , player_attributes.gk_diving ( integer ) , player_attributes.gk_handling ( integer ) , player_attributes.gk_kicking ( integer ) , player_attributes.gk_positioning ( integer ) , player_attributes.gk_reflexes ( integer ) ]\ntable player , columns = [ player.id ( integer | primary key ) , player.player_api_id ( integer ) , player.player_name ( text ) , player.player_fifa_api_id ( integer ) , player.birthday ( text ) , player.height ( integer ) , player.weight ( integer ) ]\ntable league , columns = [ league.id ( integer | primary key ) , league.country_id ( integer ) , league.name ( text ) ]\ntable country , columns = [ country.id ( integer | primary key ) , country.name ( text ) ]\ntable team , columns = [ team.id ( integer | primary key ) , team.team_api_id ( integer ) , team.team_fifa_api_id ( integer ) , team.team_long_name ( text ) , team.team_short_name ( text ) ]\ntable team_attributes , columns = [ team_attributes.id ( integer | primary key ) , team_attributes.team_fifa_api_id ( integer ) , team_attributes.team_api_id ( integer ) , team_attributes.date ( text ) , team_attributes.buildupplayspeed ( integer ) , team_attributes.buildupplayspeedclass ( text ) , team_attributes.buildupplaydribbling ( integer ) , team_attributes.buildupplaydribblingclass ( text ) , team_attributes.buildupplaypassing ( integer ) , team_attributes.buildupplaypassingclass ( text ) , team_attributes.buildupplaypositioningclass ( text ) , team_attributes.chancecreationpassing ( integer ) , team_attributes.chancecreationpassingclass ( text ) , team_attributes.chancecreationcrossing ( integer ) , team_attributes.chancecreationcrossingclass ( text ) , team_attributes.chancecreationshooting ( integer ) , team_attributes.chancecreationshootingclass ( text ) , team_attributes.chancecreationpositioningclass ( text ) , team_attributes.defencepressure ( integer ) , team_attributes.defencepressureclass ( text ) , team_attributes.defenceaggression ( integer ) , team_attributes.defenceaggressionclass ( text ) , team_attributes.defenceteamwidth ( integer ) , team_attributes.defenceteamwidthclass ( text ) , team_attributes.defencedefenderlineclass ( text ) ]\nforeign keys :\nplayer_attributes.player_api_id = player.player_api_id\nplayer_attributes.player_fifa_api_id = player.player_fifa_api_id\nleague.country_id = country.id\nteam_attributes.team_api_id = team.team_api_id\nteam_attributes.team_fifa_api_id = team.team_fifa_api_id\nmatched contents :\nplayer_attributes.preferred_foot ( right )\nplayer_attributes.crossing ( 90 )\nplayer_attributes.finishing ( 90 )\nplayer_attributes.dribbling ( 90 )\nplayer_attributes.curve ( 90 )\nplayer_attributes.ball_control ( 90 )\nplayer_attributes.acceleration ( 90 )\nplayer_attributes.agility ( 90 )\nplayer_attributes.balance ( 90 )\nplayer_attributes.aggression ( 90 )\nplayer.id ( 90 )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.winery ( John Anthony )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nstadium.opening_year ( 2006 )",
  "database schema :\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.home_games ( int ) , stadium.average_attendance ( real ) , stadium.total_attendance ( real ) , stadium.capacity_percentage ( real ) ]\ntable game , columns = [ game.stadium_id ( int ) , game.id ( int | primary key ) , game.season ( int ) , game.date ( text ) , game.home_team ( text ) , game.away_team ( text ) , game.score ( text ) , game.competition ( text ) ]\ntable injury_accident , columns = [ injury_accident.game_id ( int ) , injury_accident.id ( int | primary key ) , injury_accident.player ( text ) , injury_accident.injury ( text ) , injury_accident.number_of_matches ( text ) , injury_accident.source ( text ) ]\nforeign keys :\ngame.stadium_id = stadium.id\ninjury_accident.game_id = game.id\nmatched contents :\ngame.season ( 2007 )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents : None",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.gender ( female )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\nstudents.personal_name ( Karson )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_colors.color_code ( 2 )\ncharacteristics.characteristic_id ( 2 )\nproducts.product_id ( 2 )\nproducts.color_code ( 2 )\nproduct_characteristics.characteristic_id ( 2 )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nmanufacturers.headquarter ( Austin )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.lname ( Blume )\nauthors.fname ( Matthias )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergy ( Milk , Eggs )\nhas_allergy.allergy ( Milk , Eggs )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ncustomer.state ( NY )\ninvoice.billingstate ( NY )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable properties , columns = [ properties.property_id ( integer | primary key ) , properties.property_type_code ( char(15) ) , properties.property_address ( varchar(255) ) , properties.other_details ( varchar(255) ) ]\ntable residents , columns = [ residents.resident_id ( integer | primary key ) , residents.property_id ( integer | primary key ) , residents.date_moved_in ( datetime | primary key ) , residents.date_moved_out ( datetime ) , residents.other_details ( varchar(255) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.parent_organization_id ( integer ) , organizations.organization_details ( varchar(255) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.organization_id ( integer ) , services.service_type_code ( char(15) ) , services.service_details ( varchar(255) ) ]\ntable residents_services , columns = [ residents_services.resident_id ( integer | primary key ) , residents_services.service_id ( integer | primary key ) , residents_services.date_moved_in ( datetime ) , residents_services.property_id ( integer ) , residents_services.date_requested ( datetime ) , residents_services.date_provided ( datetime ) , residents_services.other_details ( varchar(255) ) ]\ntable things , columns = [ things.thing_id ( integer | primary key ) , things.organization_id ( integer ) , things.type_of_thing_code ( char(15) ) , things.service_type_code ( char(10) ) , things.service_details ( varchar(255) ) ]\ntable customer_events , columns = [ customer_events.customer_event_id ( integer | primary key ) , customer_events.customer_id ( integer ) , customer_events.date_moved_in ( datetime ) , customer_events.property_id ( integer ) , customer_events.resident_id ( integer ) , customer_events.thing_id ( integer ) ]\ntable customer_event_notes , columns = [ customer_event_notes.customer_event_note_id ( integer | primary key ) , customer_event_notes.customer_event_id ( integer ) , customer_event_notes.service_type_code ( char(15) ) , customer_event_notes.resident_id ( integer ) , customer_event_notes.property_id ( integer ) , customer_event_notes.date_moved_in ( datetime ) ]\ntable timed_status_of_things , columns = [ timed_status_of_things.thing_id ( integer | primary key ) , timed_status_of_things.date_and_date ( datetime | primary key ) , timed_status_of_things.status_of_thing_code ( char(15) | primary key ) ]\ntable timed_locations_of_things , columns = [ timed_locations_of_things.thing_id ( integer | primary key ) , timed_locations_of_things.date_and_time ( datetime | primary key ) , timed_locations_of_things.location_code ( char(15) | primary key ) ]\nforeign keys :\nresidents.property_id = properties.property_id\nservices.organization_id = organizations.organization_id\nresidents_services.resident_id = residents.resident_id\nresidents_services.property_id = residents.property_id\nresidents_services.date_moved_in = residents.date_moved_in\nresidents_services.service_id = services.service_id\nthings.organization_id = organizations.organization_id\ncustomer_events.resident_id = residents.resident_id\ncustomer_events.property_id = residents.property_id\ncustomer_events.date_moved_in = residents.date_moved_in\ncustomer_events.customer_id = customers.customer_id\ncustomer_events.thing_id = things.thing_id\ncustomer_event_notes.customer_event_id = customer_events.customer_event_id\ntimed_status_of_things.thing_id = things.thing_id\ntimed_locations_of_things.thing_id = things.thing_id\nmatched contents :\nservices.service_details ( Unsatisfied )\nresidents_services.other_details ( Unsatisfied )\nthings.service_details ( Unsatisfied )",
  "database schema :\ntable school , columns = [ school.school_id ( int | primary key ) , school.school ( text ) , school.location ( text ) , school.enrollment ( real ) , school.founded ( real ) , school.denomination ( text ) , school.boys_or_girls ( text ) , school.day_or_boarding ( text ) , school.year_entered_competition ( real ) , school.school_colors ( text ) ]\ntable school_details , columns = [ school_details.school_id ( int | primary key ) , school_details.nickname ( text ) , school_details.colors ( text ) , school_details.league ( text ) , school_details.class ( text ) , school_details.division ( text ) ]\ntable school_performance , columns = [ school_performance.school_id ( int | primary key ) , school_performance.school_year ( text | primary key ) , school_performance.class_a ( text ) , school_performance.class_aa ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.team ( text ) , player.age ( int ) , player.position ( text ) , player.school_id ( int ) ]\nforeign keys :\nschool_details.school_id = school.school_id\nschool_performance.school_id = school.school_id\nplayer.school_id = school.school_id\nmatched contents : None",
  "database schema :\ntable program , columns = [ program.program_id ( int | primary key ) , program.name ( text ) , program.origin ( text ) , program.launch ( real ) , program.owner ( text ) ]\ntable channel , columns = [ channel.channel_id ( int | primary key ) , channel.name ( text ) , channel.owner ( text ) , channel.share_in_percent ( real ) , channel.rating_in_percent ( real ) ]\ntable broadcast , columns = [ broadcast.channel_id ( int | primary key ) , broadcast.program_id ( int | primary key ) , broadcast.time_of_day ( text ) ]\ntable broadcast_share , columns = [ broadcast_share.channel_id ( int | primary key ) , broadcast_share.program_id ( int | primary key ) , broadcast_share.date ( text ) , broadcast_share.share_in_percent ( real ) ]\nforeign keys :\nbroadcast.program_id = program.program_id\nbroadcast.channel_id = channel.channel_id\nbroadcast_share.program_id = program.program_id\nbroadcast_share.channel_id = channel.channel_id\nmatched contents :\nbroadcast.time_of_day ( Morning , Night )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\ncounty.county_name ( Howard )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.appelation ( Sonoma County )\nappellations.county ( Sonoma )\nwine.appelation ( Sonoma County )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomer_contact_channels.channel_code ( Email )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.lname ( Tai )\nstudent.fname ( Eric )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nref_document_status.document_status_code ( done )\ndocuments.document_status_code ( done )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.first_name ( Daan )\ncustomers.last_name ( Peeters )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 1985 , 1990 )\nappearances.year ( 1985 , 1990 )\nmanager_award.year ( 1985 )\nbatting.year ( 1985 , 1990 )\nbatting_postseason.year ( 1985 , 1990 )\nfielding.year ( 1985 , 1990 )\nfielding.inn_outs ( 1990 )\nfielding_postseason.year ( 1985 , 1990 )\nhall_of_fame.yearid ( 1985 , 1990 )\nhall_of_fame.category ( Player )\nhome_game.year ( 1985 , 1990 )\nmanager.year ( 1985 , 1990 )\nplayer.name_first ( Len )\nplayer.name_last ( Barker )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nrecord.result ( Win )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nactivity.activity_name ( Canoeing , Kayaking )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.name ( text ) , artist.country ( text ) , artist.year_join ( int ) , artist.age ( int ) ]\ntable exhibition , columns = [ exhibition.exhibition_id ( int | primary key ) , exhibition.year ( int ) , exhibition.theme ( text ) , exhibition.artist_id ( int ) , exhibition.ticket_price ( real ) ]\ntable exhibition_record , columns = [ exhibition_record.exhibition_id ( int | primary key ) , exhibition_record.date ( text | primary key ) , exhibition_record.attendance ( int ) ]\nforeign keys :\nexhibition.artist_id = artist.artist_id\nexhibition_record.exhibition_id = exhibition.exhibition_id\nmatched contents :\nexhibition.year ( 2004 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents : None",
  "database schema :\ntable race , columns = [ race.race_id ( int | primary key ) , race.name ( text ) , race.class ( text ) , race.date ( text ) , race.track_id ( text ) ]\ntable track , columns = [ track.track_id ( int | primary key ) , track.name ( text ) , track.location ( text ) , track.seating ( real ) , track.year_opened ( real ) ]\nforeign keys :\nrace.track_id = track.track_id\nmatched contents : None",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents :\nenzyme.product ( Heme )",
  "database schema :\ntable perpetrator , columns = [ perpetrator.perpetrator_id ( int | primary key ) , perpetrator.people_id ( int ) , perpetrator.date ( text ) , perpetrator.year ( real ) , perpetrator.location ( text ) , perpetrator.country ( text ) , perpetrator.killed ( int ) , perpetrator.injured ( int ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.height ( real ) , people.weight ( real ) , people.`home town` ( text ) ]\nforeign keys :\nperpetrator.people_id = people.people_id\nmatched contents : None",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_details ( varchar(255) ) ]\ntable policies , columns = [ policies.policy_id ( integer | primary key ) , policies.customer_id ( integer ) , policies.policy_type_code ( char(15) ) , policies.start_date ( datetime ) , policies.end_date ( datetime ) ]\ntable claim_headers , columns = [ claim_headers.claim_header_id ( integer | primary key ) , claim_headers.claim_status_code ( char(15) ) , claim_headers.claim_type_code ( char(15) ) , claim_headers.policy_id ( integer ) , claim_headers.date_of_claim ( datetime ) , claim_headers.date_of_settlement ( datetime ) , claim_headers.amount_claimed ( decimal(20,4) ) , claim_headers.amount_piad ( decimal(20,4) ) ]\ntable claims_documents , columns = [ claims_documents.claim_id ( integer | primary key ) , claims_documents.document_type_code ( char(15) | primary key ) , claims_documents.created_by_staff_id ( integer ) , claims_documents.created_date ( integer ) ]\ntable claims_processing_stages , columns = [ claims_processing_stages.claim_stage_id ( integer | primary key ) , claims_processing_stages.next_claim_stage_id ( integer ) , claims_processing_stages.claim_status_name ( varchar(255) ) , claims_processing_stages.claim_status_description ( varchar(255) ) ]\ntable claims_processing , columns = [ claims_processing.claim_processing_id ( integer | primary key ) , claims_processing.claim_id ( integer ) , claims_processing.claim_outcome_code ( char(15) ) , claims_processing.claim_stage_id ( integer ) , claims_processing.staff_id ( integer ) ]\nforeign keys :\npolicies.customer_id = customers.customer_id\nclaim_headers.policy_id = policies.policy_id\nclaims_documents.created_by_staff_id = staff.staff_id\nclaims_documents.claim_id = claim_headers.claim_header_id\nclaims_processing.staff_id = staff.staff_id\nclaims_processing.claim_id = claim_headers.claim_header_id\nmatched contents :\npolicies.policy_type_code ( Uniformed , Deputy )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 1990 , 2000 )\nappearances.year ( 1990 , 2000 )\nbatting.year ( 1990 , 2000 )\nbatting_postseason.year ( 1990 , 2000 )\nfielding.year ( 1990 , 2000 )\nfielding.inn_outs ( 1990 , 2000 )\nfielding_postseason.year ( 1990 , 2000 )\nhall_of_fame.yearid ( 1990 , 2000 )\nhome_game.year ( 1990 , 2000 )\nhome_game.attendance ( 2000 )\nmanager.year ( 1990 )\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\nmatch_season.position ( Forward , Defender )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nteachers.lastname ( TARRING )\nteachers.firstname ( LEIA )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.g_name ( modern )\nartist.preferred_genre ( modern )\nsong.genre_is ( modern )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents : None",
  "database schema :\ntable school , columns = [ school.school_id ( text | primary key ) , school.school_name ( text ) , school.location ( text ) , school.mascot ( text ) , school.enrollment ( int ) , school.ihsaa_class ( text ) , school.ihsaa_football_class ( text ) , school.county ( text ) ]\ntable budget , columns = [ budget.school_id ( int | primary key ) , budget.year ( int | primary key ) , budget.budgeted ( int ) , budget.total_budget_percent_budgeted ( real ) , budget.invested ( int ) , budget.total_budget_percent_invested ( real ) , budget.budget_invested_percent ( text ) ]\ntable endowment , columns = [ endowment.endowment_id ( int | primary key ) , endowment.school_id ( int ) , endowment.donator_name ( text ) , endowment.amount ( real ) ]\nforeign keys :\nbudget.school_id = school.school_id\nendowment.school_id = school.school_id\nmatched contents :\nendowment.endowment_id ( 9 )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents : None",
  "database schema :\ntable aircraft , columns = [ aircraft.aircraft_id ( int | primary key ) , aircraft.order_year ( int ) , aircraft.manufacturer ( text ) , aircraft.model ( text ) , aircraft.fleet_series ( text ) , aircraft.powertrain ( text ) , aircraft.fuel_propulsion ( text ) ]\ntable pilot , columns = [ pilot.pilot_id ( int | primary key ) , pilot.pilot_name ( text ) , pilot.rank ( int ) , pilot.age ( int ) , pilot.nationality ( text ) , pilot.position ( text ) , pilot.join_year ( int ) , pilot.team ( text ) ]\ntable pilot_record , columns = [ pilot_record.record_id ( int ) , pilot_record.pilot_id ( int | primary key ) , pilot_record.aircraft_id ( int | primary key ) , pilot_record.date ( text | primary key ) ]\nforeign keys :\npilot_record.aircraft_id = aircraft.aircraft_id\npilot_record.pilot_id = pilot.pilot_id\nmatched contents :\naircraft.order_year ( 2000 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nref_shipping_agents.shipping_agent_name ( UPS )",
  "database schema :\ntable investors , columns = [ investors.investor_id ( integer | primary key ) , investors.investor_details ( varchar(255) ) ]\ntable lots , columns = [ lots.lot_id ( integer | primary key ) , lots.investor_id ( integer ) , lots.lot_details ( varchar(255) ) ]\ntable ref_transaction_types , columns = [ ref_transaction_types.transaction_type_code ( varchar(10) | primary key ) , ref_transaction_types.transaction_type_description ( varchar(80) ) ]\ntable transactions , columns = [ transactions.transaction_id ( integer | primary key ) , transactions.investor_id ( integer ) , transactions.transaction_type_code ( varchar(10) ) , transactions.date_of_transaction ( datetime ) , transactions.amount_of_transaction ( decimal(19,4) ) , transactions.share_count ( varchar(40) ) , transactions.other_details ( varchar(255) ) ]\ntable sales , columns = [ sales.sales_transaction_id ( integer | primary key ) , sales.sales_details ( varchar(255) ) ]\ntable purchases , columns = [ purchases.purchase_transaction_id ( integer ) , purchases.purchase_details ( varchar(255) ) ]\ntable transactions_lots , columns = [ transactions_lots.transaction_id ( integer ) , transactions_lots.lot_id ( integer ) ]\nforeign keys :\nlots.investor_id = investors.investor_id\ntransactions.transaction_type_code = ref_transaction_types.transaction_type_code\ntransactions.investor_id = investors.investor_id\nsales.sales_transaction_id = transactions.transaction_id\npurchases.purchase_transaction_id = transactions.transaction_id\ntransactions_lots.transaction_id = transactions.transaction_id\ntransactions_lots.lot_id = lots.lot_id\nmatched contents :\nref_transaction_types.transaction_type_code ( SALE )\nref_transaction_types.transaction_type_description ( Sale )\ntransactions.transaction_type_code ( SALE )\ntransactions.amount_of_transaction ( 0 )",
  "database schema :\ntable airport , columns = [ airport.id ( int | primary key ) , airport.city ( text ) , airport.country ( text ) , airport.iata ( text ) , airport.icao ( text ) , airport.name ( text ) ]\ntable operate_company , columns = [ operate_company.id ( int | primary key ) , operate_company.name ( text ) , operate_company.type ( text ) , operate_company.principal_activities ( text ) , operate_company.incorporated_in ( text ) , operate_company.group_equity_shareholding ( real ) ]\ntable flight , columns = [ flight.id ( int | primary key ) , flight.vehicle_flight_number ( text ) , flight.date ( text ) , flight.pilot ( text ) , flight.velocity ( real ) , flight.altitude ( real ) , flight.airport_id ( int ) , flight.company_id ( int ) ]\nforeign keys :\nflight.company_id = operate_company.id\nflight.airport_id = airport.id\nmatched contents :\nairport.id ( 2 )\noperate_company.id ( 2 )\nflight.id ( 2 )\nflight.airport_id ( 2 )\nflight.company_id ( 2 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nfaculty.building ( Barton )\ndepartment.building ( Barton )",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents : None",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.g_name ( modern )\nartist.preferred_genre ( modern )\nsong.genre_is ( modern )\nsong.languages ( english )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\ncounty.county_id ( 3 )\nparty.party_id ( 3 )\nelection.election_id ( 3 )\nelection.district ( 3 )\nelection.party ( 3 )",
  "database schema :\ntable phone , columns = [ phone.name ( text ) , phone.phone_id ( int | primary key ) , phone.memory_in_g ( int ) , phone.carrier ( text ) , phone.price ( real ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.district ( text ) , market.num_of_employees ( int ) , market.num_of_shops ( real ) , market.ranking ( int ) ]\ntable phone_market , columns = [ phone_market.market_id ( int | primary key ) , phone_market.phone_id ( text | primary key ) , phone_market.num_of_stock ( int ) ]\nforeign keys :\nphone_market.phone_id = phone.phone_id\nphone_market.market_id = market.market_id\nmatched contents :\nphone.memory_in_g ( 32 , 64 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2008 )\nappearances.year ( 2008 )\nbatting.year ( 2008 )\nbatting_postseason.year ( 2008 )\nfielding.year ( 2008 )\nfielding.inn_outs ( 2008 )\nfielding_postseason.year ( 2008 )\nhall_of_fame.yearid ( 2008 )\nhome_game.year ( 2008 )\nmanager.year ( 2008 )",
  "database schema :\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.home_games ( int ) , stadium.average_attendance ( real ) , stadium.total_attendance ( real ) , stadium.capacity_percentage ( real ) ]\ntable game , columns = [ game.stadium_id ( int ) , game.id ( int | primary key ) , game.season ( int ) , game.date ( text ) , game.home_team ( text ) , game.away_team ( text ) , game.score ( text ) , game.competition ( text ) ]\ntable injury_accident , columns = [ injury_accident.game_id ( int ) , injury_accident.id ( int | primary key ) , injury_accident.player ( text ) , injury_accident.injury ( text ) , injury_accident.number_of_matches ( text ) , injury_accident.source ( text ) ]\nforeign keys :\ngame.stadium_id = stadium.id\ninjury_accident.game_id = game.id\nmatched contents :\ninjury_accident.injury ( Foot injury , Knee problem )",
  "database schema :\ntable captain , columns = [ captain.captain_id ( int | primary key ) , captain.name ( text ) , captain.ship_id ( int ) , captain.age ( text ) , captain.class ( text ) , captain.rank ( text ) ]\ntable ship , columns = [ ship.ship_id ( int | primary key ) , ship.name ( text ) , ship.type ( text ) , ship.built_year ( real ) , ship.class ( text ) , ship.flag ( text ) ]\nforeign keys :\ncaptain.ship_id = ship.ship_id\nmatched contents :\ncaptain.rank ( Midshipman , Lieutenant )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\ndorm_amenity.amenity_name ( Study Room , TV Lounge )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\nproducts_for_hire.product_name ( Book collection A , Book collection B )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents :\nproduct.product_id ( 3 )\nstore.store_id ( 3 )\nstore.ranking ( 3 )\ndistrict.district_id ( 3 )\nstore_product.store_id ( 3 )\nstore_product.product_id ( 3 )\nstore_district.store_id ( 3 )\nstore_district.district_id ( 3 )",
  "database schema :\ntable city , columns = [ city.city_id ( int | primary key ) , city.official_name ( text ) , city.status ( text ) , city.area_km_2 ( real ) , city.population ( real ) , city.census_ranking ( text ) ]\ntable farm , columns = [ farm.farm_id ( int | primary key ) , farm.year ( int ) , farm.total_horses ( real ) , farm.working_horses ( real ) , farm.total_cattle ( real ) , farm.oxen ( real ) , farm.bulls ( real ) , farm.cows ( real ) , farm.pigs ( real ) , farm.sheep_and_goats ( real ) ]\ntable farm_competition , columns = [ farm_competition.competition_id ( int | primary key ) , farm_competition.year ( int ) , farm_competition.theme ( text ) , farm_competition.host_city_id ( int ) , farm_competition.hosts ( text ) ]\ntable competition_record , columns = [ competition_record.competition_id ( int | primary key ) , competition_record.farm_id ( int | primary key ) , competition_record.rank ( int ) ]\nforeign keys :\nfarm_competition.host_city_id = city.city_id\ncompetition_record.farm_id = farm.farm_id\ncompetition_record.competition_id = farm_competition.competition_id\nmatched contents : None",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents :\ndepartment.department_id ( 1 )\ndepartment.ranking ( 1 )\nhead.head_id ( 1 )",
  "database schema :\ntable buildings , columns = [ buildings.id ( int | primary key ) , buildings.name ( text ) , buildings.city ( text ) , buildings.height ( int ) , buildings.stories ( int ) , buildings.status ( text ) ]\ntable companies , columns = [ companies.id ( int | primary key ) , companies.name ( text ) , companies.headquarters ( text ) , companies.industry ( text ) , companies.sales_billion ( real ) , companies.profits_billion ( real ) , companies.assets_billion ( real ) , companies.market_value_billion ( text ) ]\ntable office_locations , columns = [ office_locations.building_id ( int | primary key ) , office_locations.company_id ( int | primary key ) , office_locations.move_in_year ( int ) ]\nforeign keys :\noffice_locations.company_id = companies.id\noffice_locations.building_id = buildings.id\nmatched contents : None",
  "database schema :\ntable school , columns = [ school.school_id ( text | primary key ) , school.school_name ( text ) , school.location ( text ) , school.mascot ( text ) , school.enrollment ( int ) , school.ihsaa_class ( text ) , school.ihsaa_football_class ( text ) , school.county ( text ) ]\ntable budget , columns = [ budget.school_id ( int | primary key ) , budget.year ( int | primary key ) , budget.budgeted ( int ) , budget.total_budget_percent_budgeted ( real ) , budget.invested ( int ) , budget.total_budget_percent_invested ( real ) , budget.budget_invested_percent ( text ) ]\ntable endowment , columns = [ endowment.endowment_id ( int | primary key ) , endowment.school_id ( int ) , endowment.donator_name ( text ) , endowment.amount ( real ) ]\nforeign keys :\nbudget.school_id = school.school_id\nendowment.school_id = school.school_id\nmatched contents :\nschool.school_name ( Glenn )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nreservations.lastname ( CONRAD , SELBIG )\nreservations.firstname ( CONRAD )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\ncustomer.acc_type ( checking , saving )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nref_document_types.document_type_code ( Paper )\ndocuments.document_type_code ( Paper )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 3 )\nstatus.station_id ( 3 )\nstatus.bikes_available ( 3 )\nstatus.docks_available ( 3 )\ntrip.start_station_id ( 3 )\ntrip.end_station_id ( 3 )\ntrip.zip_code ( 94107 )\nweather.mean_wind_speed_mph ( 3 )\nweather.cloud_cover ( 3 )\nweather.zip_code ( 94107 )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\nteam.name ( Columbus Crew )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ncourse.title ( Mobile Computing )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.lname ( Shivers )\nauthors.fname ( Olin )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.city ( austin )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.year ( 2002 )\ndegrees.year ( 2002 )\nenrollments.year ( 2002 )\nfaculty.year ( 2002 )",
  "database schema :\ntable premises , columns = [ premises.premise_id ( integer | primary key ) , premises.premises_type ( varchar(15) ) , premises.premise_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_category ( varchar(15) ) , products.product_name ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_login ( varchar(80) ) , customers.customer_password ( varchar(10) ) ]\ntable mailshot_campaigns , columns = [ mailshot_campaigns.mailshot_id ( integer | primary key ) , mailshot_campaigns.product_category ( varchar(15) ) , mailshot_campaigns.mailshot_name ( varchar(80) ) , mailshot_campaigns.mailshot_start_date ( datetime ) , mailshot_campaigns.mailshot_end_date ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.premise_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type_code ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(15) ) , customer_orders.shipping_method_code ( varchar(15) ) , customer_orders.order_placed_datetime ( datetime ) , customer_orders.order_delivered_datetime ( datetime ) , customer_orders.order_shipping_charges ( varchar(255) ) ]\ntable mailshot_customers , columns = [ mailshot_customers.mailshot_id ( integer ) , mailshot_customers.customer_id ( integer ) , mailshot_customers.outcome_code ( varchar(15) ) , mailshot_customers.mailshot_customer_date ( datetime ) ]\ntable order_items , columns = [ order_items.item_id ( integer ) , order_items.order_item_status_code ( varchar(15) ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.item_status_code ( varchar(15) ) , order_items.item_delivered_datetime ( datetime ) , order_items.item_order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.premise_id = premises.premise_id\ncustomer_orders.customer_id = customers.customer_id\nmailshot_customers.mailshot_id = mailshot_campaigns.mailshot_id\nmailshot_customers.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomers.customer_id ( 2 )\nmailshot_campaigns.mailshot_id ( 2 )\ncustomer_addresses.customer_id ( 2 )\ncustomer_addresses.premise_id ( 2 )\ncustomer_orders.order_id ( 2 )\ncustomer_orders.customer_id ( 2 )\nmailshot_customers.customer_id ( 2 )\nmailshot_customers.outcome_code ( Order )\norder_items.item_id ( 2 )\norder_items.order_id ( 2 )\norder_items.item_order_quantity ( 2 )",
  "database schema :\ntable book_club , columns = [ book_club.book_club_id ( int | primary key ) , book_club.year ( int ) , book_club.author_or_editor ( text ) , book_club.book_title ( text ) , book_club.publisher ( text ) , book_club.category ( text ) , book_club.result ( text ) ]\ntable movie , columns = [ movie.movie_id ( int | primary key ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) , movie.budget_million ( real ) , movie.gross_worldwide ( int ) ]\ntable culture_company , columns = [ culture_company.company_name ( text | primary key ) , culture_company.type ( text ) , culture_company.incorporated_in ( text ) , culture_company.group_equity_shareholding ( real ) , culture_company.book_club_id ( text ) , culture_company.movie_id ( text ) ]\nforeign keys :\nculture_company.movie_id = movie.movie_id\nculture_company.book_club_id = book_club.book_club_id\nmatched contents :\nbook_club.year ( 1989 , 1990 )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nproducts.price ( 150 )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nteachers.lastname ( COVIN )\nteachers.firstname ( JEROME )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nhas_allergy.stuid ( 1004 )\nstudent.stuid ( 1004 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\ndepartment.building ( Mergenthaler )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( Chico )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.fname ( Amal )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ngenre.name ( Rock )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.age ( 18 )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nstudents.last_name ( Fahey )",
  "database schema :\ntable train , columns = [ train.id ( int | primary key ) , train.train_number ( int ) , train.name ( text ) , train.origin ( text ) , train.destination ( text ) , train.time ( text ) , train.interval ( text ) ]\ntable station , columns = [ station.id ( int | primary key ) , station.network_name ( text ) , station.services ( text ) , station.local_authority ( text ) ]\ntable route , columns = [ route.train_id ( int | primary key ) , route.station_id ( int | primary key ) ]\ntable weekly_weather , columns = [ weekly_weather.station_id ( int | primary key ) , weekly_weather.day_of_week ( text | primary key ) , weekly_weather.high_temperature ( int ) , weekly_weather.low_temperature ( int ) , weekly_weather.precipitation ( real ) , weekly_weather.wind_speed_mph ( int ) ]\nforeign keys :\nroute.station_id = station.id\nroute.train_id = train.id\nweekly_weather.station_id = station.id\nmatched contents : None",
  "database schema :\ntable railway , columns = [ railway.railway_id ( int | primary key ) , railway.railway ( text ) , railway.builder ( text ) , railway.built ( text ) , railway.wheels ( text ) , railway.location ( text ) , railway.objectnumber ( text ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.train_num ( text ) , train.name ( text ) , train.from ( text ) , train.arrival ( text ) , train.railway_id ( int ) ]\ntable manager , columns = [ manager.manager_id ( int | primary key ) , manager.name ( text ) , manager.country ( text ) , manager.working_year_starts ( text ) , manager.age ( int ) , manager.level ( int ) ]\ntable railway_manage , columns = [ railway_manage.railway_id ( int | primary key ) , railway_manage.manager_id ( int | primary key ) , railway_manage.from_year ( text ) ]\nforeign keys :\ntrain.railway_id = railway.railway_id\nrailway_manage.railway_id = railway.railway_id\nrailway_manage.manager_id = manager.manager_id\nmatched contents :\nmanager.country ( Australia )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\ncustomers.first_name ( Rylan )\ncustomers.last_name ( Goodwin )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.title ( Balls to the Wall )\ntrack.name ( Balls to the Wall , Belong )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Alice )\npersonfriend.name ( Alice )\npersonfriend.friend ( Alice )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 7 )\nstatus.station_id ( 7 )\nstatus.bikes_available ( 7 )\nstatus.docks_available ( 7 )\ntrip.start_station_id ( 7 )\ntrip.end_station_id ( 7 )\nweather.max_gust_speed_mph ( 7 )\nweather.cloud_cover ( 7 )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.rank_in_series ( int ) , film.number_in_season ( int ) , film.title ( text ) , film.directed_by ( text ) , film.original_air_date ( text ) , film.production_code ( text ) ]\ntable cinema , columns = [ cinema.cinema_id ( int | primary key ) , cinema.name ( text ) , cinema.openning_year ( int ) , cinema.capacity ( int ) , cinema.location ( text ) ]\ntable schedule , columns = [ schedule.cinema_id ( int | primary key ) , schedule.film_id ( int | primary key ) , schedule.date ( text ) , schedule.show_times_per_day ( int ) , schedule.price ( float ) ]\nforeign keys :\nschedule.cinema_id = cinema.cinema_id\nschedule.film_id = film.film_id\nmatched contents :\ncinema.openning_year ( 2010 , 2011 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nroles.role_name ( Editor )",
  "database schema :\ntable railway , columns = [ railway.railway_id ( int | primary key ) , railway.railway ( text ) , railway.builder ( text ) , railway.built ( text ) , railway.wheels ( text ) , railway.location ( text ) , railway.objectnumber ( text ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.train_num ( text ) , train.name ( text ) , train.from ( text ) , train.arrival ( text ) , train.railway_id ( int ) ]\ntable manager , columns = [ manager.manager_id ( int | primary key ) , manager.name ( text ) , manager.country ( text ) , manager.working_year_starts ( text ) , manager.age ( int ) , manager.level ( int ) ]\ntable railway_manage , columns = [ railway_manage.railway_id ( int | primary key ) , railway_manage.manager_id ( int | primary key ) , railway_manage.from_year ( text ) ]\nforeign keys :\ntrain.railway_id = railway.railway_id\nrailway_manage.railway_id = railway.railway_id\nrailway_manage.manager_id = manager.manager_id\nmatched contents :\nmanager.age ( 46 )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_status_code ( Reported )\nproblem_status_codes.problem_status_code ( Reported )\nproblem_status_codes.problem_status_description ( Reported )\nstaff.staff_first_name ( Christop )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nflight.destination ( Honolulu )",
  "database schema :\ntable publication , columns = [ publication.publication_id ( int | primary key ) , publication.book_id ( int ) , publication.publisher ( text ) , publication.publication_date ( text ) , publication.price ( real ) ]\ntable book , columns = [ book.book_id ( int | primary key ) , book.title ( text ) , book.issues ( real ) , book.writer ( text ) ]\nforeign keys :\npublication.book_id = book.book_id\nmatched contents :\npublication.publisher ( Wiley )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nemployees.title ( IT Staff )\ntracks.name ( Numbers )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\nprojects.project_details ( sint )\nresearch_staff.staff_details ( sint )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\ncustomers.first_name ( Carole )\ncustomers.last_name ( Bernhard )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nfaculty.rank ( Professor )\nfaculty.building ( NEB )",
  "database schema :\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) ]\ntable participants , columns = [ participants.participant_id ( integer | primary key ) , participants.participant_type_code ( char(15) ) , participants.participant_details ( varchar(255) ) ]\ntable events , columns = [ events.event_id ( integer | primary key ) , events.service_id ( integer ) , events.event_details ( varchar(255) ) ]\ntable participants_in_events , columns = [ participants_in_events.event_id ( integer | primary key ) , participants_in_events.participant_id ( integer | primary key ) ]\nforeign keys :\nevents.service_id = services.service_id\nparticipants_in_events.event_id = events.event_id\nparticipants_in_events.participant_id = participants.participant_id\nmatched contents :\nparticipants.participant_type_code ( Participant )\nparticipants.participant_details ( Kenyatta Kuhn )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_status_code ( Reported )\nproblem_status_codes.problem_status_code ( Reported )\nproblem_status_codes.problem_status_description ( Reported )",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nmembership_register_branch.register_year ( 2016 )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.campus ( San Jose State University )\ncampuses.location ( San Jose )\ndegrees.year ( 2000 )\nenrollments.year ( 2000 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.city ( East Julianaside , Gleasonmouth )\naddresses.state_province_county ( Arizona , Texas )",
  "database schema :\ntable city , columns = [ city.city_id ( int | primary key ) , city.city ( text ) , city.hanzi ( text ) , city.hanyu_pinyin ( text ) , city.regional_population ( int ) , city.gdp ( real ) ]\ntable match , columns = [ match.match_id ( int | primary key ) , match.date ( text ) , match.venue ( text ) , match.score ( text ) , match.result ( text ) , match.competition ( text ) ]\ntable temperature , columns = [ temperature.city_id ( int | primary key ) , temperature.jan ( real ) , temperature.feb ( real ) , temperature.mar ( real ) , temperature.apr ( real ) , temperature.jun ( real ) , temperature.jul ( real ) , temperature.aug ( real ) , temperature.sep ( real ) , temperature.oct ( real ) , temperature.nov ( real ) , temperature.dec ( real ) ]\ntable hosting_city , columns = [ hosting_city.year ( int | primary key ) , hosting_city.match_id ( int ) , hosting_city.host_city ( text ) ]\nforeign keys :\ntemperature.city_id = city.city_id\nhosting_city.match_id = match.match_id\nhosting_city.host_city = city.city_id\nmatched contents :\nhosting_city.year ( 2010 )",
  "database schema :\ntable school , columns = [ school.school_id ( text | primary key ) , school.school_name ( text ) , school.location ( text ) , school.mascot ( text ) , school.enrollment ( int ) , school.ihsaa_class ( text ) , school.ihsaa_football_class ( text ) , school.county ( text ) ]\ntable budget , columns = [ budget.school_id ( int | primary key ) , budget.year ( int | primary key ) , budget.budgeted ( int ) , budget.total_budget_percent_budgeted ( real ) , budget.invested ( int ) , budget.total_budget_percent_invested ( real ) , budget.budget_invested_percent ( text ) ]\ntable endowment , columns = [ endowment.endowment_id ( int | primary key ) , endowment.school_id ( int ) , endowment.donator_name ( text ) , endowment.amount ( real ) ]\nforeign keys :\nbudget.school_id = school.school_id\nendowment.school_id = school.school_id\nmatched contents :\nendowment.endowment_id ( 10 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nappearances.year ( 1907 )\nbatting.year ( 1907 )\nbatting_postseason.year ( 1907 )\nplayer_college.college_id ( columbia )\nfielding.year ( 1907 )\nfielding.inn_outs ( 1907 )\nfielding_outfield.year ( 1907 )\nfielding_postseason.year ( 1907 )\nhome_game.year ( 1907 )\nmanager.year ( 1907 )\nplayer.birth_city ( Columbia )\nplayer.death_city ( Columbia , Park )\nplayer.name_first ( Count )\npark.park_name ( Columbia Park )\npitching.year ( 1907 )\ncollege.college_id ( columbia )\ncollege.city ( Columbia )\nteam.park ( Columbia Park )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\ncustomers.good_or_bad_customer ( good , bad )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nref_incident_type.incident_type_code ( NOISE )\nref_incident_type.incident_type_description ( Noise )\nbehavior_incident.incident_type_code ( NOISE )",
  "database schema :\ntable train , columns = [ train.id ( int | primary key ) , train.train_number ( int ) , train.name ( text ) , train.origin ( text ) , train.destination ( text ) , train.time ( text ) , train.interval ( text ) ]\ntable station , columns = [ station.id ( int | primary key ) , station.network_name ( text ) , station.services ( text ) , station.local_authority ( text ) ]\ntable route , columns = [ route.train_id ( int | primary key ) , route.station_id ( int | primary key ) ]\ntable weekly_weather , columns = [ weekly_weather.station_id ( int | primary key ) , weekly_weather.day_of_week ( text | primary key ) , weekly_weather.high_temperature ( int ) , weekly_weather.low_temperature ( int ) , weekly_weather.precipitation ( real ) , weekly_weather.wind_speed_mph ( int ) ]\nforeign keys :\nroute.station_id = station.id\nroute.train_id = train.id\nweekly_weather.station_id = station.id\nmatched contents :\nstation.local_authority ( Chiltern )",
  "database schema :\ntable county_public_safety , columns = [ county_public_safety.county_id ( int | primary key ) , county_public_safety.name ( text ) , county_public_safety.population ( int ) , county_public_safety.police_officers ( int ) , county_public_safety.residents_per_officer ( int ) , county_public_safety.case_burden ( int ) , county_public_safety.crime_rate ( real ) , county_public_safety.police_force ( text ) , county_public_safety.location ( text ) ]\ntable city , columns = [ city.city_id ( int | primary key ) , city.county_id ( int ) , city.name ( text ) , city.white ( real ) , city.black ( real ) , city.amerindian ( real ) , city.asian ( real ) , city.multiracial ( real ) , city.hispanic ( real ) ]\nforeign keys :\ncity.county_id = county_public_safety.county_id\nmatched contents :\ncounty_public_safety.case_burden ( 100 )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents : None",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\naddresses.state_county ( Alaska )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_product_categories.product_category_code ( Spices )\nref_product_categories.product_category_description ( Spices )\nproducts.product_category_code ( Spices )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\njobs.min_salary ( 8000 )\njobs.max_salary ( 12000 )\nemployees.salary ( 8000 , 12000 )",
  "database schema :\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.gender ( varchar(1) ) , staff.first_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.email_address ( varchar(255) ) , staff.phone_number ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_type_code ( varchar(20) ) , customers.address_line_1 ( varchar(80) ) , customers.address_line_2 ( varchar(80) ) , customers.town_city ( varchar(80) ) , customers.state ( varchar(80) ) , customers.email_address ( varchar(255) ) , customers.phone_number ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.product_category_code ( varchar(20) ) , products.date_product_first_available ( datetime ) , products.date_product_discontinued ( datetime ) , products.product_name ( varchar(80) ) , products.product_description ( varchar(255) ) , products.product_price ( decimal(19,4) ) ]\ntable complaints , columns = [ complaints.complaint_id ( integer ) , complaints.product_id ( integer ) , complaints.customer_id ( integer ) , complaints.complaint_outcome_code ( varchar(20) ) , complaints.complaint_status_code ( varchar(20) ) , complaints.complaint_type_code ( varchar(20) ) , complaints.date_complaint_raised ( datetime ) , complaints.date_complaint_closed ( datetime ) , complaints.staff_id ( integer ) ]\nforeign keys :\ncomplaints.customer_id = customers.customer_id\ncomplaints.product_id = products.product_id\ncomplaints.staff_id = staff.staff_id\nmatched contents :\nproducts.parent_product_id ( 3 )\ncomplaints.complaint_id ( 3 )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ntryout.ppos ( goalie , mid )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.city ( Chicago )\ncustomers.state ( IL )\ninvoices.billing_city ( Chicago )\ninvoices.billing_state ( IL )\ntracks.name ( Numbers )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents : None",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nloan.loan_type ( Mortgages )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nalbums.title ( Balls to the Wall )\ntracks.name ( Balls to the Wall , Belong )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nprojects.project_details ( Graph Database project )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.winery ( Robert Biale )\nwine.name ( Numbers )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.raceid ( 841 )\ndrivers.driverid ( 841 )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\nconstructorstandings.raceid ( 841 )\ndriverstandings.raceid ( 841 )\ndriverstandings.driverid ( 841 )\nconstructorresults.constructorresultsid ( 841 )\nconstructorresults.raceid ( 841 )\nqualifying.qualifyid ( 841 )\nqualifying.raceid ( 841 )\nqualifying.driverid ( 841 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_details ( varchar(255) ) ]\ntable policies , columns = [ policies.policy_id ( integer | primary key ) , policies.customer_id ( integer ) , policies.policy_type_code ( char(15) ) , policies.start_date ( datetime ) , policies.end_date ( datetime ) ]\ntable claim_headers , columns = [ claim_headers.claim_header_id ( integer | primary key ) , claim_headers.claim_status_code ( char(15) ) , claim_headers.claim_type_code ( char(15) ) , claim_headers.policy_id ( integer ) , claim_headers.date_of_claim ( datetime ) , claim_headers.date_of_settlement ( datetime ) , claim_headers.amount_claimed ( decimal(20,4) ) , claim_headers.amount_piad ( decimal(20,4) ) ]\ntable claims_documents , columns = [ claims_documents.claim_id ( integer | primary key ) , claims_documents.document_type_code ( char(15) | primary key ) , claims_documents.created_by_staff_id ( integer ) , claims_documents.created_date ( integer ) ]\ntable claims_processing_stages , columns = [ claims_processing_stages.claim_stage_id ( integer | primary key ) , claims_processing_stages.next_claim_stage_id ( integer ) , claims_processing_stages.claim_status_name ( varchar(255) ) , claims_processing_stages.claim_status_description ( varchar(255) ) ]\ntable claims_processing , columns = [ claims_processing.claim_processing_id ( integer | primary key ) , claims_processing.claim_id ( integer ) , claims_processing.claim_outcome_code ( char(15) ) , claims_processing.claim_stage_id ( integer ) , claims_processing.staff_id ( integer ) ]\nforeign keys :\npolicies.customer_id = customers.customer_id\nclaim_headers.policy_id = policies.policy_id\nclaims_documents.created_by_staff_id = staff.staff_id\nclaims_documents.claim_id = claim_headers.claim_header_id\nclaims_processing.staff_id = staff.staff_id\nclaims_processing.claim_id = claim_headers.claim_header_id\nmatched contents : None",
  "database schema :\ntable device , columns = [ device.device_id ( int | primary key ) , device.device ( text ) , device.carrier ( text ) , device.package_version ( text ) , device.applications ( text ) , device.software_platform ( text ) ]\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.shop_name ( text ) , shop.location ( text ) , shop.open_date ( text ) , shop.open_year ( int ) ]\ntable stock , columns = [ stock.shop_id ( int | primary key ) , stock.device_id ( int | primary key ) , stock.quantity ( int ) ]\nforeign keys :\nstock.device_id = device.device_id\nstock.shop_id = shop.shop_id\nmatched contents :\ndevice.device ( Apple )\nshop.shop_name ( Apple )",
  "database schema :\ntable program , columns = [ program.program_id ( int | primary key ) , program.name ( text ) , program.origin ( text ) , program.launch ( real ) , program.owner ( text ) ]\ntable channel , columns = [ channel.channel_id ( int | primary key ) , channel.name ( text ) , channel.owner ( text ) , channel.share_in_percent ( real ) , channel.rating_in_percent ( real ) ]\ntable broadcast , columns = [ broadcast.channel_id ( int | primary key ) , broadcast.program_id ( int | primary key ) , broadcast.time_of_day ( text ) ]\ntable broadcast_share , columns = [ broadcast_share.channel_id ( int | primary key ) , broadcast_share.program_id ( int | primary key ) , broadcast_share.date ( text ) , broadcast_share.share_in_percent ( real ) ]\nforeign keys :\nbroadcast.program_id = program.program_id\nbroadcast.channel_id = channel.channel_id\nbroadcast_share.program_id = program.program_id\nbroadcast_share.channel_id = channel.channel_id\nmatched contents :\nprogram.origin ( Beijing )",
  "database schema :\ntable candidate , columns = [ candidate.candidate_id ( int | primary key ) , candidate.people_id ( int ) , candidate.poll_source ( text ) , candidate.date ( text ) , candidate.support_rate ( real ) , candidate.consider_rate ( real ) , candidate.oppose_rate ( real ) , candidate.unsure_rate ( real ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.sex ( text ) , people.name ( text ) , people.date_of_birth ( text ) , people.height ( real ) , people.weight ( real ) ]\nforeign keys :\ncandidate.people_id = people.people_id\nmatched contents :\ncandidate.candidate_id ( 3 )\ncandidate.people_id ( 3 )\npeople.people_id ( 3 )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\nstudents.personal_name ( Bernie )\nstudents.family_name ( Zieme )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\ncharacteristics.characteristic_name ( hot )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.address_id ( 10 )\ncustomers.customer_id ( 10 )\ncustomer_addresses.customer_id ( 10 )\ncustomer_contact_channels.customer_id ( 10 )\ncustomer_orders.order_id ( 10 )\ncustomer_orders.customer_id ( 10 )\norder_items.order_id ( 10 )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\ncatalog_structure.catalog_level_name ( Product )",
  "database schema :\ntable journal , columns = [ journal.journal_id ( int | primary key ) , journal.date ( text ) , journal.theme ( text ) , journal.sales ( int ) ]\ntable editor , columns = [ editor.editor_id ( int | primary key ) , editor.name ( text ) , editor.age ( real ) ]\ntable journal_committee , columns = [ journal_committee.editor_id ( int | primary key ) , journal_committee.journal_id ( int | primary key ) , journal_committee.work_type ( text ) ]\nforeign keys :\njournal_committee.journal_id = journal.journal_id\njournal_committee.editor_id = editor.editor_id\nmatched contents : None",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\nshipments.shipment_tracking_number ( 3452 )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.year ( 2002 )\ndegrees.year ( 1998 , 2002 )\nenrollments.year ( 1998 , 2002 )\nfaculty.year ( 2002 )",
  "database schema :\ntable actor , columns = [ actor.aid ( int | primary key ) , actor.gender ( text ) , actor.name ( text ) , actor.nationality ( text ) , actor.birth_city ( text ) , actor.birth_year ( int ) ]\ntable copyright , columns = [ copyright.id ( int | primary key ) , copyright.msid ( int ) , copyright.cid ( int ) ]\ntable cast , columns = [ cast.id ( int | primary key ) , cast.msid ( int ) , cast.aid ( int ) , cast.role ( int ) ]\ntable genre , columns = [ genre.gid ( int | primary key ) , genre.genre ( text ) ]\ntable classification , columns = [ classification.id ( int | primary key ) , classification.msid ( int ) , classification.gid ( int ) ]\ntable company , columns = [ company.id ( int | primary key ) , company.name ( text ) , company.country_code ( text ) ]\ntable director , columns = [ director.did ( int | primary key ) , director.gender ( text ) , director.name ( text ) , director.nationality ( text ) , director.birth_city ( text ) , director.birth_year ( int ) ]\ntable producer , columns = [ producer.pid ( int | primary key ) , producer.gender ( text ) , producer.name ( text ) , producer.nationality ( text ) , producer.birth_city ( text ) , producer.birth_year ( int ) ]\ntable directed_by , columns = [ directed_by.id ( int | primary key ) , directed_by.msid ( int ) , directed_by.did ( int ) ]\ntable keyword , columns = [ keyword.id ( int | primary key ) , keyword.keyword ( text ) ]\ntable made_by , columns = [ made_by.id ( int | primary key ) , made_by.msid ( int ) , made_by.pid ( int ) ]\ntable movie , columns = [ movie.mid ( int | primary key ) , movie.title ( text ) , movie.release_year ( int ) , movie.title_aka ( text ) , movie.budget ( text ) ]\ntable tags , columns = [ tags.id ( int | primary key ) , tags.msid ( int ) , tags.kid ( int ) ]\ntable tv_series , columns = [ tv_series.sid ( int | primary key ) , tv_series.title ( text ) , tv_series.release_year ( int ) , tv_series.num_of_seasons ( int ) , tv_series.num_of_episodes ( int ) , tv_series.title_aka ( text ) , tv_series.budget ( text ) ]\ntable writer , columns = [ writer.wid ( int | primary key ) , writer.gender ( text ) , writer.name ( int ) , writer.nationality ( int ) , writer.num_of_episodes ( int ) , writer.birth_city ( text ) , writer.birth_year ( int ) ]\ntable written_by , columns = [ written_by.id ( int ) , written_by.msid ( int ) , written_by.wid ( int ) ]\nforeign keys :\ncast.msid = copyright.msid\ncast.aid = actor.aid\nclassification.msid = copyright.msid\nclassification.gid = genre.gid\ndirected_by.did = director.did\ndirected_by.msid = copyright.msid\nmade_by.pid = producer.pid\nmade_by.msid = copyright.msid\ntags.kid = keyword.kid\ntags.msid = copyright.msid\nwritten_by.wid = writer.wid\nwritten_by.msid = copyright.msid\nmatched contents : None",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\naddresses.address_id ( 1 )\ndocuments.document_id ( 1 )\nemployees.employee_id ( 1 )\ndocument_drafts.document_id ( 1 )\ndocument_drafts.draft_number ( 1 )\ndraft_copies.document_id ( 1 )\ndraft_copies.draft_number ( 1 )\ncirculation_history.document_id ( 1 )\ncirculation_history.draft_number ( 1 )\ncirculation_history.employee_id ( 1 )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.name ( Australian Grand Prix , Chinese Grand Prix )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\ndrivers.nationality ( Australian )\nconstructors.nationality ( Australian )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nphone.hardware_model_name ( LG-P760 )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nartist.gender ( Female )\nsong.languages ( bangla )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.albumid ( 3 )\nalbum.artistid ( 3 )\nartist.artistid ( 3 )\ncustomer.customerid ( 3 )\ncustomer.supportrepid ( 3 )\nemployee.employeeid ( 3 )\ngenre.genreid ( 3 )\ninvoice.invoiceid ( 3 )\ninvoice.customerid ( 3 )\ninvoiceline.invoiceid ( 3 )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\nattribute_definitions.attribute_name ( Green )",
  "database schema :\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.home_games ( int ) , stadium.average_attendance ( real ) , stadium.total_attendance ( real ) , stadium.capacity_percentage ( real ) ]\ntable game , columns = [ game.stadium_id ( int ) , game.id ( int | primary key ) , game.season ( int ) , game.date ( text ) , game.home_team ( text ) , game.away_team ( text ) , game.score ( text ) , game.competition ( text ) ]\ntable injury_accident , columns = [ injury_accident.game_id ( int ) , injury_accident.id ( int | primary key ) , injury_accident.player ( text ) , injury_accident.injury ( text ) , injury_accident.number_of_matches ( text ) , injury_accident.source ( text ) ]\nforeign keys :\ngame.stadium_id = stadium.id\ninjury_accident.game_id = game.id\nmatched contents : None",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\naddresses.address_id ( 2 )\ndocuments.document_id ( 2 )\ndocument_drafts.document_id ( 2 )\ndocument_drafts.draft_number ( 2 )\ndraft_copies.document_id ( 2 )\ncirculation_history.document_id ( 2 )\ncirculation_history.draft_number ( 2 )\ncirculation_history.employee_id ( 2 )\ndocuments_mailed.document_id ( 2 )\ndocuments_mailed.mailed_to_address_id ( 2 )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents :\nweb_client_accelerator.connection ( Broadband )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nstatements.statement_details ( Private Project )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nappearances.year ( 1907 )\nbatting.year ( 1907 )\nbatting_postseason.year ( 1907 )\nplayer_college.college_id ( columbia )\nfielding.year ( 1907 )\nfielding.inn_outs ( 1907 )\nfielding_outfield.year ( 1907 )\nfielding_postseason.year ( 1907 )\nhome_game.year ( 1907 )\nmanager.year ( 1907 )\nplayer.birth_city ( Columbia )\nplayer.death_city ( Columbia , Park )\npark.park_name ( Columbia Park )\npitching.year ( 1907 )\ncollege.college_id ( columbia )\ncollege.city ( Columbia )\nteam.park ( Columbia Park )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_document_types.document_type_code ( RV )\nall_documents.document_type_code ( RV )",
  "database schema :\ntable buildings , columns = [ buildings.id ( int | primary key ) , buildings.name ( text ) , buildings.city ( text ) , buildings.height ( int ) , buildings.stories ( int ) , buildings.status ( text ) ]\ntable companies , columns = [ companies.id ( int | primary key ) , companies.name ( text ) , companies.headquarters ( text ) , companies.industry ( text ) , companies.sales_billion ( real ) , companies.profits_billion ( real ) , companies.assets_billion ( real ) , companies.market_value_billion ( text ) ]\ntable office_locations , columns = [ office_locations.building_id ( int | primary key ) , office_locations.company_id ( int | primary key ) , office_locations.move_in_year ( int ) ]\nforeign keys :\noffice_locations.company_id = companies.id\noffice_locations.building_id = buildings.id\nmatched contents :\ncompanies.headquarters ( USA , China )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ncollege.state ( LA , AZ )",
  "database schema :\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.home_games ( int ) , stadium.average_attendance ( real ) , stadium.total_attendance ( real ) , stadium.capacity_percentage ( real ) ]\ntable game , columns = [ game.stadium_id ( int ) , game.id ( int | primary key ) , game.season ( int ) , game.date ( text ) , game.home_team ( text ) , game.away_team ( text ) , game.score ( text ) , game.competition ( text ) ]\ntable injury_accident , columns = [ injury_accident.game_id ( int ) , injury_accident.id ( int | primary key ) , injury_accident.player ( text ) , injury_accident.injury ( text ) , injury_accident.number_of_matches ( text ) , injury_accident.source ( text ) ]\nforeign keys :\ngame.stadium_id = stadium.id\ninjury_accident.game_id = game.id\nmatched contents :\ninjury_accident.injury ( Knee problem )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.id ( 10 )\nalbums.id ( 10 )\nalbums.artist_id ( 10 )\ncustomers.id ( 10 )\ngenres.id ( 10 )\ninvoices.id ( 10 )\ninvoices.customer_id ( 10 )\ntracks.name ( Numbers )\ninvoice_lines.id ( 10 )\ninvoice_lines.invoice_id ( 10 )\ninvoice_lines.track_id ( 10 )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nclassroom.building ( Lamberton )\ndepartment.building ( Lamberton )\nsection.building ( Lamberton )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\nproject_staff.date_from ( 2003-04-19 15:06:20 )\nproject_staff.date_to ( 2016-03-15 00:33:18 )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergytype ( animal , food )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nvisitors.tourist_details ( Rosalind , Alison )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nref_document_types.document_type_code ( Paper )\nref_document_status.document_status_code ( done )\nref_shipping_agents.shipping_agent_name ( USPS )\ndocuments.document_status_code ( done )\ndocuments.document_type_code ( Paper )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nreservations.adults ( 3 )\nreservations.kids ( 3 )",
  "database schema :\ntable basketball_match , columns = [ basketball_match.team_id ( int | primary key ) , basketball_match.school_id ( int ) , basketball_match.team_name ( text ) , basketball_match.acc_regular_season ( text ) , basketball_match.acc_percent ( text ) , basketball_match.acc_home ( text ) , basketball_match.acc_road ( text ) , basketball_match.all_games ( text ) , basketball_match.all_games_percent ( int ) , basketball_match.all_home ( text ) , basketball_match.all_road ( text ) , basketball_match.all_neutral ( text ) ]\ntable university , columns = [ university.school_id ( int | primary key ) , university.school ( text ) , university.location ( text ) , university.founded ( real ) , university.affiliation ( text ) , university.enrollment ( real ) , university.nickname ( text ) , university.primary_conference ( text ) ]\nforeign keys :\nbasketball_match.school_id = university.school_id\nmatched contents :\nbasketball_match.team_name ( Clemson )",
  "database schema :\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.gender ( varchar(1) ) , staff.first_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.email_address ( varchar(255) ) , staff.phone_number ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_type_code ( varchar(20) ) , customers.address_line_1 ( varchar(80) ) , customers.address_line_2 ( varchar(80) ) , customers.town_city ( varchar(80) ) , customers.state ( varchar(80) ) , customers.email_address ( varchar(255) ) , customers.phone_number ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.product_category_code ( varchar(20) ) , products.date_product_first_available ( datetime ) , products.date_product_discontinued ( datetime ) , products.product_name ( varchar(80) ) , products.product_description ( varchar(255) ) , products.product_price ( decimal(19,4) ) ]\ntable complaints , columns = [ complaints.complaint_id ( integer ) , complaints.product_id ( integer ) , complaints.customer_id ( integer ) , complaints.complaint_outcome_code ( varchar(20) ) , complaints.complaint_status_code ( varchar(20) ) , complaints.complaint_type_code ( varchar(20) ) , complaints.date_complaint_raised ( datetime ) , complaints.date_complaint_closed ( datetime ) , complaints.staff_id ( integer ) ]\nforeign keys :\ncomplaints.customer_id = customers.customer_id\ncomplaints.product_id = products.product_id\ncomplaints.staff_id = staff.staff_id\nmatched contents :\ncustomers.customer_type_code ( Good Credit Rating )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\ncustomers.customer_id ( 11 )\ninvoices.invoice_number ( 11 )\norders.order_id ( 11 )\norders.customer_id ( 11 )\nproducts.product_id ( 11 )\norder_items.order_item_id ( 11 )\norder_items.product_id ( 11 )\norder_items.order_id ( 11 )\nshipment_items.shipment_id ( 11 )\nshipment_items.order_item_id ( 11 )",
  "database schema :\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(20) ) , products.product_price ( decimal(19,4) ) , products.product_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(10) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.date_became_customer ( datetime ) ]\ntable regular_orders , columns = [ regular_orders.regular_order_id ( integer | primary key ) , regular_orders.distributer_id ( integer ) ]\ntable regular_order_products , columns = [ regular_order_products.regular_order_id ( integer ) , regular_order_products.product_id ( integer ) ]\ntable actual_orders , columns = [ actual_orders.actual_order_id ( integer | primary key ) , actual_orders.order_status_code ( varchar(10) ) , actual_orders.regular_order_id ( integer ) , actual_orders.actual_order_date ( datetime ) ]\ntable actual_order_products , columns = [ actual_order_products.actual_order_id ( integer ) , actual_order_products.product_id ( integer ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_from ( datetime ) , customer_addresses.address_type ( varchar(10) ) , customer_addresses.date_to ( datetime ) ]\ntable delivery_routes , columns = [ delivery_routes.route_id ( integer | primary key ) , delivery_routes.route_name ( varchar(50) ) , delivery_routes.other_route_details ( varchar(255) ) ]\ntable delivery_route_locations , columns = [ delivery_route_locations.location_code ( varchar(10) | primary key ) , delivery_route_locations.route_id ( integer ) , delivery_route_locations.location_address_id ( integer ) , delivery_route_locations.location_name ( varchar(50) ) ]\ntable trucks , columns = [ trucks.truck_id ( integer | primary key ) , trucks.truck_licence_number ( varchar(20) ) , trucks.truck_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.employee_address_id ( integer ) , employees.employee_name ( varchar(80) ) , employees.employee_phone ( varchar(80) ) ]\ntable order_deliveries , columns = [ order_deliveries.location_code ( varchar(10) ) , order_deliveries.actual_order_id ( integer ) , order_deliveries.delivery_status_code ( varchar(10) ) , order_deliveries.driver_employee_id ( integer ) , order_deliveries.truck_id ( integer ) , order_deliveries.delivery_date ( datetime ) ]\nforeign keys :\nregular_orders.distributer_id = customers.customer_id\nregular_order_products.regular_order_id = regular_orders.regular_order_id\nregular_order_products.product_id = products.product_id\nactual_orders.regular_order_id = regular_orders.regular_order_id\nactual_order_products.actual_order_id = actual_orders.actual_order_id\nactual_order_products.product_id = products.product_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ndelivery_route_locations.route_id = delivery_routes.route_id\ndelivery_route_locations.location_address_id = addresses.address_id\nemployees.employee_address_id = addresses.address_id\norder_deliveries.driver_employee_id = employees.employee_id\norder_deliveries.location_code = delivery_route_locations.location_code\norder_deliveries.actual_order_id = actual_orders.actual_order_id\norder_deliveries.truck_id = trucks.truck_id\nmatched contents :\nactual_orders.order_status_code ( Success )",
  "database schema :\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.address ( text ) , shop.num_of_staff ( text ) , shop.score ( real ) , shop.open_year ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.membership_card ( text ) , member.age ( int ) , member.time_of_purchase ( int ) , member.level_of_membership ( int ) , member.address ( text ) ]\ntable happy_hour , columns = [ happy_hour.hh_id ( int | primary key ) , happy_hour.shop_id ( int | primary key ) , happy_hour.month ( text | primary key ) , happy_hour.num_of_shaff_in_charge ( int ) ]\ntable happy_hour_member , columns = [ happy_hour_member.hh_id ( int | primary key ) , happy_hour_member.member_id ( int | primary key ) , happy_hour_member.total_amount ( real ) ]\nforeign keys :\nhappy_hour.shop_id = shop.shop_id\nhappy_hour_member.member_id = member.member_id\nmatched contents :\nmember.address ( Hartford , Waterbury )",
  "database schema :\ntable follows , columns = [ follows.f1 ( int(11) | primary key | comment : user id ) , follows.f2 ( int(11) | primary key | comment : follower id ) ]\ntable tweets , columns = [ tweets.id ( bigint(20) | primary key ) , tweets.uid ( int(11) | comment : user id ) , tweets.text ( char(140) ) , tweets.createdate ( datetime ) ]\ntable user_profiles , columns = [ user_profiles.uid ( int(11) | primary key ) , user_profiles.name ( varchar(255) ) , user_profiles.email ( varchar(255) ) , user_profiles.partitionid ( int(11) ) , user_profiles.followers ( int(11) ) ]\nforeign keys :\nfollows.f2 = user_profiles.uid\nfollows.f1 = user_profiles.uid\ntweets.uid = user_profiles.uid\nmatched contents :\nuser_profiles.name ( Iron Man )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( San Francisco )\ncampuses.county ( San Francisco )\ndegrees.year ( 2000 )\nenrollments.year ( 2000 )",
  "database schema :\ntable program , columns = [ program.program_id ( int | primary key ) , program.name ( text ) , program.origin ( text ) , program.launch ( real ) , program.owner ( text ) ]\ntable channel , columns = [ channel.channel_id ( int | primary key ) , channel.name ( text ) , channel.owner ( text ) , channel.share_in_percent ( real ) , channel.rating_in_percent ( real ) ]\ntable broadcast , columns = [ broadcast.channel_id ( int | primary key ) , broadcast.program_id ( int | primary key ) , broadcast.time_of_day ( text ) ]\ntable broadcast_share , columns = [ broadcast_share.channel_id ( int | primary key ) , broadcast_share.program_id ( int | primary key ) , broadcast_share.date ( text ) , broadcast_share.share_in_percent ( real ) ]\nforeign keys :\nbroadcast.program_id = program.program_id\nbroadcast.channel_id = channel.channel_id\nbroadcast_share.program_id = program.program_id\nbroadcast_share.channel_id = channel.channel_id\nmatched contents : None",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.age ( 18 )\nclub.clubname ( Bootup Baltimore )",
  "database schema :\ntable gymnast , columns = [ gymnast.gymnast_id ( int | primary key ) , gymnast.floor_exercise_points ( real ) , gymnast.pommel_horse_points ( real ) , gymnast.rings_points ( real ) , gymnast.vault_points ( real ) , gymnast.parallel_bars_points ( real ) , gymnast.horizontal_bar_points ( real ) , gymnast.total_points ( real ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.age ( real ) , people.height ( real ) , people.hometown ( text ) ]\nforeign keys :\ngymnast.gymnast_id = people.people_id\nmatched contents :\npeople.people_id ( 5 )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nmusical.result ( Nominated )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.year ( 2010 )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\nseasons.year ( 2010 )\nresults.resultid ( 2010 )\nconstructorresults.constructorresultsid ( 2010 )\nqualifying.qualifyid ( 2010 )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nmarketing_regions.marketing_region_code ( CA )\nstores.marketing_region_code ( CA )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.job ( student )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.most_popular_in ( Bangladesh )\nartist.country ( Bangladesh )\nsong.country ( Bangladesh )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents :\nrestaurant.resname ( Subway )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\nnurse.position ( Nurse )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( Argentina , Cuba )\nairlines.callsign ( ARGENTINA )\nairlines.country ( Argentina , Cuba )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\ndrivers.nationality ( German )\nconstructors.nationality ( German )",
  "database schema :\ntable player_attributes , columns = [ player_attributes.id ( integer | primary key ) , player_attributes.player_fifa_api_id ( integer ) , player_attributes.player_api_id ( integer ) , player_attributes.date ( text ) , player_attributes.overall_rating ( integer ) , player_attributes.potential ( integer ) , player_attributes.preferred_foot ( text ) , player_attributes.attacking_work_rate ( text ) , player_attributes.defensive_work_rate ( text ) , player_attributes.crossing ( integer ) , player_attributes.finishing ( integer ) , player_attributes.heading_accuracy ( integer ) , player_attributes.short_passing ( integer ) , player_attributes.volleys ( integer ) , player_attributes.dribbling ( integer ) , player_attributes.curve ( integer ) , player_attributes.free_kick_accuracy ( integer ) , player_attributes.long_passing ( integer ) , player_attributes.ball_control ( integer ) , player_attributes.acceleration ( integer ) , player_attributes.sprint_speed ( integer ) , player_attributes.agility ( integer ) , player_attributes.reactions ( integer ) , player_attributes.balance ( integer ) , player_attributes.shot_power ( integer ) , player_attributes.jumping ( integer ) , player_attributes.stamina ( integer ) , player_attributes.strength ( integer ) , player_attributes.long_shots ( integer ) , player_attributes.aggression ( integer ) , player_attributes.interceptions ( integer ) , player_attributes.positioning ( integer ) , player_attributes.vision ( integer ) , player_attributes.penalties ( integer ) , player_attributes.marking ( integer ) , player_attributes.standing_tackle ( integer ) , player_attributes.sliding_tackle ( integer ) , player_attributes.gk_diving ( integer ) , player_attributes.gk_handling ( integer ) , player_attributes.gk_kicking ( integer ) , player_attributes.gk_positioning ( integer ) , player_attributes.gk_reflexes ( integer ) ]\ntable player , columns = [ player.id ( integer | primary key ) , player.player_api_id ( integer ) , player.player_name ( text ) , player.player_fifa_api_id ( integer ) , player.birthday ( text ) , player.height ( integer ) , player.weight ( integer ) ]\ntable league , columns = [ league.id ( integer | primary key ) , league.country_id ( integer ) , league.name ( text ) ]\ntable country , columns = [ country.id ( integer | primary key ) , country.name ( text ) ]\ntable team , columns = [ team.id ( integer | primary key ) , team.team_api_id ( integer ) , team.team_fifa_api_id ( integer ) , team.team_long_name ( text ) , team.team_short_name ( text ) ]\ntable team_attributes , columns = [ team_attributes.id ( integer | primary key ) , team_attributes.team_fifa_api_id ( integer ) , team_attributes.team_api_id ( integer ) , team_attributes.date ( text ) , team_attributes.buildupplayspeed ( integer ) , team_attributes.buildupplayspeedclass ( text ) , team_attributes.buildupplaydribbling ( integer ) , team_attributes.buildupplaydribblingclass ( text ) , team_attributes.buildupplaypassing ( integer ) , team_attributes.buildupplaypassingclass ( text ) , team_attributes.buildupplaypositioningclass ( text ) , team_attributes.chancecreationpassing ( integer ) , team_attributes.chancecreationpassingclass ( text ) , team_attributes.chancecreationcrossing ( integer ) , team_attributes.chancecreationcrossingclass ( text ) , team_attributes.chancecreationshooting ( integer ) , team_attributes.chancecreationshootingclass ( text ) , team_attributes.chancecreationpositioningclass ( text ) , team_attributes.defencepressure ( integer ) , team_attributes.defencepressureclass ( text ) , team_attributes.defenceaggression ( integer ) , team_attributes.defenceaggressionclass ( text ) , team_attributes.defenceteamwidth ( integer ) , team_attributes.defenceteamwidthclass ( text ) , team_attributes.defencedefenderlineclass ( text ) ]\nforeign keys :\nplayer_attributes.player_api_id = player.player_api_id\nplayer_attributes.player_fifa_api_id = player.player_fifa_api_id\nleague.country_id = country.id\nteam_attributes.team_api_id = team.team_api_id\nteam_attributes.team_fifa_api_id = team.team_fifa_api_id\nmatched contents :\nplayer_attributes.crossing ( 85 )\nplayer_attributes.finishing ( 85 )\nplayer_attributes.dribbling ( 85 )\nplayer_attributes.curve ( 85 )\nplayer_attributes.ball_control ( 85 )\nplayer_attributes.acceleration ( 85 )\nplayer_attributes.agility ( 85 )\nplayer_attributes.balance ( 85 )\nplayer_attributes.aggression ( 85 )\nplayer.id ( 85 )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( Italy )\nairlines.country ( Italy )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents :\nweb_client_accelerator.name ( CACHEbox , Fasterfox )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.product_price ( double ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(15) ) , customers.customer_number ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable contacts , columns = [ contacts.contact_id ( integer | primary key ) , contacts.customer_id ( integer ) , contacts.gender ( varchar(1) ) , contacts.first_name ( varchar(80) ) , contacts.last_name ( varchar(50) ) , contacts.contact_phone ( varchar(80) ) ]\ntable customer_address_history , columns = [ customer_address_history.customer_id ( integer ) , customer_address_history.address_id ( integer ) , customer_address_history.date_from ( datetime ) , customer_address_history.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.order_status_code ( varchar(15) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_address_history.address_id = addresses.address_id\ncustomer_address_history.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomer_orders.order_status_code ( Completed , Part )",
  "database schema :\ntable works_on , columns = [ works_on.essn ( integer | primary key | comment : employee ssn ) , works_on.pno ( integer | primary key | comment : project number ) , works_on.hours ( real ) ]\ntable employee , columns = [ employee.fname ( text | comment : first name ) , employee.minit ( text ) , employee.lname ( text | comment : last name ) , employee.ssn ( integer | primary key ) , employee.bdate ( text | comment : birth date ) , employee.address ( text ) , employee.sex ( text ) , employee.salary ( integer ) , employee.super_ssn ( integer ) , employee.dno ( integer | comment : department no ) ]\ntable department , columns = [ department.dname ( text | comment : department name ) , department.dnumber ( integer | primary key | comment : department number ) , department.mgr_ssn ( integer | comment : manager ssn ) , department.mgr_start_date ( text | comment : manager start date ) ]\ntable project , columns = [ project.pname ( text | comment : dependent name ) , project.pnumber ( integer | primary key | comment : dependent number ) , project.plocation ( text | comment : dependent location ) , project.dnum ( integer | comment : department number ) ]\ntable dependent , columns = [ dependent.essn ( integer | primary key | comment : employee ssn ) , dependent.dependent_name ( text | primary key ) , dependent.sex ( text ) , dependent.bdate ( text | comment : birth date ) , dependent.relationship ( text ) ]\ntable dept_locations , columns = [ dept_locations.dnumber ( integer | primary key | comment : department number ) , dept_locations.dlocation ( text | primary key | comment : department location ) ]\nforeign keys : None\nmatched contents :\ndependent.relationship ( Spouse )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nrooms.baseprice ( 150 )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\naircraft.aid ( 12 )\ncertificate.aid ( 12 )",
  "database schema :\ntable buildings , columns = [ buildings.id ( int | primary key ) , buildings.name ( text ) , buildings.city ( text ) , buildings.height ( int ) , buildings.stories ( int ) , buildings.status ( text ) ]\ntable companies , columns = [ companies.id ( int | primary key ) , companies.name ( text ) , companies.headquarters ( text ) , companies.industry ( text ) , companies.sales_billion ( real ) , companies.profits_billion ( real ) , companies.assets_billion ( real ) , companies.market_value_billion ( text ) ]\ntable office_locations , columns = [ office_locations.building_id ( int | primary key ) , office_locations.company_id ( int | primary key ) , office_locations.move_in_year ( int ) ]\nforeign keys :\noffice_locations.company_id = companies.id\noffice_locations.building_id = buildings.id\nmatched contents :\ncompanies.headquarters ( USA )",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents :\ndepartment.name ( Homeland Security , Treasury , State )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_locations.location_name ( Canada )",
  "database schema :\ntable investors , columns = [ investors.investor_id ( integer | primary key ) , investors.investor_details ( varchar(255) ) ]\ntable lots , columns = [ lots.lot_id ( integer | primary key ) , lots.investor_id ( integer ) , lots.lot_details ( varchar(255) ) ]\ntable ref_transaction_types , columns = [ ref_transaction_types.transaction_type_code ( varchar(10) | primary key ) , ref_transaction_types.transaction_type_description ( varchar(80) ) ]\ntable transactions , columns = [ transactions.transaction_id ( integer | primary key ) , transactions.investor_id ( integer ) , transactions.transaction_type_code ( varchar(10) ) , transactions.date_of_transaction ( datetime ) , transactions.amount_of_transaction ( decimal(19,4) ) , transactions.share_count ( varchar(40) ) , transactions.other_details ( varchar(255) ) ]\ntable sales , columns = [ sales.sales_transaction_id ( integer | primary key ) , sales.sales_details ( varchar(255) ) ]\ntable purchases , columns = [ purchases.purchase_transaction_id ( integer ) , purchases.purchase_details ( varchar(255) ) ]\ntable transactions_lots , columns = [ transactions_lots.transaction_id ( integer ) , transactions_lots.lot_id ( integer ) ]\nforeign keys :\nlots.investor_id = investors.investor_id\ntransactions.transaction_type_code = ref_transaction_types.transaction_type_code\ntransactions.investor_id = investors.investor_id\nsales.sales_transaction_id = transactions.transaction_id\npurchases.purchase_transaction_id = transactions.transaction_id\ntransactions_lots.transaction_id = transactions.transaction_id\ntransactions_lots.lot_id = lots.lot_id\nmatched contents :\nref_transaction_types.transaction_type_code ( PUR )\ntransactions.transaction_type_code ( PUR )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(80) ) , addresses.line_2 ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( char(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable people , columns = [ people.person_id ( integer | primary key ) , people.first_name ( varchar(255) ) , people.middle_name ( varchar(255) ) , people.last_name ( varchar(255) ) , people.cell_mobile_number ( varchar(40) ) , people.email_address ( varchar(40) ) , people.login_name ( varchar(40) ) , people.password ( varchar(40) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.student_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( varchar(100) | primary key ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable people_addresses , columns = [ people_addresses.person_address_id ( integer | primary key ) , people_addresses.person_id ( integer ) , people_addresses.address_id ( integer ) , people_addresses.date_from ( datetime ) , people_addresses.date_to ( datetime ) ]\ntable student_course_registrations , columns = [ student_course_registrations.student_id ( integer | primary key ) , student_course_registrations.course_id ( integer | primary key ) , student_course_registrations.registration_date ( datetime ) ]\ntable student_course_attendance , columns = [ student_course_attendance.student_id ( integer | primary key ) , student_course_attendance.course_id ( integer | primary key ) , student_course_attendance.date_of_attendance ( datetime ) ]\ntable candidates , columns = [ candidates.candidate_id ( integer | primary key ) , candidates.candidate_details ( varchar(255) ) ]\ntable candidate_assessments , columns = [ candidate_assessments.candidate_id ( integer | primary key ) , candidate_assessments.qualification ( char(15) | primary key ) , candidate_assessments.assessment_date ( datetime ) , candidate_assessments.asessment_outcome_code ( char(15) ) ]\nforeign keys :\nstudents.student_id = people.person_id\npeople_addresses.address_id = addresses.address_id\npeople_addresses.person_id = people.person_id\nstudent_course_registrations.course_id = courses.course_id\nstudent_course_registrations.student_id = students.student_id\nstudent_course_attendance.student_id = student_course_registrations.student_id\nstudent_course_attendance.course_id = student_course_registrations.course_id\ncandidates.candidate_id = people.person_id\ncandidate_assessments.candidate_id = candidates.candidate_id\nmatched contents : None",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nlocations.address ( 254 Ottilie Junction )\ntourist_attractions.how_to_get_there ( bus )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\ndepartment.departmentid ( 1 )\naffiliated_with.physician ( 1 )\naffiliated_with.department ( 1 )\naffiliated_with.primaryaffiliation ( 1 )\nnurse.position ( Nurse )\nnurse.registered ( 1 )\nappointment.physician ( 1 )\nmedication.code ( 1 )\nblock.blockfloor ( 1 )\nblock.blockcode ( 1 )\non_call.blockcode ( 1 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nfaculty.rank ( Instructor )",
  "database schema :\ntable club , columns = [ club.club_id ( int | primary key ) , club.name ( text ) , club.region ( text ) , club.start_year ( text ) ]\ntable club_rank , columns = [ club_rank.rank ( real | primary key ) , club_rank.club_id ( int | primary key ) , club_rank.gold ( real ) , club_rank.silver ( real ) , club_rank.bronze ( real ) , club_rank.total ( real ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.name ( text ) , player.position ( text ) , player.club_id ( int ) , player.apps ( real ) , player.tries ( real ) , player.goals ( text ) , player.points ( real ) ]\ntable competition , columns = [ competition.competition_id ( int | primary key ) , competition.year ( real ) , competition.competition_type ( text ) , competition.country ( text ) ]\ntable competition_result , columns = [ competition_result.competition_id ( int | primary key ) , competition_result.club_id_1 ( int | primary key ) , competition_result.club_id_2 ( int | primary key ) , competition_result.score ( text ) ]\nforeign keys :\nclub_rank.club_id = club.club_id\nplayer.club_id = club.club_id\ncompetition_result.competition_id = competition.competition_id\ncompetition_result.club_id_2 = club.club_id\ncompetition_result.club_id_1 = club.club_id\nmatched contents :\ncompetition.competition_type ( Tournament )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\nstudent_tests_taken.test_result ( Fail )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.name ( text ) , artist.country ( text ) , artist.year_join ( int ) , artist.age ( int ) ]\ntable exhibition , columns = [ exhibition.exhibition_id ( int | primary key ) , exhibition.year ( int ) , exhibition.theme ( text ) , exhibition.artist_id ( int ) , exhibition.ticket_price ( real ) ]\ntable exhibition_record , columns = [ exhibition_record.exhibition_id ( int | primary key ) , exhibition_record.date ( text | primary key ) , exhibition_record.attendance ( int ) ]\nforeign keys :\nexhibition.artist_id = artist.artist_id\nexhibition_record.exhibition_id = exhibition.exhibition_id\nmatched contents :\nartist.age ( 46 )",
  "database schema :\ntable college , columns = [ college.college_id ( int | primary key ) , college.name ( text ) , college.leader_name ( text ) , college.college_location ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.country ( text ) , member.college_id ( int ) ]\ntable round , columns = [ round.round_id ( int | primary key ) , round.member_id ( int | primary key ) , round.decoration_theme ( text ) , round.rank_in_round ( int ) ]\nforeign keys :\nmember.college_id = college.college_id\nround.member_id = member.member_id\nmatched contents :\nmember.country ( United States , Canada )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nproducts.product_name ( chervil )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nproducts.name ( DVD drive )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nstudent.major ( 600 )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.classroom ( 109 )\nteachers.classroom ( 109 )",
  "database schema :\ntable geographic , columns = [ geographic.city_name ( text | primary key ) , geographic.county ( text ) , geographic.region ( text ) ]\ntable restaurant , columns = [ restaurant.id ( int | primary key ) , restaurant.name ( text ) , restaurant.food_type ( text ) , restaurant.city_name ( text ) , restaurant.rating ( real ) ]\ntable location , columns = [ location.restaurant_id ( int | primary key ) , location.house_number ( int ) , location.street_name ( text ) , location.city_name ( text ) ]\nforeign keys :\nrestaurant.city_name = geographic.city_name\nlocation.restaurant_id = restaurant.restaurant_id\nlocation.city_name = geographic.city_name\nmatched contents : None",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_facilities.facility_code ( Gym )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nclass.crs_code ( CIS-220 , QM-261 )\ncourse.crs_code ( CIS-220 , QM-261 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nroles.role_name ( Proof Reader )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents : None",
  "database schema :\ntable festival_detail , columns = [ festival_detail.festival_id ( int | primary key ) , festival_detail.festival_name ( text ) , festival_detail.chair_name ( text ) , festival_detail.location ( text ) , festival_detail.year ( int ) , festival_detail.num_of_audience ( int ) ]\ntable artwork , columns = [ artwork.artwork_id ( int | primary key ) , artwork.type ( text ) , artwork.name ( text ) ]\ntable nomination , columns = [ nomination.artwork_id ( int | primary key ) , nomination.festival_id ( int | primary key ) , nomination.result ( text ) ]\nforeign keys :\nnomination.festival_id = festival_detail.festival_id\nnomination.artwork_id = artwork.artwork_id\nmatched contents : None",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Zach )\nperson.job ( doctor )\npersonfriend.name ( Zach )\npersonfriend.friend ( Zach )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nswimmer.id ( 3 )\nstadium.id ( 3 )\nevent.id ( 3 )\nevent.stadium_id ( 3 )\nrecord.id ( 3 )\nrecord.swimmer_id ( 3 )\nrecord.event_id ( 3 )",
  "database schema :\ntable aircraft , columns = [ aircraft.aircraft_id ( int | primary key ) , aircraft.order_year ( int ) , aircraft.manufacturer ( text ) , aircraft.model ( text ) , aircraft.fleet_series ( text ) , aircraft.powertrain ( text ) , aircraft.fuel_propulsion ( text ) ]\ntable pilot , columns = [ pilot.pilot_id ( int | primary key ) , pilot.pilot_name ( text ) , pilot.rank ( int ) , pilot.age ( int ) , pilot.nationality ( text ) , pilot.position ( text ) , pilot.join_year ( int ) , pilot.team ( text ) ]\ntable pilot_record , columns = [ pilot_record.record_id ( int ) , pilot_record.pilot_id ( int | primary key ) , pilot_record.aircraft_id ( int | primary key ) , pilot_record.date ( text | primary key ) ]\nforeign keys :\npilot_record.aircraft_id = aircraft.aircraft_id\npilot_record.pilot_id = pilot.pilot_id\nmatched contents :\npilot.team ( Bradley , Fordham )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents :\nweb_client_accelerator.name ( CProxy )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nrating.stars ( 3 , 4 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.name ( Aerosmith )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\nactor.actor_id ( 1 )\naddress.address_id ( 1 )\naddress.city_id ( 1 )\ncategory.category_id ( 1 )\ncity.city_id ( 1 )\ncity.country_id ( 1 )\ncountry.country_id ( 1 )\ncustomer.customer_id ( 1 )\ncustomer.store_id ( 1 )\ncustomer.active ( 1 )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\ndocuments.document_id ( 2 )\ngrants.grant_id ( 2 )\ngrants.organisation_id ( 2 )\norganisations.organisation_id ( 2 )\nproject_staff.project_id ( 2 )\nprojects.project_id ( 2 )\nprojects.project_details ( omnis )\nresearch_staff.staff_id ( 2 )\nresearch_staff.employer_organisation_id ( 2 )\ntasks.task_id ( 2 )\ntasks.project_id ( 2 )",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents :\nmedicine_enzyme_interaction.interaction_type ( inhibitor , activitor )",
  "database schema :\ntable county_public_safety , columns = [ county_public_safety.county_id ( int | primary key ) , county_public_safety.name ( text ) , county_public_safety.population ( int ) , county_public_safety.police_officers ( int ) , county_public_safety.residents_per_officer ( int ) , county_public_safety.case_burden ( int ) , county_public_safety.crime_rate ( real ) , county_public_safety.police_force ( text ) , county_public_safety.location ( text ) ]\ntable city , columns = [ city.city_id ( int | primary key ) , city.county_id ( int ) , city.name ( text ) , city.white ( real ) , city.black ( real ) , city.amerindian ( real ) , city.asian ( real ) , city.multiracial ( real ) , city.hispanic ( real ) ]\nforeign keys :\ncity.county_id = county_public_safety.county_id\nmatched contents :\ncounty_public_safety.location ( East )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.location_id ( 2500 )\njobs.min_salary ( 2500 )\nemployees.salary ( 2500 )\nlocations.location_id ( 2500 )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nreviewer.name ( Sarah Martinez )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.artist ( text ) , artist.age ( int ) , artist.famous_title ( text ) , artist.famous_release_date ( text ) ]\ntable volume , columns = [ volume.volume_id ( int | primary key ) , volume.volume_issue ( text ) , volume.issue_date ( text ) , volume.weeks_on_top ( real ) , volume.song ( text ) , volume.artist_id ( int ) ]\ntable music_festival , columns = [ music_festival.id ( int | primary key ) , music_festival.music_festival ( text ) , music_festival.date_of_ceremony ( text ) , music_festival.category ( text ) , music_festival.volume ( int ) , music_festival.result ( text ) ]\nforeign keys :\nvolume.artist_id = artist.artist_id\nmusic_festival.volume = volume.volume_id\nmatched contents :\nmusic_festival.category ( Best Song )\nmusic_festival.result ( Awarded )",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents :\nmedicine.id ( 3 )\nenzyme.id ( 3 )\nmedicine_enzyme_interaction.enzyme_id ( 3 )\nmedicine_enzyme_interaction.medicine_id ( 3 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 1990 , 2000 )\nappearances.year ( 1990 , 2000 )\nbatting.year ( 1990 , 2000 )\nbatting_postseason.year ( 1990 , 2000 )\nfielding.year ( 1990 , 2000 )\nfielding.inn_outs ( 1990 , 2000 )\nfielding_postseason.year ( 1990 , 2000 )\nhall_of_fame.yearid ( 1990 , 2000 )\nhome_game.year ( 1990 , 2000 )\nhome_game.attendance ( 2000 )\nmanager.year ( 1990 )\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Count , Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable pilot , columns = [ pilot.pilot_id ( int(11) | primary key ) , pilot.name ( varchar(50) ) , pilot.age ( int(11) ) ]\ntable aircraft , columns = [ aircraft.aircraft_id ( int(11) | primary key ) , aircraft.aircraft ( varchar(50) ) , aircraft.description ( varchar(50) ) , aircraft.max_gross_weight ( varchar(50) ) , aircraft.total_disk_area ( varchar(50) ) , aircraft.max_disk_loading ( varchar(50) ) ]\ntable match , columns = [ match.round ( real | primary key ) , match.location ( text ) , match.country ( text ) , match.date ( text ) , match.fastest_qualifying ( text ) , match.winning_pilot ( text ) , match.winning_aircraft ( text ) ]\ntable airport , columns = [ airport.airport_id ( int | primary key ) , airport.airport_name ( text ) , airport.total_passengers ( real ) , airport.%_change_2007 ( text ) , airport.international_passengers ( real ) , airport.domestic_passengers ( real ) , airport.transit_passengers ( real ) , airport.aircraft_movements ( real ) , airport.freight_metric_tonnes ( real ) ]\ntable airport_aircraft , columns = [ airport_aircraft.id ( int ) , airport_aircraft.airport_id ( int | primary key ) , airport_aircraft.aircraft_id ( int | primary key ) ]\nforeign keys :\nmatch.winning_pilot = pilot.pilot_id\nmatch.winning_aircraft = aircraft.aircraft_id\nairport_aircraft.aircraft_id = aircraft.aircraft_id\nairport_aircraft.airport_id = airport.airport_id\nmatched contents :\naircraft.aircraft ( Robinson R-22 )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\nguests.gender_code ( Female )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartments.apt_id ( 4 )\napartments.bedroom_count ( 4 )\nguests.guest_id ( 4 )\napartment_bookings.apt_id ( 4 )\napartment_bookings.guest_id ( 4 )\nview_unit_status.apt_id ( 4 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.state ( CA )\ninvoices.billing_state ( CA )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\nactor.actor_id ( 100 , 200 )\naddress.address_id ( 100 , 200 )\naddress.city_id ( 100 , 200 )\ncity.city_id ( 100 , 200 )\ncity.country_id ( 100 )\ncountry.country_id ( 100 )\ncustomer.customer_id ( 100 , 200 )\ncustomer.address_id ( 100 , 200 )\nfilm.film_id ( 100 , 200 )\nfilm.length ( 100 )\nfilm.rating ( PG )\nfilm_actor.actor_id ( 200 )\nfilm_actor.film_id ( 200 )\nfilm_category.film_id ( 200 )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( United States )\nairlines.callsign ( UNITED , STATES )\nairlines.country ( United States )",
  "database schema :\ntable customer_master_index , columns = [ customer_master_index.master_customer_id ( integer | primary key ) , customer_master_index.cmi_details ( varchar(255) ) ]\ntable cmi_cross_references , columns = [ cmi_cross_references.cmi_cross_ref_id ( integer | primary key | comment : cmi cross reference id ) , cmi_cross_references.master_customer_id ( integer ) , cmi_cross_references.source_system_code ( char(15) ) ]\ntable council_tax , columns = [ council_tax.council_tax_id ( integer | primary key ) , council_tax.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable business_rates , columns = [ business_rates.business_rates_id ( integer | primary key ) , business_rates.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable benefits_overpayments , columns = [ benefits_overpayments.council_tax_id ( integer | primary key ) , benefits_overpayments.cmi_cross_ref_id ( integer ) ]\ntable parking_fines , columns = [ parking_fines.council_tax_id ( integer | primary key ) , parking_fines.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable rent_arrears , columns = [ rent_arrears.council_tax_id ( integer | primary key ) , rent_arrears.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable electoral_register , columns = [ electoral_register.electoral_register_id ( integer | primary key ) , electoral_register.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\nforeign keys :\ncmi_cross_references.master_customer_id = customer_master_index.master_customer_id\ncouncil_tax.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbusiness_rates.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbenefits_overpayments.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nparking_fines.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nrent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nelectoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nmatched contents :\ncmi_cross_references.source_system_code ( Parking , Tax )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.rank_in_series ( int ) , film.number_in_season ( int ) , film.title ( text ) , film.directed_by ( text ) , film.original_air_date ( text ) , film.production_code ( text ) ]\ntable cinema , columns = [ cinema.cinema_id ( int | primary key ) , cinema.name ( text ) , cinema.openning_year ( int ) , cinema.capacity ( int ) , cinema.location ( text ) ]\ntable schedule , columns = [ schedule.cinema_id ( int | primary key ) , schedule.film_id ( int | primary key ) , schedule.date ( text ) , schedule.show_times_per_day ( int ) , schedule.price ( float ) ]\nforeign keys :\nschedule.cinema_id = cinema.cinema_id\nschedule.film_id = film.film_id\nmatched contents :\nfilm.film_id ( 2 )\nfilm.number_in_season ( 2 )\ncinema.cinema_id ( 2 )\nschedule.cinema_id ( 2 )\nschedule.film_id ( 2 )\nschedule.show_times_per_day ( 2 )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents : None",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nemployee.name ( Mark Young )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.first_name ( Eduardo )\ncustomers.last_name ( Martins )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.city ( Lake Geovannyton )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\nroom.roomnumber ( 112 )\nstay.room ( 112 )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\ndepartment.dept_name ( Computer Info. Systems , Accounting )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_locations.location_code ( x )\ndocument_locations.location_code ( x )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nartist.gender ( Female )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.iata ( END )\nairlines.icao ( END )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.age ( int ) , people.name ( text ) , people.nationality ( text ) , people.graduation_college ( text ) ]\ntable company , columns = [ company.company_id ( real | primary key ) , company.name ( text ) , company.headquarters ( text ) , company.industry ( text ) , company.sales_in_billion ( real ) , company.profits_in_billion ( real ) , company.assets_in_billion ( real ) , company.market_value_in_billion ( real ) ]\ntable employment , columns = [ employment.company_id ( int | primary key ) , employment.people_id ( int | primary key ) , employment.year_working ( int ) ]\nforeign keys :\nemployment.people_id = people.people_id\nemployment.company_id = company.company_id\nmatched contents :\ncompany.industry ( Banking , Retailing )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nsection.semester ( Spring )\nteaches.semester ( Spring )\ntakes.semester ( Spring )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 70 )\nstatus.station_id ( 70 )\ntrip.duration ( 70 )\ntrip.start_station_id ( 70 )\ntrip.end_station_id ( 70 )\nweather.max_temperature_f ( 70 )\nweather.mean_temperature_f ( 70 )\nweather.max_humidity ( 70 )\nweather.mean_humidity ( 70 )\nweather.min_humidity ( 70 )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.county ( Orange )\ndegrees.year ( 2000 )\nenrollments.year ( 2000 )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nmovie.director ( Steven Spielberg )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\nmedication.name ( Thesisin )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2001 )\nall_star.starting_pos ( 3 )\nappearances.year ( 2001 )\nappearances.g_all ( 3 )\nappearances.g_batting ( 3 )\nappearances.g_defense ( 3 )\nappearances.g_c ( 3 )\nappearances.g_1b ( 3 )\nappearances.g_2b ( 3 )\nappearances.g_3b ( 3 )\nappearances.g_cf ( 3 )\nappearances.g_dh ( 3 )\nbatting.year ( 2001 )\nbatting_postseason.year ( 2001 )\nfielding.year ( 2001 )\nfielding.inn_outs ( 2001 )\nfielding_postseason.year ( 2001 )\nhall_of_fame.yearid ( 2001 )\nhall_of_fame.category ( Player )\nhome_game.year ( 2001 )\nmanager.year ( 2001 )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\nfilm.title ( HUNGER ROOF )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nemployees.title ( IT Staff )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\nmatch_season.position ( Defender )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nemployee.eid ( 242518965 )\ncertificate.eid ( 242518965 )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.no ( 100 )\nwine.price ( 100 )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\nmountain.range ( Toubkal Atlas , Lasta Massif )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nswimmer.id ( 1 )\nstadium.id ( 1 )\nevent.id ( 1 )\nevent.stadium_id ( 1 )\nrecord.id ( 1 )\nrecord.result ( Win )\nrecord.swimmer_id ( 1 )\nrecord.event_id ( 1 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\ncustomers.customer_name ( Jeramie )",
  "database schema :\ntable station , columns = [ station.station_id ( int | primary key ) , station.name ( text ) , station.annual_entry_exit ( real ) , station.annual_interchanges ( real ) , station.total_passengers ( real ) , station.location ( text ) , station.main_services ( text ) , station.number_of_platforms ( int ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.name ( text ) , train.time ( text ) , train.service ( text ) ]\ntable train_station , columns = [ train_station.train_id ( int | primary key ) , train_station.station_id ( int | primary key ) ]\nforeign keys :\ntrain_station.station_id = station.station_id\ntrain_station.train_id = train.train_id\nmatched contents : None",
  "database schema :\ntable player , columns = [ player.player_id ( int | primary key ) , player.sponsor_name ( text ) , player.player_name ( text ) , player.gender ( text ) , player.residence ( text ) , player.occupation ( text ) , player.votes ( int ) , player.rank ( text ) ]\ntable club , columns = [ club.club_id ( int | primary key ) , club.club_name ( text ) , club.region ( text ) , club.start_year ( int ) ]\ntable coach , columns = [ coach.coach_id ( int | primary key ) , coach.coach_name ( text | comment : player name ) , coach.gender ( text ) , coach.club_id ( int ) , coach.rank ( int ) ]\ntable player_coach , columns = [ player_coach.player_id ( int | primary key ) , player_coach.coach_id ( int | primary key ) , player_coach.starting_year ( int ) ]\ntable match_result , columns = [ match_result.rank ( int | primary key ) , match_result.club_id ( int | primary key ) , match_result.gold ( int ) , match_result.big_silver ( int ) , match_result.small_silver ( int ) , match_result.bronze ( int ) , match_result.points ( int ) ]\nforeign keys :\ncoach.club_id = club.club_id\nplayer_coach.coach_id = coach.coach_id\nplayer_coach.player_id = player.player_id\nmatch_result.club_id = club.club_id\nmatched contents :\nclub.start_year ( 2011 )\nplayer_coach.starting_year ( 2011 )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nmanufacturers.name ( Sony )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 1998 )\nappearances.year ( 1998 )\nbatting.year ( 1998 )\nbatting_postseason.year ( 1998 )\nfielding.year ( 1998 )\nfielding.inn_outs ( 1998 )\nfielding_postseason.year ( 1998 )\nhall_of_fame.yearid ( 1998 )\nhall_of_fame.category ( Player )\nhome_game.year ( 1998 )\nmanager.year ( 1998 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomer_orders.order_details ( Second time )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents : None",
  "database schema :\ntable workshop , columns = [ workshop.workshop_id ( int | primary key ) , workshop.date ( text ) , workshop.venue ( text ) , workshop.name ( text ) ]\ntable submission , columns = [ submission.submission_id ( int | primary key ) , submission.scores ( real ) , submission.author ( text ) , submission.college ( text ) ]\ntable acceptance , columns = [ acceptance.submission_id ( int | primary key ) , acceptance.workshop_id ( int | primary key ) , acceptance.result ( text ) ]\nforeign keys :\nacceptance.workshop_id = workshop.workshop_id\nacceptance.submission_id = submission.submission_id\nmatched contents :\nsubmission.college ( Florida , Temple )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nmanufacturers.founder ( Andy )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(40) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_name ( varchar(40) ) ]\ntable available_policies , columns = [ available_policies.policy_id ( integer | primary key ) , available_policies.policy_type_code ( char(15) ) , available_policies.customer_phone ( varchar(255) ) ]\ntable customers_policies , columns = [ customers_policies.customer_id ( integer | primary key ) , customers_policies.policy_id ( integer | primary key ) , customers_policies.date_opened ( date ) , customers_policies.date_closed ( date ) ]\ntable first_notification_of_loss , columns = [ first_notification_of_loss.fnol_id ( integer | primary key ) , first_notification_of_loss.customer_id ( integer ) , first_notification_of_loss.policy_id ( integer ) , first_notification_of_loss.service_id ( integer ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.fnol_id ( integer ) , claims.effective_date ( date ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.effective_date ( date ) , settlements.settlement_amount ( real ) ]\nforeign keys :\ncustomers_policies.policy_id = available_policies.policy_id\ncustomers_policies.customer_id = customers.customer_id\nfirst_notification_of_loss.customer_id = customers_policies.customer_id\nfirst_notification_of_loss.policy_id = customers_policies.policy_id\nfirst_notification_of_loss.service_id = services.service_id\nclaims.fnol_id = first_notification_of_loss.fnol_id\nsettlements.claim_id = claims.claim_id\nmatched contents :\nservices.service_name ( New policy application , Close a policy )",
  "database schema :\ntable works_on , columns = [ works_on.essn ( integer | primary key | comment : employee ssn ) , works_on.pno ( integer | primary key | comment : project number ) , works_on.hours ( real ) ]\ntable employee , columns = [ employee.fname ( text | comment : first name ) , employee.minit ( text ) , employee.lname ( text | comment : last name ) , employee.ssn ( integer | primary key ) , employee.bdate ( text | comment : birth date ) , employee.address ( text ) , employee.sex ( text ) , employee.salary ( integer ) , employee.super_ssn ( integer ) , employee.dno ( integer | comment : department no ) ]\ntable department , columns = [ department.dname ( text | comment : department name ) , department.dnumber ( integer | primary key | comment : department number ) , department.mgr_ssn ( integer | comment : manager ssn ) , department.mgr_start_date ( text | comment : manager start date ) ]\ntable project , columns = [ project.pname ( text | comment : dependent name ) , project.pnumber ( integer | primary key | comment : dependent number ) , project.plocation ( text | comment : dependent location ) , project.dnum ( integer | comment : department number ) ]\ntable dependent , columns = [ dependent.essn ( integer | primary key | comment : employee ssn ) , dependent.dependent_name ( text | primary key ) , dependent.sex ( text ) , dependent.bdate ( text | comment : birth date ) , dependent.relationship ( text ) ]\ntable dept_locations , columns = [ dept_locations.dnumber ( integer | primary key | comment : department number ) , dept_locations.dlocation ( text | primary key | comment : department location ) ]\nforeign keys : None\nmatched contents : None",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\naddresses.zip_postcode ( 918 )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nrating.stars ( 3 , 5 )",
  "database schema :\ntable phone , columns = [ phone.name ( text ) , phone.phone_id ( int | primary key ) , phone.memory_in_g ( int ) , phone.carrier ( text ) , phone.price ( real ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.district ( text ) , market.num_of_employees ( int ) , market.num_of_shops ( real ) , market.ranking ( int ) ]\ntable phone_market , columns = [ phone_market.market_id ( int | primary key ) , phone_market.phone_id ( text | primary key ) , phone_market.num_of_stock ( int ) ]\nforeign keys :\nphone_market.phone_id = phone.phone_id\nphone_market.market_id = market.market_id\nmatched contents :\nphone.memory_in_g ( 32 )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.department_id ( 50 )\njobs.max_salary ( 12000 )\nemployees.salary ( 7000 , 12000 )\nemployees.department_id ( 50 )\njob_history.department_id ( 50 )",
  "database schema :\ntable mountain , columns = [ mountain.mountain_id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable climber , columns = [ climber.climber_id ( int | primary key ) , climber.name ( text ) , climber.country ( text ) , climber.time ( text ) , climber.points ( real ) , climber.mountain_id ( int ) ]\nforeign keys :\nclimber.mountain_id = mountain.mountain_id\nmatched contents :\nclimber.country ( United Kingdom )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.first_name ( Astrid )\ncustomers.last_name ( Gruber )\ntracks.name ( Numbers )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\nproject_outcomes.outcome_code ( Patent , Paper )\nresearch_outcomes.outcome_code ( Patent , Paper )",
  "database schema :\ntable device , columns = [ device.device_id ( int | primary key ) , device.device ( text ) , device.carrier ( text ) , device.package_version ( text ) , device.applications ( text ) , device.software_platform ( text ) ]\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.shop_name ( text ) , shop.location ( text ) , shop.open_date ( text ) , shop.open_year ( int ) ]\ntable stock , columns = [ stock.shop_id ( int | primary key ) , stock.device_id ( int | primary key ) , stock.quantity ( int ) ]\nforeign keys :\nstock.device_id = device.device_id\nstock.shop_id = shop.shop_id\nmatched contents :\ndevice.software_platform ( Android )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents : None",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.title ( text ) , film.studio ( text ) , film.director ( text ) , film.gross_in_dollar ( int ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.country ( text ) , market.number_cities ( int ) ]\ntable film_market_estimation , columns = [ film_market_estimation.estimation_id ( int | primary key ) , film_market_estimation.low_estimate ( real ) , film_market_estimation.high_estimate ( real ) , film_market_estimation.film_id ( int ) , film_market_estimation.type ( text ) , film_market_estimation.market_id ( int ) , film_market_estimation.year ( int ) ]\nforeign keys :\nfilm_market_estimation.market_id = market.market_id\nfilm_market_estimation.film_id = film.film_id\nmatched contents :\nfilm.director ( Walter Hill )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nref_document_status.document_status_code ( working )\ndocuments.document_status_code ( working )",
  "database schema :\ntable club , columns = [ club.club_id ( int | primary key ) , club.name ( text ) , club.region ( text ) , club.start_year ( text ) ]\ntable club_rank , columns = [ club_rank.rank ( real | primary key ) , club_rank.club_id ( int | primary key ) , club_rank.gold ( real ) , club_rank.silver ( real ) , club_rank.bronze ( real ) , club_rank.total ( real ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.name ( text ) , player.position ( text ) , player.club_id ( int ) , player.apps ( real ) , player.tries ( real ) , player.goals ( text ) , player.points ( real ) ]\ntable competition , columns = [ competition.competition_id ( int | primary key ) , competition.year ( real ) , competition.competition_type ( text ) , competition.country ( text ) ]\ntable competition_result , columns = [ competition_result.competition_id ( int | primary key ) , competition_result.club_id_1 ( int | primary key ) , competition_result.club_id_2 ( int | primary key ) , competition_result.score ( text ) ]\nforeign keys :\nclub_rank.club_id = club.club_id\nplayer.club_id = club.club_id\ncompetition_result.competition_id = competition.competition_id\ncompetition_result.club_id_2 = club.club_id\ncompetition_result.club_id_1 = club.club_id\nmatched contents :\nclub.name ( AIB )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( Los Angeles , San Francisco , Northridge )\ncampuses.county ( Los Angeles , San Francisco )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\njobs.min_salary ( 6000 )\njobs.max_salary ( 6000 )\nemployees.salary ( 6000 )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.time ( 12:00:00 , 09:00:00 )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\nelection.committee ( Appropriations )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nmusical.award ( Tony Award )",
  "database schema :\ntable event , columns = [ event.event_id ( int | primary key ) , event.date ( text ) , event.venue ( text ) , event.name ( text ) , event.event_attendance ( int ) ]\ntable journalist , columns = [ journalist.journalist_id ( int | primary key ) , journalist.name ( text ) , journalist.nationality ( text ) , journalist.age ( text ) , journalist.years_working ( int ) ]\ntable news_report , columns = [ news_report.journalist_id ( int | primary key ) , news_report.event_id ( int | primary key ) , news_report.work_type ( text ) ]\nforeign keys :\nnews_report.event_id = event.event_id\nnews_report.journalist_id = journalist.journalist_id\nmatched contents :\nevent.event_id ( 2 )\njournalist.journalist_id ( 2 )\nnews_report.event_id ( 2 )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nref_hotel_star_ratings.star_rating_code ( 5 )\nref_hotel_star_ratings.star_rating_description ( star )\nref_attraction_types.attraction_type_code ( 5 )\nhotels.star_rating_code ( 5 )\ntourist_attractions.attraction_type_code ( 5 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nstudent.major ( 520 )\ndepartment.dno ( 520 )\nmember_of.dno ( 520 )\ncourse.dno ( 520 )\nminor_in.dno ( 520 )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\ncountry.capital ( Dublin )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.country ( Malaysia , UK )",
  "database schema :\ntable phone , columns = [ phone.name ( text ) , phone.phone_id ( int | primary key ) , phone.memory_in_g ( int ) , phone.carrier ( text ) , phone.price ( real ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.district ( text ) , market.num_of_employees ( int ) , market.num_of_shops ( real ) , market.ranking ( int ) ]\ntable phone_market , columns = [ phone_market.market_id ( int | primary key ) , phone_market.phone_id ( text | primary key ) , phone_market.num_of_stock ( int ) ]\nforeign keys :\nphone_market.phone_id = phone.phone_id\nphone_market.market_id = market.market_id\nmatched contents :\nphone.carrier ( TMobile , Sprint )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_status_code ( Reported )\nproblem_status_codes.problem_status_code ( Reported )\nproblem_status_codes.problem_status_description ( Reported )\nstaff.staff_first_name ( Kenton , Lacey )\nstaff.staff_last_name ( Champlin , Bosco )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nphone.accreditation_type ( Provisional , Full )",
  "database schema :\ntable scientists , columns = [ scientists.ssn ( int | primary key ) , scientists.name ( char(30) ) ]\ntable projects , columns = [ projects.code ( char(4) | primary key ) , projects.name ( char(50) ) , projects.hours ( int ) ]\ntable assignedto , columns = [ assignedto.scientist ( int | primary key ) , assignedto.project ( char(4) | primary key ) ]\nforeign keys :\nassignedto.project = projects.code\nassignedto.scientist = scientists.ssn\nmatched contents :\nprojects.name ( A Puzzling Parallax )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.drink ( 2010 )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.appelation ( St. Helena )\nwine.appelation ( St. Helena )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nfaculty.rank ( Professor )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.rating ( 8 )\nsong.rating ( 8 )\nsong.languages ( english )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.city ( Mountain View , Palo Alto )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\ncustomer.first_name ( APRIL )\ncustomer.last_name ( BURNS )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.appelation ( North Coast )\nappellations.area ( North Coast )\nwine.appelation ( North Coast )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents : None",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.no ( 50 )\nwine.no ( 100 , 50 )\nwine.price ( 100 , 50 )\nwine.cases ( 50 )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.campus ( San Jose State University )\ncampuses.location ( San Jose )\ndegrees.year ( 2004 )\ndiscipline_enrollments.year ( 2004 )\nenrollments.year ( 2004 )\nfaculty.year ( 2004 )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nmanufacturers.name ( Creative Labs , Sony )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( China )\nairlines.country ( China )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nmusical.nominee ( Cleavant Derricks , Bob Fosse )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.id ( 8 )\nalbums.id ( 8 )\nalbums.artist_id ( 8 )\nemployees.id ( 8 )\ncustomers.id ( 8 )\ngenres.id ( 8 )\ninvoices.customer_id ( 8 )\ninvoice_lines.id ( 8 )\ninvoice_lines.invoice_id ( 8 )\ninvoice_lines.track_id ( 8 )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\ngrants.grant_start_date ( 1986-08-26 20:49:27 )\ngrants.grant_end_date ( 1989-03-16 18:27:16 )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents : None",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.name ( Billy Cobham )\ntracks.composer ( Billy Cobham )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nbank.bname ( morningside )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\ncustomers.first_name ( Marina )\ncustomers.last_name ( Kohler )",
  "database schema :\ntable business , columns = [ business.bid ( int | primary key ) , business.business_id ( text ) , business.name ( text ) , business.full_address ( text ) , business.city ( text ) , business.latitude ( text ) , business.longitude ( text ) , business.review_count ( int ) , business.is_open ( int ) , business.rating ( real ) , business.state ( text ) ]\ntable category , columns = [ category.id ( int | primary key ) , category.business_id ( text ) , category.category_name ( text ) ]\ntable user , columns = [ user.uid ( int | primary key ) , user.user_id ( text ) , user.name ( text ) ]\ntable checkin , columns = [ checkin.cid ( int | primary key ) , checkin.business_id ( text ) , checkin.count ( int ) , checkin.day ( text ) ]\ntable neighbourhood , columns = [ neighbourhood.id ( int | primary key ) , neighbourhood.business_id ( text ) , neighbourhood.neighbourhood_name ( text ) ]\ntable review , columns = [ review.rid ( int | primary key ) , review.business_id ( text ) , review.user_id ( text ) , review.rating ( real ) , review.text ( text ) , review.year ( int ) , review.month ( text ) ]\ntable tip , columns = [ tip.tip_id ( int | primary key ) , tip.business_id ( text ) , tip.text ( text ) , tip.user_id ( text ) , tip.likes ( int ) , tip.year ( int ) , tip.month ( text ) ]\nforeign keys :\ncategory.business_id = business.business_id\ncheckin.business_id = business.business_id\nneighbourhood.business_id = business.business_id\nreview.user_id = user.user_id\nreview.business_id = business.business_id\ntip.user_id = user.user_id\ntip.business_id = business.business_id\nmatched contents : None",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nartist.name ( AC/DC )\ntrack.composer ( AC/DC )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.product_price ( double ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(15) ) , customers.customer_number ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable contacts , columns = [ contacts.contact_id ( integer | primary key ) , contacts.customer_id ( integer ) , contacts.gender ( varchar(1) ) , contacts.first_name ( varchar(80) ) , contacts.last_name ( varchar(50) ) , contacts.contact_phone ( varchar(80) ) ]\ntable customer_address_history , columns = [ customer_address_history.customer_id ( integer ) , customer_address_history.address_id ( integer ) , customer_address_history.date_from ( datetime ) , customer_address_history.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.order_status_code ( varchar(15) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_address_history.address_id = addresses.address_id\ncustomer_address_history.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.country ( USA )",
  "database schema :\ntable school , columns = [ school.school_id ( int | primary key ) , school.school ( text ) , school.location ( text ) , school.enrollment ( real ) , school.founded ( real ) , school.denomination ( text ) , school.boys_or_girls ( text ) , school.day_or_boarding ( text ) , school.year_entered_competition ( real ) , school.school_colors ( text ) ]\ntable school_details , columns = [ school_details.school_id ( int | primary key ) , school_details.nickname ( text ) , school_details.colors ( text ) , school_details.league ( text ) , school_details.class ( text ) , school_details.division ( text ) ]\ntable school_performance , columns = [ school_performance.school_id ( int | primary key ) , school_performance.school_year ( text | primary key ) , school_performance.class_a ( text ) , school_performance.class_aa ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.team ( text ) , player.age ( int ) , player.position ( text ) , player.school_id ( int ) ]\nforeign keys :\nschool_details.school_id = school.school_id\nschool_performance.school_id = school.school_id\nplayer.school_id = school.school_id\nmatched contents :\nschool.school_id ( 5 )\nschool_details.school_id ( 5 )\nschool_performance.school_id ( 5 )\nplayer.player_id ( 5 )\nplayer.school_id ( 5 )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\ncustomers.customer_first_name ( Art )\ncustomers.customer_last_name ( Turcotte )",
  "database schema :\ntable mission , columns = [ mission.mission_id ( int | primary key ) , mission.ship_id ( int ) , mission.code ( text ) , mission.launched_year ( int ) , mission.location ( text ) , mission.speed_knots ( int ) , mission.fate ( text ) ]\ntable ship , columns = [ ship.ship_id ( int | primary key ) , ship.name ( text ) , ship.type ( text ) , ship.nationality ( text ) , ship.tonnage ( int ) ]\nforeign keys :\nmission.ship_id = ship.ship_id\nmatched contents :\nship.nationality ( United Kingdom , United States )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nreservations.firstname ( ROY )",
  "database schema :\ntable player , columns = [ player.player_id ( int | primary key ) , player.sponsor_name ( text ) , player.player_name ( text ) , player.gender ( text ) , player.residence ( text ) , player.occupation ( text ) , player.votes ( int ) , player.rank ( text ) ]\ntable club , columns = [ club.club_id ( int | primary key ) , club.club_name ( text ) , club.region ( text ) , club.start_year ( int ) ]\ntable coach , columns = [ coach.coach_id ( int | primary key ) , coach.coach_name ( text | comment : player name ) , coach.gender ( text ) , coach.club_id ( int ) , coach.rank ( int ) ]\ntable player_coach , columns = [ player_coach.player_id ( int | primary key ) , player_coach.coach_id ( int | primary key ) , player_coach.starting_year ( int ) ]\ntable match_result , columns = [ match_result.rank ( int | primary key ) , match_result.club_id ( int | primary key ) , match_result.gold ( int ) , match_result.big_silver ( int ) , match_result.small_silver ( int ) , match_result.bronze ( int ) , match_result.points ( int ) ]\nforeign keys :\ncoach.club_id = club.club_id\nplayer_coach.coach_id = coach.coach_id\nplayer_coach.player_id = player.player_id\nmatch_result.club_id = club.club_id\nmatched contents :\nplayer.player_id ( 1 )\nclub.club_id ( 1 )\ncoach.coach_id ( 1 )\ncoach.club_id ( 1 )\ncoach.rank ( 1 )\nplayer_coach.player_id ( 1 )\nplayer_coach.coach_id ( 1 )\nmatch_result.rank ( 1 )\nmatch_result.club_id ( 1 )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.artist ( text ) , artist.age ( int ) , artist.famous_title ( text ) , artist.famous_release_date ( text ) ]\ntable volume , columns = [ volume.volume_id ( int | primary key ) , volume.volume_issue ( text ) , volume.issue_date ( text ) , volume.weeks_on_top ( real ) , volume.song ( text ) , volume.artist_id ( int ) ]\ntable music_festival , columns = [ music_festival.id ( int | primary key ) , music_festival.music_festival ( text ) , music_festival.date_of_ceremony ( text ) , music_festival.category ( text ) , music_festival.volume ( int ) , music_festival.result ( text ) ]\nforeign keys :\nvolume.artist_id = artist.artist_id\nmusic_festival.volume = volume.volume_id\nmatched contents :\nmusic_festival.result ( Awarded )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\nteam.name ( Ryley Goldner )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.lname ( Weirich )\nauthors.fname ( Stephanie )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.year ( 2009 )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\nseasons.year ( 2009 )\nresults.resultid ( 2009 )\nconstructorresults.constructorresultsid ( 2009 )\nqualifying.qualifyid ( 2009 )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\narchitect.nationality ( American , Canadian )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nteachers.lastname ( MOYER )\nteachers.firstname ( OTHA )",
  "database schema :\ntable roles , columns = [ roles.role_code ( varchar(15) | primary key ) , roles.role_description ( varchar(80) ) ]\ntable users , columns = [ users.user_id ( integer | primary key ) , users.role_code ( varchar(15) ) , users.user_name ( varchar(40) ) , users.user_login ( varchar(40) ) , users.password ( varchar(40) ) ]\ntable document_structures , columns = [ document_structures.document_structure_code ( varchar(15) | primary key ) , document_structures.parent_document_structure_code ( varchar(15) ) , document_structures.document_structure_description ( varchar(80) ) ]\ntable functional_areas , columns = [ functional_areas.functional_area_code ( varchar(15) | primary key ) , functional_areas.parent_functional_area_code ( varchar(15) ) , functional_areas.functional_area_description ( varchar(80) ) ]\ntable images , columns = [ images.image_id ( integer | primary key ) , images.image_alt_text ( varchar(80) ) , images.image_name ( varchar(40) ) , images.image_url ( varchar(255) ) ]\ntable documents , columns = [ documents.document_code ( varchar(15) | primary key ) , documents.document_structure_code ( varchar(15) ) , documents.document_type_code ( varchar(15) ) , documents.access_count ( integer ) , documents.document_name ( varchar(80) ) ]\ntable document_functional_areas , columns = [ document_functional_areas.document_code ( varchar(15) ) , document_functional_areas.functional_area_code ( varchar(15) ) ]\ntable document_sections , columns = [ document_sections.section_id ( integer | primary key ) , document_sections.document_code ( varchar(15) ) , document_sections.section_sequence ( integer ) , document_sections.section_code ( varchar(20) ) , document_sections.section_title ( varchar(80) ) ]\ntable document_sections_images , columns = [ document_sections_images.section_id ( integer | primary key ) , document_sections_images.image_id ( integer | primary key ) ]\nforeign keys :\nusers.role_code = roles.role_code\ndocuments.document_structure_code = document_structures.document_structure_code\ndocument_functional_areas.functional_area_code = functional_areas.functional_area_code\ndocument_functional_areas.document_code = documents.document_code\ndocument_sections.document_code = documents.document_code\ndocument_sections_images.image_id = images.image_id\ndocument_sections_images.section_id = document_sections.section_id\nmatched contents :\ndocuments.document_type_code ( CV )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nmusical.name ( The Phantom of the Opera )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_buildings.building_manager ( Kyle )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2005 , 2007 )\nappearances.year ( 2005 , 2007 )\nbatting.year ( 2005 , 2007 )\nbatting_postseason.year ( 2005 , 2007 )\nplayer_college.college_id ( washington )\nfielding.year ( 2005 , 2007 )\nfielding.inn_outs ( 2005 , 2007 )\nfielding_postseason.year ( 2005 , 2007 )\nhall_of_fame.yearid ( 2005 , 2007 )\nhall_of_fame.category ( Player )\nhome_game.year ( 2005 , 2007 )\nmanager.year ( 2005 , 2007 )\nplayer.birth_city ( Washington )\nplayer.death_city ( Washington )\nplayer.name_first ( Washington )\nplayer.name_last ( Washington )\npark.city ( Washington )\ncollege.college_id ( washington )\ncollege.city ( Washington )\nteam.name ( Washington Nationals )\nteam_franchise.franchise_name ( Washington Nationals )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ntryout.ppos ( striker )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.iata ( END )\nairlines.icao ( END )\nairlines.callsign ( CITY )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\nmill.built_year ( 1850 )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\nattribute_definitions.attribute_id ( 3 )\ncatalogs.catalog_id ( 3 )\ncatalog_contents.catalog_entry_id ( 3 )\ncatalog_contents.parent_entry_id ( 3 )\ncatalog_contents.previous_entry_id ( 3 )\ncatalog_contents.next_entry_id ( 3 )\ncatalog_contents.length ( 3 )\ncatalog_contents.height ( 3 )\ncatalog_contents.width ( 3 )\ncatalog_contents_additional_attributes.attribute_id ( 3 )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nartist.gender ( Male )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.id ( 100 )\nalbums.id ( 100 )\nalbums.artist_id ( 100 )\ninvoices.id ( 100 )\ntracks.id ( 100 )\ntracks.name ( Numbers )\ntracks.album_id ( 100 )\ninvoice_lines.id ( 100 )\ninvoice_lines.invoice_id ( 100 )\nplaylist_tracks.track_id ( 100 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(80) ) , addresses.line_2 ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( char(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable people , columns = [ people.person_id ( integer | primary key ) , people.first_name ( varchar(255) ) , people.middle_name ( varchar(255) ) , people.last_name ( varchar(255) ) , people.cell_mobile_number ( varchar(40) ) , people.email_address ( varchar(40) ) , people.login_name ( varchar(40) ) , people.password ( varchar(40) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.student_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( varchar(100) | primary key ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable people_addresses , columns = [ people_addresses.person_address_id ( integer | primary key ) , people_addresses.person_id ( integer ) , people_addresses.address_id ( integer ) , people_addresses.date_from ( datetime ) , people_addresses.date_to ( datetime ) ]\ntable student_course_registrations , columns = [ student_course_registrations.student_id ( integer | primary key ) , student_course_registrations.course_id ( integer | primary key ) , student_course_registrations.registration_date ( datetime ) ]\ntable student_course_attendance , columns = [ student_course_attendance.student_id ( integer | primary key ) , student_course_attendance.course_id ( integer | primary key ) , student_course_attendance.date_of_attendance ( datetime ) ]\ntable candidates , columns = [ candidates.candidate_id ( integer | primary key ) , candidates.candidate_details ( varchar(255) ) ]\ntable candidate_assessments , columns = [ candidate_assessments.candidate_id ( integer | primary key ) , candidate_assessments.qualification ( char(15) | primary key ) , candidate_assessments.assessment_date ( datetime ) , candidate_assessments.asessment_outcome_code ( char(15) ) ]\nforeign keys :\nstudents.student_id = people.person_id\npeople_addresses.address_id = addresses.address_id\npeople_addresses.person_id = people.person_id\nstudent_course_registrations.course_id = courses.course_id\nstudent_course_registrations.student_id = students.student_id\nstudent_course_attendance.student_id = student_course_registrations.student_id\nstudent_course_attendance.course_id = student_course_registrations.course_id\ncandidates.candidate_id = people.person_id\ncandidate_assessments.candidate_id = candidates.candidate_id\nmatched contents :\ncandidate_assessments.asessment_outcome_code ( Fail )",
  "database schema :\ntable repair , columns = [ repair.repair_id ( int | primary key ) , repair.name ( text ) , repair.launch_date ( text ) , repair.notes ( text ) ]\ntable machine , columns = [ machine.machine_id ( int | primary key ) , machine.making_year ( int ) , machine.class ( text ) , machine.team ( text ) , machine.machine_series ( text ) , machine.value_points ( real ) , machine.quality_rank ( int ) ]\ntable technician , columns = [ technician.technician_id ( real | primary key ) , technician.name ( text ) , technician.team ( text ) , technician.starting_year ( real ) , technician.age ( int ) ]\ntable repair_assignment , columns = [ repair_assignment.technician_id ( int | primary key ) , repair_assignment.repair_id ( int | primary key ) , repair_assignment.machine_id ( int | primary key ) ]\nforeign keys :\nrepair_assignment.machine_id = machine.machine_id\nrepair_assignment.repair_id = repair.repair_id\nrepair_assignment.technician_id = technician.technician_id\nmatched contents :\ntechnician.age ( 36 , 37 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.advisor ( 2192 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\ncustomer_orders.order_status_code ( Pending )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_ap ( PER )\nroutes.src_ap ( PER )\nairports.iata ( PER )\nairlines.icao ( PER )",
  "database schema :\ntable third_party_companies , columns = [ third_party_companies.company_id ( integer | primary key ) , third_party_companies.company_type ( varchar(5) ) , third_party_companies.company_name ( varchar(255) ) , third_party_companies.company_address ( varchar(255) ) , third_party_companies.other_company_details ( varchar(255) ) ]\ntable maintenance_contracts , columns = [ maintenance_contracts.maintenance_contract_id ( integer | primary key ) , maintenance_contracts.maintenance_contract_company_id ( integer ) , maintenance_contracts.contract_start_date ( datetime ) , maintenance_contracts.contract_end_date ( datetime ) , maintenance_contracts.other_contract_details ( varchar(255) ) ]\ntable parts , columns = [ parts.part_id ( integer | primary key ) , parts.part_name ( varchar(255) ) , parts.chargeable_yn ( varchar(1) ) , parts.chargeable_amount ( varchar(20) ) , parts.other_part_details ( varchar(255) ) ]\ntable skills , columns = [ skills.skill_id ( integer | primary key ) , skills.skill_code ( varchar(20) ) , skills.skill_description ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_name ( varchar(255) ) , staff.gender ( varchar(1) ) , staff.other_staff_details ( varchar(255) ) ]\ntable assets , columns = [ assets.asset_id ( integer | primary key ) , assets.maintenance_contract_id ( integer ) , assets.supplier_company_id ( integer ) , assets.asset_details ( varchar(255) ) , assets.asset_make ( varchar(20) ) , assets.asset_model ( varchar(20) ) , assets.asset_acquired_date ( datetime ) , assets.asset_disposed_date ( datetime ) , assets.other_asset_details ( varchar(255) ) ]\ntable asset_parts , columns = [ asset_parts.asset_id ( integer ) , asset_parts.part_id ( integer ) ]\ntable maintenance_engineers , columns = [ maintenance_engineers.engineer_id ( integer | primary key ) , maintenance_engineers.company_id ( integer ) , maintenance_engineers.first_name ( varchar(50) ) , maintenance_engineers.last_name ( varchar(50) ) , maintenance_engineers.other_details ( varchar(255) ) ]\ntable engineer_skills , columns = [ engineer_skills.engineer_id ( integer ) , engineer_skills.skill_id ( integer ) ]\ntable fault_log , columns = [ fault_log.fault_log_entry_id ( integer | primary key ) , fault_log.asset_id ( integer ) , fault_log.recorded_by_staff_id ( integer ) , fault_log.fault_log_entry_datetime ( datetime ) , fault_log.fault_description ( varchar(255) ) , fault_log.other_fault_details ( varchar(255) ) ]\ntable engineer_visits , columns = [ engineer_visits.engineer_visit_id ( integer | primary key ) , engineer_visits.contact_staff_id ( integer ) , engineer_visits.engineer_id ( integer ) , engineer_visits.fault_log_entry_id ( integer ) , engineer_visits.fault_status ( varchar(10) ) , engineer_visits.visit_start_datetime ( datetime ) , engineer_visits.visit_end_datetime ( datetime ) , engineer_visits.other_visit_details ( varchar(255) ) ]\ntable part_faults , columns = [ part_faults.part_fault_id ( integer | primary key ) , part_faults.part_id ( integer ) , part_faults.fault_short_name ( varchar(20) ) , part_faults.fault_description ( varchar(255) ) , part_faults.other_fault_details ( varchar(255) ) ]\ntable fault_log_parts , columns = [ fault_log_parts.fault_log_entry_id ( integer ) , fault_log_parts.part_fault_id ( integer ) , fault_log_parts.fault_status ( varchar(10) ) ]\ntable skills_required_to_fix , columns = [ skills_required_to_fix.part_fault_id ( integer ) , skills_required_to_fix.skill_id ( integer ) ]\nforeign keys :\nmaintenance_contracts.maintenance_contract_company_id = third_party_companies.company_id\nassets.supplier_company_id = third_party_companies.company_id\nassets.maintenance_contract_id = maintenance_contracts.maintenance_contract_id\nasset_parts.asset_id = assets.asset_id\nasset_parts.part_id = parts.part_id\nmaintenance_engineers.company_id = third_party_companies.company_id\nengineer_skills.skill_id = skills.skill_id\nengineer_skills.engineer_id = maintenance_engineers.engineer_id\nfault_log.recorded_by_staff_id = staff.staff_id\nfault_log.asset_id = assets.asset_id\nengineer_visits.contact_staff_id = staff.staff_id\nengineer_visits.engineer_id = maintenance_engineers.engineer_id\nengineer_visits.fault_log_entry_id = fault_log.fault_log_entry_id\npart_faults.part_id = parts.part_id\nfault_log_parts.fault_log_entry_id = fault_log.fault_log_entry_id\nfault_log_parts.part_fault_id = part_faults.part_fault_id\nskills_required_to_fix.skill_id = skills.skill_id\nskills_required_to_fix.part_fault_id = part_faults.part_fault_id\nmatched contents :\nthird_party_companies.company_type ( Maintenance Contractor )",
  "database schema :\ntable company , columns = [ company.company_id ( int | primary key ) , company.rank ( int ) , company.company ( text ) , company.headquarters ( text ) , company.main_industry ( text ) , company.sales_billion ( real ) , company.profits_billion ( real ) , company.assets_billion ( real ) , company.market_value ( real ) ]\ntable gas_station , columns = [ gas_station.station_id ( int | primary key ) , gas_station.open_year ( int ) , gas_station.location ( text ) , gas_station.manager_name ( text ) , gas_station.vice_manager_name ( text ) , gas_station.representative_name ( text ) ]\ntable station_company , columns = [ station_company.station_id ( int | primary key ) , station_company.company_id ( int | primary key ) , station_company.rank_of_the_year ( int ) ]\nforeign keys :\nstation_company.company_id = company.company_id\nstation_company.station_id = gas_station.station_id\nmatched contents :\ncompany.headquarters ( USA )",
  "database schema :\ntable pilot , columns = [ pilot.pilot_id ( int(11) | primary key ) , pilot.name ( varchar(50) ) , pilot.age ( int(11) ) ]\ntable aircraft , columns = [ aircraft.aircraft_id ( int(11) | primary key ) , aircraft.aircraft ( varchar(50) ) , aircraft.description ( varchar(50) ) , aircraft.max_gross_weight ( varchar(50) ) , aircraft.total_disk_area ( varchar(50) ) , aircraft.max_disk_loading ( varchar(50) ) ]\ntable match , columns = [ match.round ( real | primary key ) , match.location ( text ) , match.country ( text ) , match.date ( text ) , match.fastest_qualifying ( text ) , match.winning_pilot ( text ) , match.winning_aircraft ( text ) ]\ntable airport , columns = [ airport.airport_id ( int | primary key ) , airport.airport_name ( text ) , airport.total_passengers ( real ) , airport.%_change_2007 ( text ) , airport.international_passengers ( real ) , airport.domestic_passengers ( real ) , airport.transit_passengers ( real ) , airport.aircraft_movements ( real ) , airport.freight_metric_tonnes ( real ) ]\ntable airport_aircraft , columns = [ airport_aircraft.id ( int ) , airport_aircraft.airport_id ( int | primary key ) , airport_aircraft.aircraft_id ( int | primary key ) ]\nforeign keys :\nmatch.winning_pilot = pilot.pilot_id\nmatch.winning_aircraft = aircraft.aircraft_id\nairport_aircraft.aircraft_id = aircraft.aircraft_id\nairport_aircraft.airport_id = airport.airport_id\nmatched contents :\nairport.airport_name ( London Heathrow , London Gatwick )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_apid ( 2 )\nroutes.src_apid ( 2 )\nroutes.airline ( 2 )\nairports.apid ( 2 )\nairports.elevation ( 2 )\nairlines.alid ( 2 )",
  "database schema :\ntable follows , columns = [ follows.f1 ( int(11) | primary key | comment : user id ) , follows.f2 ( int(11) | primary key | comment : follower id ) ]\ntable tweets , columns = [ tweets.id ( bigint(20) | primary key ) , tweets.uid ( int(11) | comment : user id ) , tweets.text ( char(140) ) , tweets.createdate ( datetime ) ]\ntable user_profiles , columns = [ user_profiles.uid ( int(11) | primary key ) , user_profiles.name ( varchar(255) ) , user_profiles.email ( varchar(255) ) , user_profiles.partitionid ( int(11) ) , user_profiles.followers ( int(11) ) ]\nforeign keys :\nfollows.f2 = user_profiles.uid\nfollows.f1 = user_profiles.uid\ntweets.uid = user_profiles.uid\nmatched contents :\nuser_profiles.name ( Mary , Susan )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nteachers.last_name ( Medhurst )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nproducts.product_name ( sesame )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\norganisations.organisation_details ( quo )\nresearch_staff.staff_details ( quo )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.city ( San Jose )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.title ( Pop )\ngenre.name ( Latin , Pop )\ntrack.name ( Belong )",
  "database schema :\ntable item , columns = [ item.i_id ( integer | primary key | comment : item id ) , item.title ( varchar(20) ) ]\ntable review , columns = [ review.a_id ( integer | primary key ) , review.u_id ( integer | comment : user id ) , review.i_id ( integer | comment : item id ) , review.rating ( integer ) , review.rank ( integer ) ]\ntable useracct , columns = [ useracct.u_id ( integer | primary key | comment : user id ) , useracct.name ( varchar(128) ) ]\ntable trust , columns = [ trust.source_u_id ( integer | comment : source user id ) , trust.target_u_id ( integer | comment : target user id ) , trust.trust ( integer ) ]\nforeign keys :\nreview.i_id = item.i_id\nreview.u_id = useracct.u_id\ntrust.target_u_id = useracct.u_id\ntrust.source_u_id = useracct.u_id\nmatched contents :\nreview.rating ( 10 )\ntrust.trust ( 10 )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents : None",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.grade ( 5 )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nclass.class_section ( 3 )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nloan.loan_type ( Business )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ndrivers.driverref ( driver , lewis )\ndrivers.forename ( Lewis )\ndrivers.surname ( Driver , Lewis )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\njobs.job_id ( MK_MAN )\nemployees.job_id ( MK_MAN )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.no ( 90 )\nwine.name ( Numbers )\nwine.price ( 90 )\nwine.score ( 90 )\nwine.cases ( 90 )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartments.apt_id ( 3 )\napartments.bathroom_count ( 3 )\napartments.bedroom_count ( 3 )\napartments.room_count ( 3 )\napartment_facilities.apt_id ( 3 )\nguests.guest_id ( 3 )\napartment_bookings.guest_id ( 3 )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairlines.callsign ( TOTAL )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents : None",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\ntourist_attractions.how_to_get_there ( bus )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\ntrip.zip_code ( 94107 )\nweather.zip_code ( 94107 )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.year ( 2006 )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.lastname ( NABOZNY )\nlist.firstname ( CHRISSY )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\nproject_outcomes.outcome_code ( Patent )\nresearch_outcomes.outcome_code ( Patent )",
  "database schema :\ntable event , columns = [ event.event_id ( int | primary key ) , event.date ( text ) , event.venue ( text ) , event.name ( text ) , event.event_attendance ( int ) ]\ntable journalist , columns = [ journalist.journalist_id ( int | primary key ) , journalist.name ( text ) , journalist.nationality ( text ) , journalist.age ( text ) , journalist.years_working ( int ) ]\ntable news_report , columns = [ news_report.journalist_id ( int | primary key ) , news_report.event_id ( int | primary key ) , news_report.work_type ( text ) ]\nforeign keys :\nnews_report.event_id = event.event_id\nnews_report.journalist_id = journalist.journalist_id\nmatched contents :\nevent.event_id ( 3 )\njournalist.journalist_id ( 10 , 3 )\njournalist.years_working ( 10 , 3 )\nnews_report.event_id ( 3 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_document_types.document_type_name ( Book )\nall_documents.document_name ( How to read a book )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.city ( Chicago )\ncustomers.state ( IL )\ninvoices.billing_city ( Chicago )\ninvoices.billing_state ( IL )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.lname ( Smith )\nstudent.fname ( Linda )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nroles.role_name ( Human Resource , Manager )",
  "database schema :\ntable member , columns = [ member.member_id ( text | primary key ) , member.name ( text ) , member.nationality ( text ) , member.role ( text ) ]\ntable performance , columns = [ performance.performance_id ( real | primary key ) , performance.date ( text ) , performance.host ( text ) , performance.location ( text ) , performance.attendance ( int ) ]\ntable member_attendance , columns = [ member_attendance.member_id ( int | primary key ) , member_attendance.performance_id ( int | primary key ) , member_attendance.num_of_pieces ( int ) ]\nforeign keys :\nmember_attendance.performance_id = performance.performance_id\nmember_attendance.member_id = member.member_id\nmatched contents :\nperformance.location ( Bell Centre , TD Garden )",
  "database schema :\ntable club , columns = [ club.club_id ( int | primary key ) , club.name ( text ) , club.region ( text ) , club.start_year ( text ) ]\ntable club_rank , columns = [ club_rank.rank ( real | primary key ) , club_rank.club_id ( int | primary key ) , club_rank.gold ( real ) , club_rank.silver ( real ) , club_rank.bronze ( real ) , club_rank.total ( real ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.name ( text ) , player.position ( text ) , player.club_id ( int ) , player.apps ( real ) , player.tries ( real ) , player.goals ( text ) , player.points ( real ) ]\ntable competition , columns = [ competition.competition_id ( int | primary key ) , competition.year ( real ) , competition.competition_type ( text ) , competition.country ( text ) ]\ntable competition_result , columns = [ competition_result.competition_id ( int | primary key ) , competition_result.club_id_1 ( int | primary key ) , competition_result.club_id_2 ( int | primary key ) , competition_result.score ( text ) ]\nforeign keys :\nclub_rank.club_id = club.club_id\nplayer.club_id = club.club_id\ncompetition_result.competition_id = competition.competition_id\ncompetition_result.club_id_2 = club.club_id\ncompetition_result.club_id_1 = club.club_id\nmatched contents : None",
  "database schema :\ntable program , columns = [ program.program_id ( int | primary key ) , program.name ( text ) , program.origin ( text ) , program.launch ( real ) , program.owner ( text ) ]\ntable channel , columns = [ channel.channel_id ( int | primary key ) , channel.name ( text ) , channel.owner ( text ) , channel.share_in_percent ( real ) , channel.rating_in_percent ( real ) ]\ntable broadcast , columns = [ broadcast.channel_id ( int | primary key ) , broadcast.program_id ( int | primary key ) , broadcast.time_of_day ( text ) ]\ntable broadcast_share , columns = [ broadcast_share.channel_id ( int | primary key ) , broadcast_share.program_id ( int | primary key ) , broadcast_share.date ( text ) , broadcast_share.share_in_percent ( real ) ]\nforeign keys :\nbroadcast.program_id = program.program_id\nbroadcast.channel_id = channel.channel_id\nbroadcast_share.program_id = program.program_id\nbroadcast_share.channel_id = channel.channel_id\nmatched contents :\nbroadcast.time_of_day ( Morning )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nmovie.director ( James Cameron )\nreviewer.name ( James Cameron )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_status_code ( Reported )\nproblem_status_codes.problem_status_code ( Reported )\nproblem_status_codes.problem_status_description ( Reported )\nstaff.staff_first_name ( Christop , Ashley )\nstaff.staff_last_name ( Medhurst , Berge )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\nregions.region_id ( 4 )\ncountries.region_id ( 4 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nvoting_record.election_cycle ( Spring )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.circuitid ( 8 , 5 )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\nconstructors.constructorid ( 8 , 5 )\nconstructorstandings.constructorstandingsid ( 8 , 5 )\nconstructorstandings.raceid ( 8 , 5 )\nconstructorstandings.constructorid ( 8 , 5 )\nconstructorstandings.position ( 8 , 5 )\nconstructorstandings.positiontext ( 8 , 5 )\nconstructorresults.constructorresultsid ( 8 , 5 )\nconstructorresults.raceid ( 8 , 5 )\nconstructorresults.constructorid ( 8 , 5 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.city_code ( BAL )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\nparty.party ( Democratic )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\nstudent.age ( 20 )\nstudent.city_code ( BAL )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents :\nrestaurant.resid ( 2 )\ntype_of_restaurant.resid ( 2 )\ntype_of_restaurant.restypeid ( 2 )\nrestaurant_type.restypeid ( 2 )\nvisits_restaurant.resid ( 2 )",
  "database schema :\ntable election , columns = [ election.election_id ( int | primary key ) , election.representative_id ( int ) , election.date ( text ) , election.votes ( real ) , election.vote_percent ( real ) , election.seats ( real ) , election.place ( real ) ]\ntable representative , columns = [ representative.representative_id ( int | primary key ) , representative.name ( text ) , representative.state ( text ) , representative.party ( text ) , representative.lifespan ( text ) ]\nforeign keys :\nelection.representative_id = representative.representative_id\nmatched contents :\nrepresentative.state ( Pennsylvania , New York )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nref_hotel_star_ratings.star_rating_description ( star )",
  "database schema :\ntable author , columns = [ author.aid ( int | primary key ) , author.homepage ( text ) , author.name ( text ) , author.oid ( int ) ]\ntable conference , columns = [ conference.cid ( int | primary key ) , conference.homepage ( text ) , conference.name ( text ) ]\ntable domain , columns = [ domain.did ( int | primary key ) , domain.name ( text ) ]\ntable domain_author , columns = [ domain_author.aid ( int | primary key ) , domain_author.did ( int | primary key ) ]\ntable domain_conference , columns = [ domain_conference.cid ( int | primary key ) , domain_conference.did ( int | primary key ) ]\ntable journal , columns = [ journal.homepage ( text ) , journal.jid ( int | primary key ) , journal.name ( text ) ]\ntable domain_journal , columns = [ domain_journal.did ( int | primary key ) , domain_journal.jid ( int | primary key ) ]\ntable keyword , columns = [ keyword.keyword ( text ) , keyword.kid ( int | primary key ) ]\ntable domain_keyword , columns = [ domain_keyword.did ( int | primary key ) , domain_keyword.kid ( int | primary key ) ]\ntable publication , columns = [ publication.abstract ( text ) , publication.cid ( text ) , publication.citation_num ( int ) , publication.jid ( int ) , publication.pid ( int | primary key ) , publication.reference_num ( int ) , publication.title ( text ) , publication.year ( int ) ]\ntable domain_publication , columns = [ domain_publication.did ( int | primary key ) , domain_publication.pid ( int | primary key ) ]\ntable organization , columns = [ organization.continent ( text ) , organization.homepage ( text ) , organization.name ( text ) , organization.oid ( int | primary key ) ]\ntable publication_keyword , columns = [ publication_keyword.pid ( int | primary key ) , publication_keyword.kid ( int | primary key ) ]\ntable writes , columns = [ writes.aid ( int | primary key ) , writes.pid ( int | primary key ) ]\ntable cite , columns = [ cite.cited ( int ) , cite.citing ( int ) ]\nforeign keys :\ndomain_author.did = domain.did\ndomain_author.aid = author.aid\ndomain_conference.did = domain.did\ndomain_conference.cid = conference.cid\ndomain_journal.did = domain.did\ndomain_journal.jid = journal.jid\ndomain_keyword.did = domain.did\ndomain_keyword.kid = keyword.kid\npublication.cid = conference.cid\npublication.jid = journal.jid\ndomain_publication.did = domain.did\ndomain_publication.pid = publication.pid\npublication_keyword.kid = keyword.kid\npublication_keyword.pid = publication.pid\nwrites.aid = author.aid\nwrites.pid = publication.pid\ncite.citing = publication.pid\ncite.cited = publication.pid\nmatched contents : None",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.county ( Orange )\ncampuses.year ( 2002 )\ndegrees.year ( 2002 )\nenrollments.year ( 2002 )\nfaculty.year ( 2002 )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\ngrapes.id ( 3 )\ngrapes.color ( White )\nappellations.no ( 3 )\nwine.no ( 3 )\nwine.name ( Numbers )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ncustomer.country ( Brazil )\ninvoice.billingcountry ( Brazil )",
  "database schema :\ntable book_club , columns = [ book_club.book_club_id ( int | primary key ) , book_club.year ( int ) , book_club.author_or_editor ( text ) , book_club.book_title ( text ) , book_club.publisher ( text ) , book_club.category ( text ) , book_club.result ( text ) ]\ntable movie , columns = [ movie.movie_id ( int | primary key ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) , movie.budget_million ( real ) , movie.gross_worldwide ( int ) ]\ntable culture_company , columns = [ culture_company.company_name ( text | primary key ) , culture_company.type ( text ) , culture_company.incorporated_in ( text ) , culture_company.group_equity_shareholding ( real ) , culture_company.book_club_id ( text ) , culture_company.movie_id ( text ) ]\nforeign keys :\nculture_company.movie_id = movie.movie_id\nculture_company.book_club_id = book_club.book_club_id\nmatched contents :\nculture_company.incorporated_in ( China )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents : None",
  "database schema :\ntable works_on , columns = [ works_on.essn ( integer | primary key | comment : employee ssn ) , works_on.pno ( integer | primary key | comment : project number ) , works_on.hours ( real ) ]\ntable employee , columns = [ employee.fname ( text | comment : first name ) , employee.minit ( text ) , employee.lname ( text | comment : last name ) , employee.ssn ( integer | primary key ) , employee.bdate ( text | comment : birth date ) , employee.address ( text ) , employee.sex ( text ) , employee.salary ( integer ) , employee.super_ssn ( integer ) , employee.dno ( integer | comment : department no ) ]\ntable department , columns = [ department.dname ( text | comment : department name ) , department.dnumber ( integer | primary key | comment : department number ) , department.mgr_ssn ( integer | comment : manager ssn ) , department.mgr_start_date ( text | comment : manager start date ) ]\ntable project , columns = [ project.pname ( text | comment : dependent name ) , project.pnumber ( integer | primary key | comment : dependent number ) , project.plocation ( text | comment : dependent location ) , project.dnum ( integer | comment : department number ) ]\ntable dependent , columns = [ dependent.essn ( integer | primary key | comment : employee ssn ) , dependent.dependent_name ( text | primary key ) , dependent.sex ( text ) , dependent.bdate ( text | comment : birth date ) , dependent.relationship ( text ) ]\ntable dept_locations , columns = [ dept_locations.dnumber ( integer | primary key | comment : department number ) , dept_locations.dlocation ( text | primary key | comment : department location ) ]\nforeign keys : None\nmatched contents :\nproject.plocation ( Houston )\ndept_locations.dlocation ( Houston )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.major ( 50 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.major ( 600 )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.name ( Mountain View City Hall )\nstation.city ( Mountain View )\ntrip.start_station_name ( Mountain View City Hall )\ntrip.end_station_name ( Mountain View City Hall )",
  "database schema :\ntable program , columns = [ program.program_id ( int | primary key ) , program.name ( text ) , program.origin ( text ) , program.launch ( real ) , program.owner ( text ) ]\ntable channel , columns = [ channel.channel_id ( int | primary key ) , channel.name ( text ) , channel.owner ( text ) , channel.share_in_percent ( real ) , channel.rating_in_percent ( real ) ]\ntable broadcast , columns = [ broadcast.channel_id ( int | primary key ) , broadcast.program_id ( int | primary key ) , broadcast.time_of_day ( text ) ]\ntable broadcast_share , columns = [ broadcast_share.channel_id ( int | primary key ) , broadcast_share.program_id ( int | primary key ) , broadcast_share.date ( text ) , broadcast_share.share_in_percent ( real ) ]\nforeign keys :\nbroadcast.program_id = program.program_id\nbroadcast.channel_id = channel.channel_id\nbroadcast_share.program_id = program.program_id\nbroadcast_share.channel_id = channel.channel_id\nmatched contents :\nchannel.owner ( CCTV )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents : None",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\nguests.gender_code ( Male )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nsection.semester ( Fall )\nsection.year ( 2003 )\nteaches.semester ( Fall )\nteaches.year ( 2003 )\nstudent.name ( Fall )\ntakes.semester ( Fall )\ntakes.year ( 2003 )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\nproducts_booked.booked_amount ( 102.76 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\naddresses.address_id ( 1 )\nstaff.staff_id ( 1 )\nstaff.staff_address_id ( 1 )\nvehicles.vehicle_id ( 1 )\ncustomers.customer_id ( 1 )\ncustomers.customer_address_id ( 1 )\ncustomer_payments.customer_id ( 1 )\nlessons.lesson_id ( 1 )\nlessons.staff_id ( 1 )\nlessons.vehicle_id ( 1 )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.lastname ( MADLOCK )\nlist.firstname ( RAY )",
  "database schema :\ntable buildings , columns = [ buildings.id ( int | primary key ) , buildings.name ( text ) , buildings.city ( text ) , buildings.height ( int ) , buildings.stories ( int ) , buildings.status ( text ) ]\ntable companies , columns = [ companies.id ( int | primary key ) , companies.name ( text ) , companies.headquarters ( text ) , companies.industry ( text ) , companies.sales_billion ( real ) , companies.profits_billion ( real ) , companies.assets_billion ( real ) , companies.market_value_billion ( text ) ]\ntable office_locations , columns = [ office_locations.building_id ( int | primary key ) , office_locations.company_id ( int | primary key ) , office_locations.move_in_year ( int ) ]\nforeign keys :\noffice_locations.company_id = companies.id\noffice_locations.building_id = buildings.id\nmatched contents :\ncompanies.industry ( Banking )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\ninst.name ( University of Oxford )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.no ( 93 )\nwine.score ( 93 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ncustomer.firstname ( Astrid )\ncustomer.lastname ( Gruber )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\naddresses.state_province_county ( Wisconsin )",
  "database schema :\ntable city , columns = [ city.city_id ( int | primary key ) , city.city ( text ) , city.hanzi ( text ) , city.hanyu_pinyin ( text ) , city.regional_population ( int ) , city.gdp ( real ) ]\ntable match , columns = [ match.match_id ( int | primary key ) , match.date ( text ) , match.venue ( text ) , match.score ( text ) , match.result ( text ) , match.competition ( text ) ]\ntable temperature , columns = [ temperature.city_id ( int | primary key ) , temperature.jan ( real ) , temperature.feb ( real ) , temperature.mar ( real ) , temperature.apr ( real ) , temperature.jun ( real ) , temperature.jul ( real ) , temperature.aug ( real ) , temperature.sep ( real ) , temperature.oct ( real ) , temperature.nov ( real ) , temperature.dec ( real ) ]\ntable hosting_city , columns = [ hosting_city.year ( int | primary key ) , hosting_city.match_id ( int ) , hosting_city.host_city ( text ) ]\nforeign keys :\ntemperature.city_id = city.city_id\nhosting_city.match_id = match.match_id\nhosting_city.host_city = city.city_id\nmatched contents :\ncity.city ( Nanjing ( Jiangsu ) )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\nproject_staff.role_code ( leader )\nstaff_roles.role_code ( leader )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomers.customer_name ( Rodrick Heaney )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\nproducts.product_name ( food )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nrating.stars ( 4 , 5 )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( Los Angeles )\ncampuses.county ( Los Angeles )\ncsu_fees.campusfee ( 1950 )\nenrollments.year ( 1950 )\nenrollments.totalenrollment_ay ( 1950 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable customer_policies , columns = [ customer_policies.policy_id ( integer | primary key ) , customer_policies.customer_id ( integer ) , customer_policies.policy_type_code ( char(15) ) , customer_policies.start_date ( date ) , customer_policies.end_date ( date ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.policy_id ( integer ) , claims.date_claim_made ( date ) , claims.date_claim_settled ( date ) , claims.amount_claimed ( integer ) , claims.amount_settled ( integer ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.date_claim_made ( date ) , settlements.date_claim_settled ( date ) , settlements.amount_claimed ( integer ) , settlements.amount_settled ( integer ) , settlements.customer_policy_id ( integer ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.settlement_id ( integer ) , payments.payment_method_code ( varchar(255) ) , payments.date_payment_made ( date ) , payments.amount_payment ( integer ) ]\nforeign keys :\ncustomer_policies.customer_id = customers.customer_id\nclaims.policy_id = customer_policies.policy_id\nsettlements.claim_id = claims.claim_id\npayments.settlement_id = settlements.settlement_id\nmatched contents : None",
  "database schema :\ntable election , columns = [ election.election_id ( int | primary key ) , election.representative_id ( int ) , election.date ( text ) , election.votes ( real ) , election.vote_percent ( real ) , election.seats ( real ) , election.place ( real ) ]\ntable representative , columns = [ representative.representative_id ( int | primary key ) , representative.name ( text ) , representative.state ( text ) , representative.party ( text ) , representative.lifespan ( text ) ]\nforeign keys :\nelection.representative_id = representative.representative_id\nmatched contents :\nrepresentative.party ( Republican )",
  "database schema :\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.address ( text ) , shop.num_of_staff ( text ) , shop.score ( real ) , shop.open_year ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.membership_card ( text ) , member.age ( int ) , member.time_of_purchase ( int ) , member.level_of_membership ( int ) , member.address ( text ) ]\ntable happy_hour , columns = [ happy_hour.hh_id ( int | primary key ) , happy_hour.shop_id ( int | primary key ) , happy_hour.month ( text | primary key ) , happy_hour.num_of_shaff_in_charge ( int ) ]\ntable happy_hour_member , columns = [ happy_hour_member.hh_id ( int | primary key ) , happy_hour_member.member_id ( int | primary key ) , happy_hour_member.total_amount ( real ) ]\nforeign keys :\nhappy_hour.shop_id = shop.shop_id\nhappy_hour_member.member_id = member.member_id\nmatched contents :\nshop.shop_id ( 2 )\nmember.member_id ( 2 )\nmember.level_of_membership ( 2 )\nhappy_hour.hh_id ( 2 )\nhappy_hour.shop_id ( 2 )\nhappy_hour_member.hh_id ( 2 )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nbank.state ( New York )\ncustomer.state ( New York )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 14 )\nstatus.station_id ( 14 )\nstatus.bikes_available ( 14 )\nstatus.docks_available ( 14 )",
  "database schema :\ntable third_party_companies , columns = [ third_party_companies.company_id ( integer | primary key ) , third_party_companies.company_type ( varchar(5) ) , third_party_companies.company_name ( varchar(255) ) , third_party_companies.company_address ( varchar(255) ) , third_party_companies.other_company_details ( varchar(255) ) ]\ntable maintenance_contracts , columns = [ maintenance_contracts.maintenance_contract_id ( integer | primary key ) , maintenance_contracts.maintenance_contract_company_id ( integer ) , maintenance_contracts.contract_start_date ( datetime ) , maintenance_contracts.contract_end_date ( datetime ) , maintenance_contracts.other_contract_details ( varchar(255) ) ]\ntable parts , columns = [ parts.part_id ( integer | primary key ) , parts.part_name ( varchar(255) ) , parts.chargeable_yn ( varchar(1) ) , parts.chargeable_amount ( varchar(20) ) , parts.other_part_details ( varchar(255) ) ]\ntable skills , columns = [ skills.skill_id ( integer | primary key ) , skills.skill_code ( varchar(20) ) , skills.skill_description ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_name ( varchar(255) ) , staff.gender ( varchar(1) ) , staff.other_staff_details ( varchar(255) ) ]\ntable assets , columns = [ assets.asset_id ( integer | primary key ) , assets.maintenance_contract_id ( integer ) , assets.supplier_company_id ( integer ) , assets.asset_details ( varchar(255) ) , assets.asset_make ( varchar(20) ) , assets.asset_model ( varchar(20) ) , assets.asset_acquired_date ( datetime ) , assets.asset_disposed_date ( datetime ) , assets.other_asset_details ( varchar(255) ) ]\ntable asset_parts , columns = [ asset_parts.asset_id ( integer ) , asset_parts.part_id ( integer ) ]\ntable maintenance_engineers , columns = [ maintenance_engineers.engineer_id ( integer | primary key ) , maintenance_engineers.company_id ( integer ) , maintenance_engineers.first_name ( varchar(50) ) , maintenance_engineers.last_name ( varchar(50) ) , maintenance_engineers.other_details ( varchar(255) ) ]\ntable engineer_skills , columns = [ engineer_skills.engineer_id ( integer ) , engineer_skills.skill_id ( integer ) ]\ntable fault_log , columns = [ fault_log.fault_log_entry_id ( integer | primary key ) , fault_log.asset_id ( integer ) , fault_log.recorded_by_staff_id ( integer ) , fault_log.fault_log_entry_datetime ( datetime ) , fault_log.fault_description ( varchar(255) ) , fault_log.other_fault_details ( varchar(255) ) ]\ntable engineer_visits , columns = [ engineer_visits.engineer_visit_id ( integer | primary key ) , engineer_visits.contact_staff_id ( integer ) , engineer_visits.engineer_id ( integer ) , engineer_visits.fault_log_entry_id ( integer ) , engineer_visits.fault_status ( varchar(10) ) , engineer_visits.visit_start_datetime ( datetime ) , engineer_visits.visit_end_datetime ( datetime ) , engineer_visits.other_visit_details ( varchar(255) ) ]\ntable part_faults , columns = [ part_faults.part_fault_id ( integer | primary key ) , part_faults.part_id ( integer ) , part_faults.fault_short_name ( varchar(20) ) , part_faults.fault_description ( varchar(255) ) , part_faults.other_fault_details ( varchar(255) ) ]\ntable fault_log_parts , columns = [ fault_log_parts.fault_log_entry_id ( integer ) , fault_log_parts.part_fault_id ( integer ) , fault_log_parts.fault_status ( varchar(10) ) ]\ntable skills_required_to_fix , columns = [ skills_required_to_fix.part_fault_id ( integer ) , skills_required_to_fix.skill_id ( integer ) ]\nforeign keys :\nmaintenance_contracts.maintenance_contract_company_id = third_party_companies.company_id\nassets.supplier_company_id = third_party_companies.company_id\nassets.maintenance_contract_id = maintenance_contracts.maintenance_contract_id\nasset_parts.asset_id = assets.asset_id\nasset_parts.part_id = parts.part_id\nmaintenance_engineers.company_id = third_party_companies.company_id\nengineer_skills.skill_id = skills.skill_id\nengineer_skills.engineer_id = maintenance_engineers.engineer_id\nfault_log.recorded_by_staff_id = staff.staff_id\nfault_log.asset_id = assets.asset_id\nengineer_visits.contact_staff_id = staff.staff_id\nengineer_visits.engineer_id = maintenance_engineers.engineer_id\nengineer_visits.fault_log_entry_id = fault_log.fault_log_entry_id\npart_faults.part_id = parts.part_id\nfault_log_parts.fault_log_entry_id = fault_log.fault_log_entry_id\nfault_log_parts.part_fault_id = part_faults.part_fault_id\nskills_required_to_fix.skill_id = skills.skill_id\nskills_required_to_fix.part_fault_id = part_faults.part_fault_id\nmatched contents : None",
  "database schema :\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.gender ( varchar(1) ) , staff.first_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.email_address ( varchar(255) ) , staff.phone_number ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_type_code ( varchar(20) ) , customers.address_line_1 ( varchar(80) ) , customers.address_line_2 ( varchar(80) ) , customers.town_city ( varchar(80) ) , customers.state ( varchar(80) ) , customers.email_address ( varchar(255) ) , customers.phone_number ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.product_category_code ( varchar(20) ) , products.date_product_first_available ( datetime ) , products.date_product_discontinued ( datetime ) , products.product_name ( varchar(80) ) , products.product_description ( varchar(255) ) , products.product_price ( decimal(19,4) ) ]\ntable complaints , columns = [ complaints.complaint_id ( integer ) , complaints.product_id ( integer ) , complaints.customer_id ( integer ) , complaints.complaint_outcome_code ( varchar(20) ) , complaints.complaint_status_code ( varchar(20) ) , complaints.complaint_type_code ( varchar(20) ) , complaints.date_complaint_raised ( datetime ) , complaints.date_complaint_closed ( datetime ) , complaints.staff_id ( integer ) ]\nforeign keys :\ncomplaints.customer_id = customers.customer_id\ncomplaints.product_id = products.product_id\ncomplaints.staff_id = staff.staff_id\nmatched contents :\nproducts.product_name ( Chocolate )",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents :\nenzyme.location ( Cytosol )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.country ( Spain )\nraces.year ( 2000 )\nseasons.year ( 2000 )\nresults.resultid ( 2000 )\nconstructorresults.constructorresultsid ( 2000 )\nqualifying.qualifyid ( 2000 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.starting_pos ( 3 )\nappearances.g_all ( 3 )\nappearances.g_batting ( 3 )\nappearances.g_defense ( 3 )\nappearances.g_c ( 3 )\nappearances.g_1b ( 3 )\nappearances.g_2b ( 3 )\nappearances.g_3b ( 3 )\nappearances.g_cf ( 3 )\nappearances.g_dh ( 3 )\nhall_of_fame.category ( Player )",
  "database schema :\ntable wrestler , columns = [ wrestler.wrestler_id ( int | primary key ) , wrestler.name ( text ) , wrestler.reign ( text ) , wrestler.days_held ( text ) , wrestler.location ( text ) , wrestler.event ( text ) ]\ntable elimination , columns = [ elimination.elimination_id ( text | primary key ) , elimination.wrestler_id ( text ) , elimination.team ( text ) , elimination.eliminated_by ( text ) , elimination.elimination_move ( text ) , elimination.time ( text ) ]\nforeign keys :\nelimination.wrestler_id = wrestler.wrestler_id\nmatched contents :\nwrestler.wrestler_id ( 3 )\nelimination.elimination_id ( 3 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(50) ) , customers.customer_middle_initial ( varchar(1) ) , customers.customer_last_name ( varchar(50) ) , customers.gender ( varchar(1) ) , customers.email_address ( varchar(255) ) , customers.login_name ( varchar(80) ) , customers.login_password ( varchar(20) ) , customers.phone_number ( varchar(255) ) , customers.town_city ( varchar(50) ) , customers.state_county_province ( varchar(50) ) , customers.country ( varchar(50) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.order_id ( integer ) , invoices.invoice_date ( datetime ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.date_account_opened ( datetime ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable product_categories , columns = [ product_categories.production_type_code ( varchar(15) | primary key ) , product_categories.product_type_description ( varchar(80) ) , product_categories.vat_rating ( decimal(19,4) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.production_type_code ( varchar(15) ) , products.unit_price ( decimal(19,4) ) , products.product_name ( varchar(80) ) , products.product_color ( varchar(20) ) , products.product_size ( varchar(20) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.invoice_number ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( decimal(19,4) ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.product_quantity ( varchar(50) ) , order_items.other_order_item_details ( varchar(255) ) ]\ntable invoice_line_items , columns = [ invoice_line_items.order_item_id ( integer ) , invoice_line_items.invoice_number ( integer ) , invoice_line_items.product_id ( integer ) , invoice_line_items.product_title ( varchar(80) ) , invoice_line_items.product_quantity ( varchar(50) ) , invoice_line_items.product_price ( decimal(19,4) ) , invoice_line_items.derived_product_cost ( decimal(19,4) ) , invoice_line_items.derived_vat_payable ( decimal(19,4) ) , invoice_line_items.derived_total_cost ( decimal(19,4) ) ]\nforeign keys :\norders.customer_id = customers.customer_id\ninvoices.order_id = orders.order_id\naccounts.customer_id = customers.customer_id\nproducts.production_type_code = product_categories.production_type_code\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.invoice_number = invoices.invoice_number\norder_items.order_id = orders.order_id\norder_items.product_id = products.product_id\ninvoice_line_items.product_id = products.product_id\ninvoice_line_items.invoice_number = invoices.invoice_number\ninvoice_line_items.order_item_id = order_items.order_item_id\nmatched contents :\naccounts.account_name ( 337 )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.title ( text ) , film.studio ( text ) , film.director ( text ) , film.gross_in_dollar ( int ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.country ( text ) , market.number_cities ( int ) ]\ntable film_market_estimation , columns = [ film_market_estimation.estimation_id ( int | primary key ) , film_market_estimation.low_estimate ( real ) , film_market_estimation.high_estimate ( real ) , film_market_estimation.film_id ( int ) , film_market_estimation.type ( text ) , film_market_estimation.market_id ( int ) , film_market_estimation.year ( int ) ]\nforeign keys :\nfilm_market_estimation.market_id = market.market_id\nfilm_market_estimation.film_id = film.film_id\nmatched contents : None",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.classroom ( 103 )\nteachers.classroom ( 103 )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nbank.state ( Utah , Texas )\ncustomer.state ( Utah , Texas )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\ndiscount_coupons.coupon_amount ( 500 )\ncustomers.good_or_bad_customer ( bad , good )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\nlessons.lesson_status_code ( Cancelled )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairlines.name ( American Airlines )\nairlines.callsign ( AMERICAN )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ntryout.ppos ( goalie )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents : None",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\ndepartment.dept_name ( Computer Info. Systems )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.town_city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( varchar(15) ) , services.service_name ( varchar(80) ) , services.service_descriptio ( varchar(255) ) ]\ntable forms , columns = [ forms.form_id ( integer | primary key ) , forms.form_type_code ( varchar(15) ) , forms.service_id ( integer ) , forms.form_number ( varchar(50) ) , forms.form_name ( varchar(80) ) , forms.form_description ( varchar(255) ) ]\ntable individuals , columns = [ individuals.individual_id ( integer | primary key ) , individuals.individual_first_name ( varchar(80) ) , individuals.individual_middle_name ( varchar(80) ) , individuals.inidividual_phone ( varchar(80) ) , individuals.individual_email ( varchar(80) ) , individuals.individual_address ( varchar(255) ) , individuals.individual_last_name ( varchar(80) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.date_formed ( datetime ) , organizations.organization_name ( varchar(255) ) , organizations.uk_vat_number ( varchar(20) ) ]\ntable parties , columns = [ parties.party_id ( integer | primary key ) , parties.payment_method_code ( varchar(15) ) , parties.party_phone ( varchar(80) ) , parties.party_email ( varchar(80) ) ]\ntable organization_contact_individuals , columns = [ organization_contact_individuals.individual_id ( integer | primary key ) , organization_contact_individuals.organization_id ( integer | primary key ) , organization_contact_individuals.date_contact_from ( datetime ) , organization_contact_individuals.date_contact_to ( datetime ) ]\ntable party_addresses , columns = [ party_addresses.party_id ( integer | primary key ) , party_addresses.address_id ( integer | primary key ) , party_addresses.date_address_from ( datetime ) , party_addresses.address_type_code ( varchar(15) ) , party_addresses.date_address_to ( datetime ) ]\ntable party_forms , columns = [ party_forms.party_id ( integer | primary key ) , party_forms.form_id ( integer | primary key ) , party_forms.date_completion_started ( datetime ) , party_forms.form_status_code ( varchar(15) ) , party_forms.date_fully_completed ( datetime ) ]\ntable party_services , columns = [ party_services.booking_id ( integer ) , party_services.customer_id ( integer ) , party_services.service_id ( integer ) , party_services.service_datetime ( datetime ) , party_services.booking_made_date ( datetime ) ]\nforeign keys :\nforms.service_id = services.service_id\norganization_contact_individuals.individual_id = individuals.individual_id\norganization_contact_individuals.organization_id = organizations.organization_id\nparty_addresses.party_id = parties.party_id\nparty_addresses.address_id = addresses.address_id\nparty_forms.form_id = forms.form_id\nparty_forms.party_id = parties.party_id\nparty_services.customer_id = parties.party_id\nparty_services.service_id = services.service_id\nmatched contents :\naddresses.state_province_county ( Colorado )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\nmatch_season.position ( Midfielder , Defender )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\nparty.governor ( Eliot Spitzer )\nparty.attorney_general ( Eliot Spitzer )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\naddresses.address_id ( 4 )\nref_document_status.document_status_description ( mailed )\ndocuments.document_id ( 4 )\ndocument_drafts.document_id ( 4 )\ndocument_drafts.draft_number ( 4 )\ndraft_copies.document_id ( 4 )\ndraft_copies.copy_number ( 4 )\ncirculation_history.copy_number ( 4 )\ndocuments_mailed.document_id ( 4 )\ndocuments_mailed.mailed_to_address_id ( 4 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents :\nstudent.lname ( Smith )\nstudent.fname ( Linda )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\nfilm.special_features ( Deleted Scenes )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nemployee.emp_num ( 102 )\nprofessor.prof_office ( DRE 102 )\nstudent.stu_hrs ( 102 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ntracks.name ( Release )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_bookings.booking_status_code ( Provisional )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Bob )\npersonfriend.name ( Bob )\npersonfriend.friend ( Bob )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_colors.color_description ( red )\ncharacteristics.characteristic_name ( fast )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\njobs.max_salary ( 12000 )\nemployees.salary ( 12000 )",
  "database schema :\ntable train , columns = [ train.id ( int | primary key ) , train.train_number ( int ) , train.name ( text ) , train.origin ( text ) , train.destination ( text ) , train.time ( text ) , train.interval ( text ) ]\ntable station , columns = [ station.id ( int | primary key ) , station.network_name ( text ) , station.services ( text ) , station.local_authority ( text ) ]\ntable route , columns = [ route.train_id ( int | primary key ) , route.station_id ( int | primary key ) ]\ntable weekly_weather , columns = [ weekly_weather.station_id ( int | primary key ) , weekly_weather.day_of_week ( text | primary key ) , weekly_weather.high_temperature ( int ) , weekly_weather.low_temperature ( int ) , weekly_weather.precipitation ( real ) , weekly_weather.wind_speed_mph ( int ) ]\nforeign keys :\nroute.station_id = station.id\nroute.train_id = train.id\nweekly_weather.station_id = station.id\nmatched contents :\nweekly_weather.high_temperature ( 50 )\nweekly_weather.low_temperature ( 50 )",
  "database schema :\ntable player , columns = [ player.player_id ( int | primary key ) , player.sponsor_name ( text ) , player.player_name ( text ) , player.gender ( text ) , player.residence ( text ) , player.occupation ( text ) , player.votes ( int ) , player.rank ( text ) ]\ntable club , columns = [ club.club_id ( int | primary key ) , club.club_name ( text ) , club.region ( text ) , club.start_year ( int ) ]\ntable coach , columns = [ coach.coach_id ( int | primary key ) , coach.coach_name ( text | comment : player name ) , coach.gender ( text ) , coach.club_id ( int ) , coach.rank ( int ) ]\ntable player_coach , columns = [ player_coach.player_id ( int | primary key ) , player_coach.coach_id ( int | primary key ) , player_coach.starting_year ( int ) ]\ntable match_result , columns = [ match_result.rank ( int | primary key ) , match_result.club_id ( int | primary key ) , match_result.gold ( int ) , match_result.big_silver ( int ) , match_result.small_silver ( int ) , match_result.bronze ( int ) , match_result.points ( int ) ]\nforeign keys :\ncoach.club_id = club.club_id\nplayer_coach.coach_id = coach.coach_id\nplayer_coach.player_id = player.player_id\nmatch_result.club_id = club.club_id\nmatched contents :\nplayer.residence ( Brandon , Birtle )",
  "database schema :\ntable customer_master_index , columns = [ customer_master_index.master_customer_id ( integer | primary key ) , customer_master_index.cmi_details ( varchar(255) ) ]\ntable cmi_cross_references , columns = [ cmi_cross_references.cmi_cross_ref_id ( integer | primary key | comment : cmi cross reference id ) , cmi_cross_references.master_customer_id ( integer ) , cmi_cross_references.source_system_code ( char(15) ) ]\ntable council_tax , columns = [ council_tax.council_tax_id ( integer | primary key ) , council_tax.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable business_rates , columns = [ business_rates.business_rates_id ( integer | primary key ) , business_rates.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable benefits_overpayments , columns = [ benefits_overpayments.council_tax_id ( integer | primary key ) , benefits_overpayments.cmi_cross_ref_id ( integer ) ]\ntable parking_fines , columns = [ parking_fines.council_tax_id ( integer | primary key ) , parking_fines.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable rent_arrears , columns = [ rent_arrears.council_tax_id ( integer | primary key ) , rent_arrears.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable electoral_register , columns = [ electoral_register.electoral_register_id ( integer | primary key ) , electoral_register.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\nforeign keys :\ncmi_cross_references.master_customer_id = customer_master_index.master_customer_id\ncouncil_tax.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbusiness_rates.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbenefits_overpayments.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nparking_fines.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nrent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nelectoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nmatched contents : None",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents : None",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_bookings.booking_status_code ( Confirmed )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\nphysician.name ( John Wen )",
  "database schema :\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.gender ( varchar(1) ) , staff.first_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.email_address ( varchar(255) ) , staff.phone_number ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_type_code ( varchar(20) ) , customers.address_line_1 ( varchar(80) ) , customers.address_line_2 ( varchar(80) ) , customers.town_city ( varchar(80) ) , customers.state ( varchar(80) ) , customers.email_address ( varchar(255) ) , customers.phone_number ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.product_category_code ( varchar(20) ) , products.date_product_first_available ( datetime ) , products.date_product_discontinued ( datetime ) , products.product_name ( varchar(80) ) , products.product_description ( varchar(255) ) , products.product_price ( decimal(19,4) ) ]\ntable complaints , columns = [ complaints.complaint_id ( integer ) , complaints.product_id ( integer ) , complaints.customer_id ( integer ) , complaints.complaint_outcome_code ( varchar(20) ) , complaints.complaint_status_code ( varchar(20) ) , complaints.complaint_type_code ( varchar(20) ) , complaints.date_complaint_raised ( datetime ) , complaints.date_complaint_closed ( datetime ) , complaints.staff_id ( integer ) ]\nforeign keys :\ncomplaints.customer_id = customers.customer_id\ncomplaints.product_id = products.product_id\ncomplaints.staff_id = staff.staff_id\nmatched contents : None",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nemployees.last_name ( Edwards )\nemployees.first_name ( Nancy )\ncustomers.first_name ( Edward )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\nmedication.brand ( X )",
  "database schema :\ntable city , columns = [ city.city_id ( int | primary key ) , city.city ( text ) , city.hanzi ( text ) , city.hanyu_pinyin ( text ) , city.regional_population ( int ) , city.gdp ( real ) ]\ntable match , columns = [ match.match_id ( int | primary key ) , match.date ( text ) , match.venue ( text ) , match.score ( text ) , match.result ( text ) , match.competition ( text ) ]\ntable temperature , columns = [ temperature.city_id ( int | primary key ) , temperature.jan ( real ) , temperature.feb ( real ) , temperature.mar ( real ) , temperature.apr ( real ) , temperature.jun ( real ) , temperature.jul ( real ) , temperature.aug ( real ) , temperature.sep ( real ) , temperature.oct ( real ) , temperature.nov ( real ) , temperature.dec ( real ) ]\ntable hosting_city , columns = [ hosting_city.year ( int | primary key ) , hosting_city.match_id ( int ) , hosting_city.host_city ( text ) ]\nforeign keys :\ntemperature.city_id = city.city_id\nhosting_city.match_id = match.match_id\nhosting_city.host_city = city.city_id\nmatched contents : None",
  "database schema :\ntable book_club , columns = [ book_club.book_club_id ( int | primary key ) , book_club.year ( int ) , book_club.author_or_editor ( text ) , book_club.book_title ( text ) , book_club.publisher ( text ) , book_club.category ( text ) , book_club.result ( text ) ]\ntable movie , columns = [ movie.movie_id ( int | primary key ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) , movie.budget_million ( real ) , movie.gross_worldwide ( int ) ]\ntable culture_company , columns = [ culture_company.company_name ( text | primary key ) , culture_company.type ( text ) , culture_company.incorporated_in ( text ) , culture_company.group_equity_shareholding ( real ) , culture_company.book_club_id ( text ) , culture_company.movie_id ( text ) ]\nforeign keys :\nculture_company.movie_id = movie.movie_id\nculture_company.book_club_id = book_club.book_club_id\nmatched contents : None",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nmember.hometown ( Louisville, Kentucky , Hiram, Georgia )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\nstaff_department_assignments.job_title_code ( Clerical Staff , Sales Person )",
  "database schema :\ntable customer_master_index , columns = [ customer_master_index.master_customer_id ( integer | primary key ) , customer_master_index.cmi_details ( varchar(255) ) ]\ntable cmi_cross_references , columns = [ cmi_cross_references.cmi_cross_ref_id ( integer | primary key | comment : cmi cross reference id ) , cmi_cross_references.master_customer_id ( integer ) , cmi_cross_references.source_system_code ( char(15) ) ]\ntable council_tax , columns = [ council_tax.council_tax_id ( integer | primary key ) , council_tax.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable business_rates , columns = [ business_rates.business_rates_id ( integer | primary key ) , business_rates.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable benefits_overpayments , columns = [ benefits_overpayments.council_tax_id ( integer | primary key ) , benefits_overpayments.cmi_cross_ref_id ( integer ) ]\ntable parking_fines , columns = [ parking_fines.council_tax_id ( integer | primary key ) , parking_fines.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable rent_arrears , columns = [ rent_arrears.council_tax_id ( integer | primary key ) , rent_arrears.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable electoral_register , columns = [ electoral_register.electoral_register_id ( integer | primary key ) , electoral_register.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\nforeign keys :\ncmi_cross_references.master_customer_id = customer_master_index.master_customer_id\ncouncil_tax.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbusiness_rates.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbenefits_overpayments.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nparking_fines.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nrent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nelectoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nmatched contents :\ncmi_cross_references.source_system_code ( Tax )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nflight.flno ( 2 )\nflight.aid ( 2 )\naircraft.aid ( 2 )\ncertificate.aid ( 2 )",
  "database schema :\ntable election , columns = [ election.election_id ( int | primary key ) , election.representative_id ( int ) , election.date ( text ) , election.votes ( real ) , election.vote_percent ( real ) , election.seats ( real ) , election.place ( real ) ]\ntable representative , columns = [ representative.representative_id ( int | primary key ) , representative.name ( text ) , representative.state ( text ) , representative.party ( text ) , representative.lifespan ( text ) ]\nforeign keys :\nelection.representative_id = representative.representative_id\nmatched contents :\nrepresentative.state ( New York , Indiana )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nstudent.city_code ( NYC )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\ncountry.country ( Australia )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nstudent.city_code ( HKG , CHI )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nemployees.last_name ( Edwards )\nemployees.first_name ( Nancy )\ncustomers.first_name ( Edward )\ntracks.name ( Numbers )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ntrack.name ( Release )",
  "database schema :\ntable wrestler , columns = [ wrestler.wrestler_id ( int | primary key ) , wrestler.name ( text ) , wrestler.reign ( text ) , wrestler.days_held ( text ) , wrestler.location ( text ) , wrestler.event ( text ) ]\ntable elimination , columns = [ elimination.elimination_id ( text | primary key ) , elimination.wrestler_id ( text ) , elimination.team ( text ) , elimination.eliminated_by ( text ) , elimination.elimination_move ( text ) , elimination.time ( text ) ]\nforeign keys :\nelimination.wrestler_id = wrestler.wrestler_id\nmatched contents : None",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.id ( 5 )\nalbums.id ( 5 )\nalbums.artist_id ( 5 )\nemployees.id ( 5 )\ncustomers.id ( 5 )\ncustomers.support_rep_id ( 5 )\ngenres.id ( 5 )\ntracks.name ( Numbers )\ninvoice_lines.id ( 5 )\ninvoice_lines.invoice_id ( 5 )\ninvoice_lines.track_id ( 5 )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents : None",
  "database schema :\ntable player_attributes , columns = [ player_attributes.id ( integer | primary key ) , player_attributes.player_fifa_api_id ( integer ) , player_attributes.player_api_id ( integer ) , player_attributes.date ( text ) , player_attributes.overall_rating ( integer ) , player_attributes.potential ( integer ) , player_attributes.preferred_foot ( text ) , player_attributes.attacking_work_rate ( text ) , player_attributes.defensive_work_rate ( text ) , player_attributes.crossing ( integer ) , player_attributes.finishing ( integer ) , player_attributes.heading_accuracy ( integer ) , player_attributes.short_passing ( integer ) , player_attributes.volleys ( integer ) , player_attributes.dribbling ( integer ) , player_attributes.curve ( integer ) , player_attributes.free_kick_accuracy ( integer ) , player_attributes.long_passing ( integer ) , player_attributes.ball_control ( integer ) , player_attributes.acceleration ( integer ) , player_attributes.sprint_speed ( integer ) , player_attributes.agility ( integer ) , player_attributes.reactions ( integer ) , player_attributes.balance ( integer ) , player_attributes.shot_power ( integer ) , player_attributes.jumping ( integer ) , player_attributes.stamina ( integer ) , player_attributes.strength ( integer ) , player_attributes.long_shots ( integer ) , player_attributes.aggression ( integer ) , player_attributes.interceptions ( integer ) , player_attributes.positioning ( integer ) , player_attributes.vision ( integer ) , player_attributes.penalties ( integer ) , player_attributes.marking ( integer ) , player_attributes.standing_tackle ( integer ) , player_attributes.sliding_tackle ( integer ) , player_attributes.gk_diving ( integer ) , player_attributes.gk_handling ( integer ) , player_attributes.gk_kicking ( integer ) , player_attributes.gk_positioning ( integer ) , player_attributes.gk_reflexes ( integer ) ]\ntable player , columns = [ player.id ( integer | primary key ) , player.player_api_id ( integer ) , player.player_name ( text ) , player.player_fifa_api_id ( integer ) , player.birthday ( text ) , player.height ( integer ) , player.weight ( integer ) ]\ntable league , columns = [ league.id ( integer | primary key ) , league.country_id ( integer ) , league.name ( text ) ]\ntable country , columns = [ country.id ( integer | primary key ) , country.name ( text ) ]\ntable team , columns = [ team.id ( integer | primary key ) , team.team_api_id ( integer ) , team.team_fifa_api_id ( integer ) , team.team_long_name ( text ) , team.team_short_name ( text ) ]\ntable team_attributes , columns = [ team_attributes.id ( integer | primary key ) , team_attributes.team_fifa_api_id ( integer ) , team_attributes.team_api_id ( integer ) , team_attributes.date ( text ) , team_attributes.buildupplayspeed ( integer ) , team_attributes.buildupplayspeedclass ( text ) , team_attributes.buildupplaydribbling ( integer ) , team_attributes.buildupplaydribblingclass ( text ) , team_attributes.buildupplaypassing ( integer ) , team_attributes.buildupplaypassingclass ( text ) , team_attributes.buildupplaypositioningclass ( text ) , team_attributes.chancecreationpassing ( integer ) , team_attributes.chancecreationpassingclass ( text ) , team_attributes.chancecreationcrossing ( integer ) , team_attributes.chancecreationcrossingclass ( text ) , team_attributes.chancecreationshooting ( integer ) , team_attributes.chancecreationshootingclass ( text ) , team_attributes.chancecreationpositioningclass ( text ) , team_attributes.defencepressure ( integer ) , team_attributes.defencepressureclass ( text ) , team_attributes.defenceaggression ( integer ) , team_attributes.defenceaggressionclass ( text ) , team_attributes.defenceteamwidth ( integer ) , team_attributes.defenceteamwidthclass ( text ) , team_attributes.defencedefenderlineclass ( text ) ]\nforeign keys :\nplayer_attributes.player_api_id = player.player_api_id\nplayer_attributes.player_fifa_api_id = player.player_fifa_api_id\nleague.country_id = country.id\nteam_attributes.team_api_id = team.team_api_id\nteam_attributes.team_fifa_api_id = team.team_fifa_api_id\nmatched contents :\ncountry.name ( England )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nmediatype.name ( AAC audio file )\ntrack.name ( Numbers )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_characteristic_types.characteristic_type_code ( Grade )\nref_characteristic_types.characteristic_type_description ( Grade )\ncharacteristics.characteristic_type_code ( Grade )\nproducts.product_name ( sesame )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents :\nweb_client_accelerator.id ( 15 )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents : None",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( Russia )\nairlines.country ( Russia )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(50) ) , customers.customer_middle_initial ( varchar(1) ) , customers.customer_last_name ( varchar(50) ) , customers.gender ( varchar(1) ) , customers.email_address ( varchar(255) ) , customers.login_name ( varchar(80) ) , customers.login_password ( varchar(20) ) , customers.phone_number ( varchar(255) ) , customers.town_city ( varchar(50) ) , customers.state_county_province ( varchar(50) ) , customers.country ( varchar(50) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.order_id ( integer ) , invoices.invoice_date ( datetime ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.date_account_opened ( datetime ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable product_categories , columns = [ product_categories.production_type_code ( varchar(15) | primary key ) , product_categories.product_type_description ( varchar(80) ) , product_categories.vat_rating ( decimal(19,4) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.production_type_code ( varchar(15) ) , products.unit_price ( decimal(19,4) ) , products.product_name ( varchar(80) ) , products.product_color ( varchar(20) ) , products.product_size ( varchar(20) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.invoice_number ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( decimal(19,4) ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.product_quantity ( varchar(50) ) , order_items.other_order_item_details ( varchar(255) ) ]\ntable invoice_line_items , columns = [ invoice_line_items.order_item_id ( integer ) , invoice_line_items.invoice_number ( integer ) , invoice_line_items.product_id ( integer ) , invoice_line_items.product_title ( varchar(80) ) , invoice_line_items.product_quantity ( varchar(50) ) , invoice_line_items.product_price ( decimal(19,4) ) , invoice_line_items.derived_product_cost ( decimal(19,4) ) , invoice_line_items.derived_vat_payable ( decimal(19,4) ) , invoice_line_items.derived_total_cost ( decimal(19,4) ) ]\nforeign keys :\norders.customer_id = customers.customer_id\ninvoices.order_id = orders.order_id\naccounts.customer_id = customers.customer_id\nproducts.production_type_code = product_categories.production_type_code\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.invoice_number = invoices.invoice_number\norder_items.order_id = orders.order_id\norder_items.product_id = products.product_id\ninvoice_line_items.product_id = products.product_id\ninvoice_line_items.invoice_number = invoices.invoice_number\ninvoice_line_items.order_item_id = order_items.order_item_id\nmatched contents :\ncustomers.customer_first_name ( Meaghan )\ncustomers.customer_last_name ( Keeling )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nflight.origin ( Los Angeles )\nflight.destination ( Los Angeles , Honolulu )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents : None",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.district ( text ) , people.name ( text ) , people.party ( text ) , people.age ( int ) ]\ntable debate , columns = [ debate.debate_id ( int | primary key ) , debate.date ( text ) , debate.venue ( text ) , debate.num_of_audience ( int ) ]\ntable debate_people , columns = [ debate_people.debate_id ( int | primary key ) , debate_people.affirmative ( int | primary key ) , debate_people.negative ( int | primary key ) , debate_people.if_affirmative_win ( bool ) ]\nforeign keys :\ndebate_people.negative = people.people_id\ndebate_people.affirmative = people.people_id\ndebate_people.debate_id = debate.debate_id\nmatched contents : None",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nstudent.tot_cred ( 100 , 50 )\ntime_slot.end_min ( 50 )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.artist ( text ) , artist.age ( int ) , artist.famous_title ( text ) , artist.famous_release_date ( text ) ]\ntable volume , columns = [ volume.volume_id ( int | primary key ) , volume.volume_issue ( text ) , volume.issue_date ( text ) , volume.weeks_on_top ( real ) , volume.song ( text ) , volume.artist_id ( int ) ]\ntable music_festival , columns = [ music_festival.id ( int | primary key ) , music_festival.music_festival ( text ) , music_festival.date_of_ceremony ( text ) , music_festival.category ( text ) , music_festival.volume ( int ) , music_festival.result ( text ) ]\nforeign keys :\nvolume.artist_id = artist.artist_id\nmusic_festival.volume = volume.volume_id\nmatched contents :\nartist.artist_id ( 1 )\nvolume.volume_id ( 1 )\nvolume.artist_id ( 1 )\nmusic_festival.id ( 1 )\nmusic_festival.volume ( 1 )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.lastname ( BROMLEY )\nlist.firstname ( EVELINA )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncsu_fees.campusfee ( 2001 )\ndegrees.year ( 2001 )\nenrollments.year ( 2001 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.major ( 600 )",
  "database schema :\ntable airport , columns = [ airport.id ( int | primary key ) , airport.city ( text ) , airport.country ( text ) , airport.iata ( text ) , airport.icao ( text ) , airport.name ( text ) ]\ntable operate_company , columns = [ operate_company.id ( int | primary key ) , operate_company.name ( text ) , operate_company.type ( text ) , operate_company.principal_activities ( text ) , operate_company.incorporated_in ( text ) , operate_company.group_equity_shareholding ( real ) ]\ntable flight , columns = [ flight.id ( int | primary key ) , flight.vehicle_flight_number ( text ) , flight.date ( text ) , flight.pilot ( text ) , flight.velocity ( real ) , flight.altitude ( real ) , flight.airport_id ( int ) , flight.company_id ( int ) ]\nforeign keys :\nflight.company_id = operate_company.id\nflight.airport_id = airport.id\nmatched contents :\noperate_company.principal_activities ( Catering services , Cargo )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\narchitect.nationality ( American )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nreviewer.name ( Chris Jackson )",
  "database schema :\ntable player , columns = [ player.player_id ( int | primary key ) , player.sponsor_name ( text ) , player.player_name ( text ) , player.gender ( text ) , player.residence ( text ) , player.occupation ( text ) , player.votes ( int ) , player.rank ( text ) ]\ntable club , columns = [ club.club_id ( int | primary key ) , club.club_name ( text ) , club.region ( text ) , club.start_year ( int ) ]\ntable coach , columns = [ coach.coach_id ( int | primary key ) , coach.coach_name ( text | comment : player name ) , coach.gender ( text ) , coach.club_id ( int ) , coach.rank ( int ) ]\ntable player_coach , columns = [ player_coach.player_id ( int | primary key ) , player_coach.coach_id ( int | primary key ) , player_coach.starting_year ( int ) ]\ntable match_result , columns = [ match_result.rank ( int | primary key ) , match_result.club_id ( int | primary key ) , match_result.gold ( int ) , match_result.big_silver ( int ) , match_result.small_silver ( int ) , match_result.bronze ( int ) , match_result.points ( int ) ]\nforeign keys :\ncoach.club_id = club.club_id\nplayer_coach.coach_id = coach.coach_id\nplayer_coach.player_id = player.player_id\nmatch_result.club_id = club.club_id\nmatched contents : None",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\ncourse_authors_and_tutors.personal_name ( Cathrine )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nvisitors.tourist_details ( Vincent )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.county ( Napa )",
  "database schema :\ntable repair , columns = [ repair.repair_id ( int | primary key ) , repair.name ( text ) , repair.launch_date ( text ) , repair.notes ( text ) ]\ntable machine , columns = [ machine.machine_id ( int | primary key ) , machine.making_year ( int ) , machine.class ( text ) , machine.team ( text ) , machine.machine_series ( text ) , machine.value_points ( real ) , machine.quality_rank ( int ) ]\ntable technician , columns = [ technician.technician_id ( real | primary key ) , technician.name ( text ) , technician.team ( text ) , technician.starting_year ( real ) , technician.age ( int ) ]\ntable repair_assignment , columns = [ repair_assignment.technician_id ( int | primary key ) , repair_assignment.repair_id ( int | primary key ) , repair_assignment.machine_id ( int | primary key ) ]\nforeign keys :\nrepair_assignment.machine_id = machine.machine_id\nrepair_assignment.repair_id = repair.repair_id\nrepair_assignment.technician_id = technician.technician_id\nmatched contents :\ntechnician.team ( NYY )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\njobs.min_salary ( 9000 )\njobs.max_salary ( 9000 )\nemployees.salary ( 9000 )",
  "database schema :\ntable program , columns = [ program.program_id ( int | primary key ) , program.name ( text ) , program.origin ( text ) , program.launch ( real ) , program.owner ( text ) ]\ntable channel , columns = [ channel.channel_id ( int | primary key ) , channel.name ( text ) , channel.owner ( text ) , channel.share_in_percent ( real ) , channel.rating_in_percent ( real ) ]\ntable broadcast , columns = [ broadcast.channel_id ( int | primary key ) , broadcast.program_id ( int | primary key ) , broadcast.time_of_day ( text ) ]\ntable broadcast_share , columns = [ broadcast_share.channel_id ( int | primary key ) , broadcast_share.program_id ( int | primary key ) , broadcast_share.date ( text ) , broadcast_share.share_in_percent ( real ) ]\nforeign keys :\nbroadcast.program_id = program.program_id\nbroadcast.channel_id = channel.channel_id\nbroadcast_share.program_id = program.program_id\nbroadcast_share.channel_id = channel.channel_id\nmatched contents :\nchannel.owner ( CCTV , HBS )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nstudent.fname ( Michael )\nfaculty.lname ( Goodrich )\nfaculty.fname ( Michael )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\naddresses.city ( Lockmanfurt )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable customer_policies , columns = [ customer_policies.policy_id ( integer | primary key ) , customer_policies.customer_id ( integer ) , customer_policies.policy_type_code ( char(15) ) , customer_policies.start_date ( date ) , customer_policies.end_date ( date ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.policy_id ( integer ) , claims.date_claim_made ( date ) , claims.date_claim_settled ( date ) , claims.amount_claimed ( integer ) , claims.amount_settled ( integer ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.date_claim_made ( date ) , settlements.date_claim_settled ( date ) , settlements.amount_claimed ( integer ) , settlements.amount_settled ( integer ) , settlements.customer_policy_id ( integer ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.settlement_id ( integer ) , payments.payment_method_code ( varchar(255) ) , payments.date_payment_made ( date ) , payments.amount_payment ( integer ) ]\nforeign keys :\ncustomer_policies.customer_id = customers.customer_id\nclaims.policy_id = customer_policies.policy_id\nsettlements.claim_id = claims.claim_id\npayments.settlement_id = settlements.settlement_id\nmatched contents :\ncustomers.customer_id ( 1 )\ncustomer_policies.customer_id ( 1 )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergy ( Milk )\nhas_allergy.allergy ( Milk )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.country ( text ) , people.is_male ( text ) , people.age ( int ) ]\ntable church , columns = [ church.church_id ( int | primary key ) , church.name ( text ) , church.organized_by ( text ) , church.open_date ( int ) , church.continuation_of ( text ) ]\ntable wedding , columns = [ wedding.church_id ( int | primary key ) , wedding.male_id ( int | primary key ) , wedding.female_id ( int | primary key ) , wedding.year ( int ) ]\nforeign keys :\nwedding.female_id = people.people_id\nwedding.male_id = people.people_id\nwedding.church_id = church.church_id\nmatched contents :\nwedding.year ( 2016 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.advisor ( 8741 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nplayer_college.college_id ( yale )\nhall_of_fame.category ( Player )\nplayer.name_first ( Yale )\nplayer.name_last ( Yale )\ncollege.college_id ( yale )\ncollege.name_full ( Yale University )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_apid ( 3 )\nroutes.src_apid ( 3 )\nroutes.airline ( 3 )\nairports.apid ( 3 )\nairports.elevation ( 3 )\nairlines.alid ( 3 )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergytype ( food )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.year ( 2009 )\nraces.name ( Australian Grand Prix )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\ndrivers.nationality ( Australian )\nseasons.year ( 2009 )\nconstructors.nationality ( Australian )\nresults.resultid ( 2009 )\nconstructorresults.constructorresultsid ( 2009 )\nqualifying.qualifyid ( 2009 )",
  "database schema :\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.home_games ( int ) , stadium.average_attendance ( real ) , stadium.total_attendance ( real ) , stadium.capacity_percentage ( real ) ]\ntable game , columns = [ game.stadium_id ( int ) , game.id ( int | primary key ) , game.season ( int ) , game.date ( text ) , game.home_team ( text ) , game.away_team ( text ) , game.score ( text ) , game.competition ( text ) ]\ntable injury_accident , columns = [ injury_accident.game_id ( int ) , injury_accident.id ( int | primary key ) , injury_accident.player ( text ) , injury_accident.injury ( text ) , injury_accident.number_of_matches ( text ) , injury_accident.source ( text ) ]\nforeign keys :\ngame.stadium_id = stadium.id\ninjury_accident.game_id = game.id\nmatched contents :\ngame.season ( 2010 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_document_types.document_type_name ( Paper )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nstudent.lname ( Smith )\nfaculty.lname ( Smith )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nplaylists.name ( Movies )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairlines.icao ( TWO )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.g_name ( blues )\nartist.preferred_genre ( blues )\nsong.genre_is ( blues )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents : None",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nmanufacturers.code ( 2 )\nproducts.code ( 2 )\nproducts.manufacturer ( 2 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(40) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_name ( varchar(40) ) ]\ntable available_policies , columns = [ available_policies.policy_id ( integer | primary key ) , available_policies.policy_type_code ( char(15) ) , available_policies.customer_phone ( varchar(255) ) ]\ntable customers_policies , columns = [ customers_policies.customer_id ( integer | primary key ) , customers_policies.policy_id ( integer | primary key ) , customers_policies.date_opened ( date ) , customers_policies.date_closed ( date ) ]\ntable first_notification_of_loss , columns = [ first_notification_of_loss.fnol_id ( integer | primary key ) , first_notification_of_loss.customer_id ( integer ) , first_notification_of_loss.policy_id ( integer ) , first_notification_of_loss.service_id ( integer ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.fnol_id ( integer ) , claims.effective_date ( date ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.effective_date ( date ) , settlements.settlement_amount ( real ) ]\nforeign keys :\ncustomers_policies.policy_id = available_policies.policy_id\ncustomers_policies.customer_id = customers.customer_id\nfirst_notification_of_loss.customer_id = customers_policies.customer_id\nfirst_notification_of_loss.policy_id = customers_policies.policy_id\nfirst_notification_of_loss.service_id = services.service_id\nclaims.fnol_id = first_notification_of_loss.fnol_id\nsettlements.claim_id = claims.claim_id\nmatched contents :\ncustomers.customer_name ( Dayana Robel )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents : None",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\ninst.name ( Google )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents :\nstore.store_name ( Miramichi )",
  "database schema :\ntable storm , columns = [ storm.storm_id ( int | primary key ) , storm.name ( text ) , storm.dates_active ( text ) , storm.max_speed ( int ) , storm.damage_millions_usd ( real ) , storm.number_deaths ( int ) ]\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_code ( text ) , region.region_name ( text ) ]\ntable affected_region , columns = [ affected_region.region_id ( int | primary key ) , affected_region.storm_id ( int | primary key ) , affected_region.number_city_affected ( real ) ]\nforeign keys :\naffected_region.storm_id = storm.storm_id\naffected_region.region_id = region.region_id\nmatched contents :\nregion.region_name ( Denmark )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.classroom ( 108 )\nteachers.classroom ( 108 )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nref_hotel_star_ratings.star_rating_code ( 3 )\nref_hotel_star_ratings.star_rating_description ( star )\nref_attraction_types.attraction_type_code ( 3 )\nhotels.star_rating_code ( 3 )\ntourist_attractions.attraction_type_code ( 3 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_calendar.day_number ( 3 )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nsection.year ( 2009 , 2010 )\nteaches.year ( 2009 , 2010 )\ntakes.year ( 2009 , 2010 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\nstaff_department_assignments.job_title_code ( Clerical Staff )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\nstudent.lname ( Smith )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\ncustomers_cards.card_number ( 4560596484842 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\nproducts.product_details ( Americano , Latte )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nplays_games.hours_played ( 1000 )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nscreen_mode.type ( Graphics )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.circuitid ( 5 )\ndrivers.nationality ( Japanese )\nconstructors.constructorid ( 5 )\nconstructors.nationality ( Japanese )\nconstructorstandings.constructorstandingsid ( 5 )\nconstructorstandings.raceid ( 5 )\nconstructorstandings.constructorid ( 5 )\nconstructorstandings.position ( 5 )\nconstructorstandings.positiontext ( 5 )\nconstructorresults.constructorresultsid ( 5 )\nconstructorresults.raceid ( 5 )\nconstructorresults.constructorid ( 5 )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nrooms.decor ( modern )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\ncourses.course_name ( database )\ncourses.course_description ( database )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\ndocument_types.document_description ( Regular , Initial Application )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomer_orders.order_date ( 2018-03-17 07:13:53 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\ncourse.credits ( 3 , 1 , 4 )\ncourse.hours ( 3 , 1 , 4 )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\njobs.min_salary ( 8000 )\nemployees.salary ( 8000 )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.classroom ( 111 )\nteachers.classroom ( 111 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\ndepartment.dname ( Computer Science )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_budget_codes.budget_type_description ( Government )\ndocuments_with_expenses.document_details ( government )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_details ( varchar(255) ) ]\ntable policies , columns = [ policies.policy_id ( integer | primary key ) , policies.customer_id ( integer ) , policies.policy_type_code ( char(15) ) , policies.start_date ( datetime ) , policies.end_date ( datetime ) ]\ntable claim_headers , columns = [ claim_headers.claim_header_id ( integer | primary key ) , claim_headers.claim_status_code ( char(15) ) , claim_headers.claim_type_code ( char(15) ) , claim_headers.policy_id ( integer ) , claim_headers.date_of_claim ( datetime ) , claim_headers.date_of_settlement ( datetime ) , claim_headers.amount_claimed ( decimal(20,4) ) , claim_headers.amount_piad ( decimal(20,4) ) ]\ntable claims_documents , columns = [ claims_documents.claim_id ( integer | primary key ) , claims_documents.document_type_code ( char(15) | primary key ) , claims_documents.created_by_staff_id ( integer ) , claims_documents.created_date ( integer ) ]\ntable claims_processing_stages , columns = [ claims_processing_stages.claim_stage_id ( integer | primary key ) , claims_processing_stages.next_claim_stage_id ( integer ) , claims_processing_stages.claim_status_name ( varchar(255) ) , claims_processing_stages.claim_status_description ( varchar(255) ) ]\ntable claims_processing , columns = [ claims_processing.claim_processing_id ( integer | primary key ) , claims_processing.claim_id ( integer ) , claims_processing.claim_outcome_code ( char(15) ) , claims_processing.claim_stage_id ( integer ) , claims_processing.staff_id ( integer ) ]\nforeign keys :\npolicies.customer_id = customers.customer_id\nclaim_headers.policy_id = policies.policy_id\nclaims_documents.created_by_staff_id = staff.staff_id\nclaims_documents.claim_id = claim_headers.claim_header_id\nclaims_processing.staff_id = staff.staff_id\nclaims_processing.claim_id = claim_headers.claim_header_id\nmatched contents :\nclaims_documents.created_date ( 2 )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.circuitid ( 1 )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\nconstructors.constructorid ( 1 )\nconstructorstandings.constructorstandingsid ( 1 )\nconstructorstandings.raceid ( 1 )\nconstructorstandings.constructorid ( 1 )\nconstructorstandings.position ( 1 )\nconstructorstandings.positiontext ( 1 )\nconstructorresults.constructorresultsid ( 1 )\nconstructorresults.raceid ( 1 )\nconstructorresults.constructorid ( 1 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents : None",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nfaculty.rank ( Professor )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nloan.amount ( 3000 )",
  "database schema :\ntable captain , columns = [ captain.captain_id ( int | primary key ) , captain.name ( text ) , captain.ship_id ( int ) , captain.age ( text ) , captain.class ( text ) , captain.rank ( text ) ]\ntable ship , columns = [ ship.ship_id ( int | primary key ) , ship.name ( text ) , ship.type ( text ) , ship.built_year ( real ) , ship.class ( text ) , ship.flag ( text ) ]\nforeign keys :\ncaptain.ship_id = ship.ship_id\nmatched contents :\ncaptain.class ( Armed schooner , Cutter )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nvoting_record.election_cycle ( Fall )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairlines.icao ( ONE )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\ncourse.days ( MTW )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nrooms.roomname ( Recluse and defiance )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_document_types.document_type_code ( CV )\nref_document_types.document_type_name ( CV )\ndocuments.document_type_code ( CV )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.product_price ( double ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(15) ) , customers.customer_number ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable contacts , columns = [ contacts.contact_id ( integer | primary key ) , contacts.customer_id ( integer ) , contacts.gender ( varchar(1) ) , contacts.first_name ( varchar(80) ) , contacts.last_name ( varchar(50) ) , contacts.contact_phone ( varchar(80) ) ]\ntable customer_address_history , columns = [ customer_address_history.customer_id ( integer ) , customer_address_history.address_id ( integer ) , customer_address_history.date_from ( datetime ) , customer_address_history.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.order_status_code ( varchar(15) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_address_history.address_id = addresses.address_id\ncustomer_address_history.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.address_id ( 2 )\ncustomers.customer_id ( 2 )\ncustomers.payment_method_code ( Credit Card )\ncontacts.contact_id ( 2 )\ncustomer_address_history.customer_id ( 2 )\ncustomer_address_history.address_id ( 2 )\ncustomer_orders.order_id ( 2 )\ncustomer_orders.customer_id ( 2 )\norder_items.order_item_id ( 2 )\norder_items.product_id ( 2 )\norder_items.order_quantity ( 2 )",
  "database schema :\ntable venue , columns = [ venue.venueid ( integer | primary key ) , venue.venuename ( varchar(100) ) ]\ntable author , columns = [ author.authorid ( integer | primary key ) , author.authorname ( varchar(50) ) ]\ntable dataset , columns = [ dataset.datasetid ( integer | primary key ) , dataset.datasetname ( varchar(50) ) ]\ntable journal , columns = [ journal.journalid ( integer | primary key ) , journal.journalname ( varchar(100) ) ]\ntable keyphrase , columns = [ keyphrase.keyphraseid ( integer | primary key ) , keyphrase.keyphrasename ( varchar(50) ) ]\ntable paper , columns = [ paper.paperid ( integer | primary key ) , paper.title ( varchar(300) ) , paper.venueid ( integer ) , paper.year ( integer ) , paper.numciting ( integer | comment : number citing ) , paper.numcitedby ( integer | comment : number cited by ) , paper.journalid ( integer ) ]\ntable cite , columns = [ cite.citingpaperid ( integer | primary key ) , cite.citedpaperid ( integer | primary key ) ]\ntable paperdataset , columns = [ paperdataset.paperid ( integer | primary key ) , paperdataset.datasetid ( integer | primary key ) ]\ntable paperkeyphrase , columns = [ paperkeyphrase.paperid ( integer | primary key ) , paperkeyphrase.keyphraseid ( integer | primary key ) ]\ntable writes , columns = [ writes.paperid ( integer | primary key ) , writes.authorid ( integer | primary key ) ]\nforeign keys :\npaper.venueid = venue.venueid\npaper.journalid = journal.journalid\ncite.citingpaperid = paper.paperid\ncite.citedpaperid = paper.paperid\npaperkeyphrase.keyphraseid = keyphrase.keyphraseid\npaperkeyphrase.paperid = paper.paperid\nwrites.authorid = author.authorid\nwrites.paperid = paper.paperid\nmatched contents : None",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nroles.role_code ( ED )\nemployees.role_code ( ED )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nhall_of_fame.category ( Player )\nplayer.name_last ( Hall )",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nbranch.open_year ( 2001 )",
  "database schema :\ntable festival_detail , columns = [ festival_detail.festival_id ( int | primary key ) , festival_detail.festival_name ( text ) , festival_detail.chair_name ( text ) , festival_detail.location ( text ) , festival_detail.year ( int ) , festival_detail.num_of_audience ( int ) ]\ntable artwork , columns = [ artwork.artwork_id ( int | primary key ) , artwork.type ( text ) , artwork.name ( text ) ]\ntable nomination , columns = [ nomination.artwork_id ( int | primary key ) , nomination.festival_id ( int | primary key ) , nomination.result ( text ) ]\nforeign keys :\nnomination.festival_id = festival_detail.festival_id\nnomination.artwork_id = artwork.artwork_id\nmatched contents :\nfestival_detail.year ( 2007 )\nnomination.result ( Nominated )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ntrack.name ( Release , Numbers )",
  "database schema :\ntable publication , columns = [ publication.publication_id ( int | primary key ) , publication.book_id ( int ) , publication.publisher ( text ) , publication.publication_date ( text ) , publication.price ( real ) ]\ntable book , columns = [ book.book_id ( int | primary key ) , book.title ( text ) , book.issues ( real ) , book.writer ( text ) ]\nforeign keys :\npublication.book_id = book.book_id\nmatched contents :\npublication.publication_id ( 3 )\npublication.book_id ( 3 )\nbook.book_id ( 3 )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nproducts.product_name ( dinning )\nstores.store_name ( Rob Dinning )\nservices.product_name ( dinning )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\nproducts.product_name ( red jeans )",
  "database schema :\ntable party , columns = [ party.party_id ( int | primary key ) , party.party_theme ( text ) , party.location ( text ) , party.first_year ( text ) , party.last_year ( text ) , party.number_of_hosts ( int ) ]\ntable host , columns = [ host.host_id ( int | primary key ) , host.name ( text ) , host.nationality ( text ) , host.age ( text ) ]\ntable party_host , columns = [ party_host.party_id ( int | primary key ) , party_host.host_id ( int | primary key ) , party_host.is_main_in_charge ( bool ) ]\nforeign keys :\nparty_host.party_id = party.party_id\nparty_host.host_id = host.host_id\nmatched contents :\nparty.party_theme ( Teqnology , Spring )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents :\nstore.type ( Village Store , City Mall )",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nbranch.city ( London )\npurchase.year ( 2018 )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.county ( Napa )\nwine.name ( Numbers )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\ngrapes.color ( White )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\ncountry.country_name ( Indonesia )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents : None",
  "database schema :\ntable mountain , columns = [ mountain.mountain_id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable climber , columns = [ climber.climber_id ( int | primary key ) , climber.name ( text ) , climber.country ( text ) , climber.time ( text ) , climber.points ( real ) , climber.mountain_id ( int ) ]\nforeign keys :\nclimber.mountain_id = mountain.mountain_id\nmatched contents :\nmountain.mountain_id ( 3 )\nclimber.climber_id ( 3 )\nclimber.mountain_id ( 3 )",
  "database schema :\ntable pilot , columns = [ pilot.pilot_id ( int(11) | primary key ) , pilot.name ( varchar(50) ) , pilot.age ( int(11) ) ]\ntable aircraft , columns = [ aircraft.aircraft_id ( int(11) | primary key ) , aircraft.aircraft ( varchar(50) ) , aircraft.description ( varchar(50) ) , aircraft.max_gross_weight ( varchar(50) ) , aircraft.total_disk_area ( varchar(50) ) , aircraft.max_disk_loading ( varchar(50) ) ]\ntable match , columns = [ match.round ( real | primary key ) , match.location ( text ) , match.country ( text ) , match.date ( text ) , match.fastest_qualifying ( text ) , match.winning_pilot ( text ) , match.winning_aircraft ( text ) ]\ntable airport , columns = [ airport.airport_id ( int | primary key ) , airport.airport_name ( text ) , airport.total_passengers ( real ) , airport.%_change_2007 ( text ) , airport.international_passengers ( real ) , airport.domestic_passengers ( real ) , airport.transit_passengers ( real ) , airport.aircraft_movements ( real ) , airport.freight_metric_tonnes ( real ) ]\ntable airport_aircraft , columns = [ airport_aircraft.id ( int ) , airport_aircraft.airport_id ( int | primary key ) , airport_aircraft.aircraft_id ( int | primary key ) ]\nforeign keys :\nmatch.winning_pilot = pilot.pilot_id\nmatch.winning_aircraft = aircraft.aircraft_id\nairport_aircraft.aircraft_id = aircraft.aircraft_id\nairport_aircraft.airport_id = airport.airport_id\nmatched contents : None",
  "database schema :\ntable storm , columns = [ storm.storm_id ( int | primary key ) , storm.name ( text ) , storm.dates_active ( text ) , storm.max_speed ( int ) , storm.damage_millions_usd ( real ) , storm.number_deaths ( int ) ]\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_code ( text ) , region.region_name ( text ) ]\ntable affected_region , columns = [ affected_region.region_id ( int | primary key ) , affected_region.storm_id ( int | primary key ) , affected_region.number_city_affected ( real ) ]\nforeign keys :\naffected_region.storm_id = storm.storm_id\naffected_region.region_id = region.region_id\nmatched contents :\nstorm.storm_id ( 10 )\nregion.region_id ( 10 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable properties , columns = [ properties.property_id ( integer | primary key ) , properties.property_type_code ( char(15) ) , properties.property_address ( varchar(255) ) , properties.other_details ( varchar(255) ) ]\ntable residents , columns = [ residents.resident_id ( integer | primary key ) , residents.property_id ( integer | primary key ) , residents.date_moved_in ( datetime | primary key ) , residents.date_moved_out ( datetime ) , residents.other_details ( varchar(255) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.parent_organization_id ( integer ) , organizations.organization_details ( varchar(255) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.organization_id ( integer ) , services.service_type_code ( char(15) ) , services.service_details ( varchar(255) ) ]\ntable residents_services , columns = [ residents_services.resident_id ( integer | primary key ) , residents_services.service_id ( integer | primary key ) , residents_services.date_moved_in ( datetime ) , residents_services.property_id ( integer ) , residents_services.date_requested ( datetime ) , residents_services.date_provided ( datetime ) , residents_services.other_details ( varchar(255) ) ]\ntable things , columns = [ things.thing_id ( integer | primary key ) , things.organization_id ( integer ) , things.type_of_thing_code ( char(15) ) , things.service_type_code ( char(10) ) , things.service_details ( varchar(255) ) ]\ntable customer_events , columns = [ customer_events.customer_event_id ( integer | primary key ) , customer_events.customer_id ( integer ) , customer_events.date_moved_in ( datetime ) , customer_events.property_id ( integer ) , customer_events.resident_id ( integer ) , customer_events.thing_id ( integer ) ]\ntable customer_event_notes , columns = [ customer_event_notes.customer_event_note_id ( integer | primary key ) , customer_event_notes.customer_event_id ( integer ) , customer_event_notes.service_type_code ( char(15) ) , customer_event_notes.resident_id ( integer ) , customer_event_notes.property_id ( integer ) , customer_event_notes.date_moved_in ( datetime ) ]\ntable timed_status_of_things , columns = [ timed_status_of_things.thing_id ( integer | primary key ) , timed_status_of_things.date_and_date ( datetime | primary key ) , timed_status_of_things.status_of_thing_code ( char(15) | primary key ) ]\ntable timed_locations_of_things , columns = [ timed_locations_of_things.thing_id ( integer | primary key ) , timed_locations_of_things.date_and_time ( datetime | primary key ) , timed_locations_of_things.location_code ( char(15) | primary key ) ]\nforeign keys :\nresidents.property_id = properties.property_id\nservices.organization_id = organizations.organization_id\nresidents_services.resident_id = residents.resident_id\nresidents_services.property_id = residents.property_id\nresidents_services.date_moved_in = residents.date_moved_in\nresidents_services.service_id = services.service_id\nthings.organization_id = organizations.organization_id\ncustomer_events.resident_id = residents.resident_id\ncustomer_events.property_id = residents.property_id\ncustomer_events.date_moved_in = residents.date_moved_in\ncustomer_events.customer_id = customers.customer_id\ncustomer_events.thing_id = things.thing_id\ncustomer_event_notes.customer_event_id = customer_events.customer_event_id\ntimed_status_of_things.thing_id = things.thing_id\ntimed_locations_of_things.thing_id = things.thing_id\nmatched contents :\norganizations.organization_details ( Denesik and Sons Party )",
  "database schema :\ntable book_club , columns = [ book_club.book_club_id ( int | primary key ) , book_club.year ( int ) , book_club.author_or_editor ( text ) , book_club.book_title ( text ) , book_club.publisher ( text ) , book_club.category ( text ) , book_club.result ( text ) ]\ntable movie , columns = [ movie.movie_id ( int | primary key ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) , movie.budget_million ( real ) , movie.gross_worldwide ( int ) ]\ntable culture_company , columns = [ culture_company.company_name ( text | primary key ) , culture_company.type ( text ) , culture_company.incorporated_in ( text ) , culture_company.group_equity_shareholding ( real ) , culture_company.book_club_id ( text ) , culture_company.movie_id ( text ) ]\nforeign keys :\nculture_company.movie_id = movie.movie_id\nculture_company.book_club_id = book_club.book_club_id\nmatched contents :\nmovie.year ( 1999 , 2000 )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nref_attraction_types.attraction_type_description ( museum )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 5 )\nstatus.station_id ( 5 )\nstatus.bikes_available ( 5 )\nstatus.docks_available ( 5 )\ntrip.start_station_id ( 5 )\ntrip.end_station_id ( 5 )\nweather.max_visibility_miles ( 5 )\nweather.cloud_cover ( 5 )",
  "database schema :\ntable event , columns = [ event.event_id ( int | primary key ) , event.date ( text ) , event.venue ( text ) , event.name ( text ) , event.event_attendance ( int ) ]\ntable journalist , columns = [ journalist.journalist_id ( int | primary key ) , journalist.name ( text ) , journalist.nationality ( text ) , journalist.age ( text ) , journalist.years_working ( int ) ]\ntable news_report , columns = [ news_report.journalist_id ( int | primary key ) , news_report.event_id ( int | primary key ) , news_report.work_type ( text ) ]\nforeign keys :\nnews_report.event_id = event.event_id\nnews_report.journalist_id = journalist.journalist_id\nmatched contents : None",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nbank.city ( New York City )\nbank.state ( New York )\ncustomer.state ( New York )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nfiles.f_id ( 3 )\nsong.f_id ( 3 )\nsong.languages ( bangla )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_buildings.building_manager ( Emma )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.classroom ( 105 )\nteachers.classroom ( 105 )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nclass.crs_code ( CIS-220 )\ncourse.crs_code ( CIS-220 )",
  "database schema :\ntable repair , columns = [ repair.repair_id ( int | primary key ) , repair.name ( text ) , repair.launch_date ( text ) , repair.notes ( text ) ]\ntable machine , columns = [ machine.machine_id ( int | primary key ) , machine.making_year ( int ) , machine.class ( text ) , machine.team ( text ) , machine.machine_series ( text ) , machine.value_points ( real ) , machine.quality_rank ( int ) ]\ntable technician , columns = [ technician.technician_id ( real | primary key ) , technician.name ( text ) , technician.team ( text ) , technician.starting_year ( real ) , technician.age ( int ) ]\ntable repair_assignment , columns = [ repair_assignment.technician_id ( int | primary key ) , repair_assignment.repair_id ( int | primary key ) , repair_assignment.machine_id ( int | primary key ) ]\nforeign keys :\nrepair_assignment.machine_id = machine.machine_id\nrepair_assignment.repair_id = repair.repair_id\nrepair_assignment.technician_id = technician.technician_id\nmatched contents :\nrepair.repair_id ( 2 )\nmachine.machine_id ( 2 )\nmachine.quality_rank ( 2 )\nrepair_assignment.technician_id ( 2 )\nrepair_assignment.repair_id ( 2 )\nrepair_assignment.machine_id ( 2 )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_log_id ( 1 )\nproblem_log.assigned_to_staff_id ( 1 )\nproblem_log.problem_id ( 1 )\nproduct.product_id ( 1 )\nstaff.staff_id ( 1 )\nproblems.problem_id ( 1 )\nproblems.product_id ( 1 )\nproblems.closure_authorised_by_staff_id ( 1 )\nproblems.reported_by_staff_id ( 1 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nplayer.birth_city ( Atlanta )\nplayer.death_city ( Atlanta )\nplayer.name_last ( Parks )\npark.city ( Atlanta )\ncollege.city ( Atlanta )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Dan )\npersonfriend.friend ( Dan )",
  "database schema :\ntable festival_detail , columns = [ festival_detail.festival_id ( int | primary key ) , festival_detail.festival_name ( text ) , festival_detail.chair_name ( text ) , festival_detail.location ( text ) , festival_detail.year ( int ) , festival_detail.num_of_audience ( int ) ]\ntable artwork , columns = [ artwork.artwork_id ( int | primary key ) , artwork.type ( text ) , artwork.name ( text ) ]\ntable nomination , columns = [ nomination.artwork_id ( int | primary key ) , nomination.festival_id ( int | primary key ) , nomination.result ( text ) ]\nforeign keys :\nnomination.festival_id = festival_detail.festival_id\nnomination.artwork_id = artwork.artwork_id\nmatched contents :\nartwork.type ( Program Talent Show )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\ntourist_attractions.how_to_get_there ( walk )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nclass.class_room ( KLR209 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nhall_of_fame.category ( Player )\nplayer.birth_country ( USA )\nplayer.death_country ( USA )\nplayer.name_first ( Count )\ncollege.country ( USA )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\nplayer.ycard ( yes )\ntryout.decision ( yes )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.winery ( Robert Biale )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.artist ( text ) , artist.age ( int ) , artist.famous_title ( text ) , artist.famous_release_date ( text ) ]\ntable volume , columns = [ volume.volume_id ( int | primary key ) , volume.volume_issue ( text ) , volume.issue_date ( text ) , volume.weeks_on_top ( real ) , volume.song ( text ) , volume.artist_id ( int ) ]\ntable music_festival , columns = [ music_festival.id ( int | primary key ) , music_festival.music_festival ( text ) , music_festival.date_of_ceremony ( text ) , music_festival.category ( text ) , music_festival.volume ( int ) , music_festival.result ( text ) ]\nforeign keys :\nvolume.artist_id = artist.artist_id\nmusic_festival.volume = volume.volume_id\nmatched contents : None",
  "database schema :\ntable railway , columns = [ railway.railway_id ( int | primary key ) , railway.railway ( text ) , railway.builder ( text ) , railway.built ( text ) , railway.wheels ( text ) , railway.location ( text ) , railway.objectnumber ( text ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.train_num ( text ) , train.name ( text ) , train.from ( text ) , train.arrival ( text ) , train.railway_id ( int ) ]\ntable manager , columns = [ manager.manager_id ( int | primary key ) , manager.name ( text ) , manager.country ( text ) , manager.working_year_starts ( text ) , manager.age ( int ) , manager.level ( int ) ]\ntable railway_manage , columns = [ railway_manage.railway_id ( int | primary key ) , railway_manage.manager_id ( int | primary key ) , railway_manage.from_year ( text ) ]\nforeign keys :\ntrain.railway_id = railway.railway_id\nrailway_manage.railway_id = railway.railway_id\nrailway_manage.manager_id = manager.manager_id\nmatched contents : None",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Psychology )\ncourse.dept_name ( Psychology )\ninstructor.dept_name ( Psychology )\nstudent.dept_name ( Psychology )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\ndepartment.dept_name ( Biology )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.rank_in_series ( int ) , film.number_in_season ( int ) , film.title ( text ) , film.directed_by ( text ) , film.original_air_date ( text ) , film.production_code ( text ) ]\ntable cinema , columns = [ cinema.cinema_id ( int | primary key ) , cinema.name ( text ) , cinema.openning_year ( int ) , cinema.capacity ( int ) , cinema.location ( text ) ]\ntable schedule , columns = [ schedule.cinema_id ( int | primary key ) , schedule.film_id ( int | primary key ) , schedule.date ( text ) , schedule.show_times_per_day ( int ) , schedule.price ( float ) ]\nforeign keys :\nschedule.cinema_id = cinema.cinema_id\nschedule.film_id = film.film_id\nmatched contents :\ncinema.openning_year ( 2011 )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nemployee.emp_lname ( Heffington )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomers.customer_name ( Maudie Kertzmann )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Biology )\ncourse.dept_name ( Biology )\ninstructor.dept_name ( Biology )\nstudent.dept_name ( Biology )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents : None",
  "database schema :\ntable mountain , columns = [ mountain.mountain_id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable climber , columns = [ climber.climber_id ( int | primary key ) , climber.name ( text ) , climber.country ( text ) , climber.time ( text ) , climber.points ( real ) , climber.mountain_id ( int ) ]\nforeign keys :\nclimber.mountain_id = mountain.mountain_id\nmatched contents : None",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nperformers.customer_name ( Ashley )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nstaff.staff_first_name ( Rylan )\nstaff.staff_last_name ( Homenick )",
  "database schema :\ntable state , columns = [ state.state_name ( text | primary key ) , state.population ( integer ) , state.area ( double ) , state.country_name ( varchar(3) ) , state.capital ( text ) , state.density ( double ) ]\ntable city , columns = [ city.city_name ( text | primary key ) , city.population ( integer ) , city.country_name ( varchar(3) ) , city.state_name ( text | primary key ) ]\ntable border_info , columns = [ border_info.state_name ( text | primary key ) , border_info.border ( text | primary key ) ]\ntable highlow , columns = [ highlow.state_name ( text | primary key ) , highlow.highest_elevation ( text ) , highlow.lowest_point ( text ) , highlow.highest_point ( text ) , highlow.lowest_elevation ( text ) ]\ntable lake , columns = [ lake.lake_name ( text ) , lake.area ( double ) , lake.country_name ( varchar(3) ) , lake.state_name ( text ) ]\ntable mountain , columns = [ mountain.mountain_name ( text | primary key ) , mountain.mountain_altitude ( integer ) , mountain.country_name ( varchar(3) ) , mountain.state_name ( text | primary key ) ]\ntable river , columns = [ river.river_name ( text | primary key ) , river.length ( integer ) , river.country_name ( varchar(3) ) , river.traverse ( text ) ]\nforeign keys :\ncity.state_name = state.state_name\nborder_info.border = state.state_name\nborder_info.state_name = state.state_name\nhighlow.state_name = state.state_name\nmountain.state_name = state.state_name\nriver.traverse = state.state_name\nmatched contents : None",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( Greenland )\nairlines.callsign ( GREENLAND )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.title ( Balls to the Wall )\ntrack.name ( Balls to the Wall )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_log_id ( 3 )\nproduct.product_id ( 3 )\nstaff.staff_id ( 3 )\nproblems.problem_id ( 3 )\nproblems.closure_authorised_by_staff_id ( 3 )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( Canada )\nairlines.country ( Canada )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nhall_of_fame.category ( Player )\nplayer.name_first ( Count )\nplayer.name_last ( Hall )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Alice )\nperson.gender ( male )\nperson.job ( doctor )\npersonfriend.name ( Alice )\npersonfriend.friend ( Alice )",
  "database schema :\ntable roles , columns = [ roles.role_code ( varchar(15) | primary key ) , roles.role_description ( varchar(80) ) ]\ntable users , columns = [ users.user_id ( integer | primary key ) , users.role_code ( varchar(15) ) , users.user_name ( varchar(40) ) , users.user_login ( varchar(40) ) , users.password ( varchar(40) ) ]\ntable document_structures , columns = [ document_structures.document_structure_code ( varchar(15) | primary key ) , document_structures.parent_document_structure_code ( varchar(15) ) , document_structures.document_structure_description ( varchar(80) ) ]\ntable functional_areas , columns = [ functional_areas.functional_area_code ( varchar(15) | primary key ) , functional_areas.parent_functional_area_code ( varchar(15) ) , functional_areas.functional_area_description ( varchar(80) ) ]\ntable images , columns = [ images.image_id ( integer | primary key ) , images.image_alt_text ( varchar(80) ) , images.image_name ( varchar(40) ) , images.image_url ( varchar(255) ) ]\ntable documents , columns = [ documents.document_code ( varchar(15) | primary key ) , documents.document_structure_code ( varchar(15) ) , documents.document_type_code ( varchar(15) ) , documents.access_count ( integer ) , documents.document_name ( varchar(80) ) ]\ntable document_functional_areas , columns = [ document_functional_areas.document_code ( varchar(15) ) , document_functional_areas.functional_area_code ( varchar(15) ) ]\ntable document_sections , columns = [ document_sections.section_id ( integer | primary key ) , document_sections.document_code ( varchar(15) ) , document_sections.section_sequence ( integer ) , document_sections.section_code ( varchar(20) ) , document_sections.section_title ( varchar(80) ) ]\ntable document_sections_images , columns = [ document_sections_images.section_id ( integer | primary key ) , document_sections_images.image_id ( integer | primary key ) ]\nforeign keys :\nusers.role_code = roles.role_code\ndocuments.document_structure_code = document_structures.document_structure_code\ndocument_functional_areas.functional_area_code = functional_areas.functional_area_code\ndocument_functional_areas.document_code = documents.document_code\ndocument_sections.document_code = documents.document_code\ndocument_sections_images.image_id = images.image_id\ndocument_sections_images.section_id = document_sections.section_id\nmatched contents :\nusers.user_id ( 4 )\nimages.image_id ( 4 )\ndocument_sections_images.image_id ( 4 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents : None",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.title ( Pop )\ngenre.name ( Pop )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\ncustomer.acc_type ( saving )",
  "database schema :\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) ]\ntable participants , columns = [ participants.participant_id ( integer | primary key ) , participants.participant_type_code ( char(15) ) , participants.participant_details ( varchar(255) ) ]\ntable events , columns = [ events.event_id ( integer | primary key ) , events.service_id ( integer ) , events.event_details ( varchar(255) ) ]\ntable participants_in_events , columns = [ participants_in_events.event_id ( integer | primary key ) , participants_in_events.participant_id ( integer | primary key ) ]\nforeign keys :\nevents.service_id = services.service_id\nparticipants_in_events.event_id = events.event_id\nparticipants_in_events.participant_id = participants.participant_id\nmatched contents : None",
  "database schema :\ntable buildings , columns = [ buildings.id ( int | primary key ) , buildings.name ( text ) , buildings.city ( text ) , buildings.height ( int ) , buildings.stories ( int ) , buildings.status ( text ) ]\ntable companies , columns = [ companies.id ( int | primary key ) , companies.name ( text ) , companies.headquarters ( text ) , companies.industry ( text ) , companies.sales_billion ( real ) , companies.profits_billion ( real ) , companies.assets_billion ( real ) , companies.market_value_billion ( text ) ]\ntable office_locations , columns = [ office_locations.building_id ( int | primary key ) , office_locations.company_id ( int | primary key ) , office_locations.move_in_year ( int ) ]\nforeign keys :\noffice_locations.company_id = companies.id\noffice_locations.building_id = buildings.id\nmatched contents :\nbuildings.id ( 2 )\ncompanies.id ( 2 )\noffice_locations.building_id ( 2 )\noffice_locations.company_id ( 2 )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.country ( text ) , people.is_male ( text ) , people.age ( int ) ]\ntable church , columns = [ church.church_id ( int | primary key ) , church.name ( text ) , church.organized_by ( text ) , church.open_date ( int ) , church.continuation_of ( text ) ]\ntable wedding , columns = [ wedding.church_id ( int | primary key ) , wedding.male_id ( int | primary key ) , wedding.female_id ( int | primary key ) , wedding.year ( int ) ]\nforeign keys :\nwedding.female_id = people.people_id\nwedding.male_id = people.people_id\nwedding.church_id = church.church_id\nmatched contents :\nwedding.year ( 2014 )",
  "database schema :\ntable election , columns = [ election.election_id ( int | primary key ) , election.representative_id ( int ) , election.date ( text ) , election.votes ( real ) , election.vote_percent ( real ) , election.seats ( real ) , election.place ( real ) ]\ntable representative , columns = [ representative.representative_id ( int | primary key ) , representative.name ( text ) , representative.state ( text ) , representative.party ( text ) , representative.lifespan ( text ) ]\nforeign keys :\nelection.representative_id = representative.representative_id\nmatched contents : None",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\norders.order_status ( Packing )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\ncustomer_orders.order_status_code ( Cancelled )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( San Francisco )\ncampuses.county ( San Francisco )\ncsu_fees.campusfee ( 2001 )\ndegrees.year ( 2001 )\nenrollments.year ( 2001 )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nsection.semester ( Spring , Fall )\nsection.year ( 2009 , 2010 )\nteaches.semester ( Spring , Fall )\nteaches.year ( 2009 , 2010 )\nstudent.name ( Fall )\ntakes.semester ( Spring , Fall )\ntakes.year ( 2009 , 2010 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.town_city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( varchar(15) ) , services.service_name ( varchar(80) ) , services.service_descriptio ( varchar(255) ) ]\ntable forms , columns = [ forms.form_id ( integer | primary key ) , forms.form_type_code ( varchar(15) ) , forms.service_id ( integer ) , forms.form_number ( varchar(50) ) , forms.form_name ( varchar(80) ) , forms.form_description ( varchar(255) ) ]\ntable individuals , columns = [ individuals.individual_id ( integer | primary key ) , individuals.individual_first_name ( varchar(80) ) , individuals.individual_middle_name ( varchar(80) ) , individuals.inidividual_phone ( varchar(80) ) , individuals.individual_email ( varchar(80) ) , individuals.individual_address ( varchar(255) ) , individuals.individual_last_name ( varchar(80) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.date_formed ( datetime ) , organizations.organization_name ( varchar(255) ) , organizations.uk_vat_number ( varchar(20) ) ]\ntable parties , columns = [ parties.party_id ( integer | primary key ) , parties.payment_method_code ( varchar(15) ) , parties.party_phone ( varchar(80) ) , parties.party_email ( varchar(80) ) ]\ntable organization_contact_individuals , columns = [ organization_contact_individuals.individual_id ( integer | primary key ) , organization_contact_individuals.organization_id ( integer | primary key ) , organization_contact_individuals.date_contact_from ( datetime ) , organization_contact_individuals.date_contact_to ( datetime ) ]\ntable party_addresses , columns = [ party_addresses.party_id ( integer | primary key ) , party_addresses.address_id ( integer | primary key ) , party_addresses.date_address_from ( datetime ) , party_addresses.address_type_code ( varchar(15) ) , party_addresses.date_address_to ( datetime ) ]\ntable party_forms , columns = [ party_forms.party_id ( integer | primary key ) , party_forms.form_id ( integer | primary key ) , party_forms.date_completion_started ( datetime ) , party_forms.form_status_code ( varchar(15) ) , party_forms.date_fully_completed ( datetime ) ]\ntable party_services , columns = [ party_services.booking_id ( integer ) , party_services.customer_id ( integer ) , party_services.service_id ( integer ) , party_services.service_datetime ( datetime ) , party_services.booking_made_date ( datetime ) ]\nforeign keys :\nforms.service_id = services.service_id\norganization_contact_individuals.individual_id = individuals.individual_id\norganization_contact_individuals.organization_id = organizations.organization_id\nparty_addresses.party_id = parties.party_id\nparty_addresses.address_id = addresses.address_id\nparty_forms.form_id = forms.form_id\nparty_forms.party_id = parties.party_id\nparty_services.customer_id = parties.party_id\nparty_services.service_id = services.service_id\nmatched contents : None",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents : None",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(50) ) , customers.customer_middle_initial ( varchar(1) ) , customers.customer_last_name ( varchar(50) ) , customers.gender ( varchar(1) ) , customers.email_address ( varchar(255) ) , customers.login_name ( varchar(80) ) , customers.login_password ( varchar(20) ) , customers.phone_number ( varchar(255) ) , customers.town_city ( varchar(50) ) , customers.state_county_province ( varchar(50) ) , customers.country ( varchar(50) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.order_id ( integer ) , invoices.invoice_date ( datetime ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.date_account_opened ( datetime ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable product_categories , columns = [ product_categories.production_type_code ( varchar(15) | primary key ) , product_categories.product_type_description ( varchar(80) ) , product_categories.vat_rating ( decimal(19,4) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.production_type_code ( varchar(15) ) , products.unit_price ( decimal(19,4) ) , products.product_name ( varchar(80) ) , products.product_color ( varchar(20) ) , products.product_size ( varchar(20) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.invoice_number ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( decimal(19,4) ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.product_quantity ( varchar(50) ) , order_items.other_order_item_details ( varchar(255) ) ]\ntable invoice_line_items , columns = [ invoice_line_items.order_item_id ( integer ) , invoice_line_items.invoice_number ( integer ) , invoice_line_items.product_id ( integer ) , invoice_line_items.product_title ( varchar(80) ) , invoice_line_items.product_quantity ( varchar(50) ) , invoice_line_items.product_price ( decimal(19,4) ) , invoice_line_items.derived_product_cost ( decimal(19,4) ) , invoice_line_items.derived_vat_payable ( decimal(19,4) ) , invoice_line_items.derived_total_cost ( decimal(19,4) ) ]\nforeign keys :\norders.customer_id = customers.customer_id\ninvoices.order_id = orders.order_id\naccounts.customer_id = customers.customer_id\nproducts.production_type_code = product_categories.production_type_code\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.invoice_number = invoices.invoice_number\norder_items.order_id = orders.order_id\norder_items.product_id = products.product_id\ninvoice_line_items.product_id = products.product_id\ninvoice_line_items.invoice_number = invoices.invoice_number\ninvoice_line_items.order_item_id = order_items.order_item_id\nmatched contents :\ncustomers.customer_id ( 2 )\norders.customer_id ( 2 )\ninvoices.invoice_number ( 2 )\naccounts.account_id ( 2 )\nfinancial_transactions.transaction_id ( 2 )\nfinancial_transactions.invoice_number ( 2 )\norder_items.order_item_id ( 2 )\norder_items.order_id ( 2 )\norder_items.product_quantity ( 2 )\ninvoice_line_items.product_quantity ( 2 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2008 )\nappearances.year ( 2008 )\nbatting.year ( 2008 )\nbatting_postseason.year ( 2008 )\nfielding.year ( 2008 )\nfielding.inn_outs ( 2008 )\nfielding_postseason.year ( 2008 )\nhall_of_fame.yearid ( 2008 )\nhome_game.year ( 2008 )\nmanager.year ( 2008 )\nplayer.death_city ( Park )\nplayer.name_last ( Peoples )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\nproject_staff.role_code ( leader )\nproject_staff.date_from ( 1989-04-24 23:51:54 )\nstaff_roles.role_code ( leader )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.rank_in_series ( int ) , film.number_in_season ( int ) , film.title ( text ) , film.directed_by ( text ) , film.original_air_date ( text ) , film.production_code ( text ) ]\ntable cinema , columns = [ cinema.cinema_id ( int | primary key ) , cinema.name ( text ) , cinema.openning_year ( int ) , cinema.capacity ( int ) , cinema.location ( text ) ]\ntable schedule , columns = [ schedule.cinema_id ( int | primary key ) , schedule.film_id ( int | primary key ) , schedule.date ( text ) , schedule.show_times_per_day ( int ) , schedule.price ( float ) ]\nforeign keys :\nschedule.cinema_id = cinema.cinema_id\nschedule.film_id = film.film_id\nmatched contents : None",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.city ( new york city )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.city ( New York , York )\nairports.iata ( NEW )\nairlines.callsign ( NEW YORK , CITY )",
  "database schema :\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(20) ) , products.product_price ( decimal(19,4) ) , products.product_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(10) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.date_became_customer ( datetime ) ]\ntable regular_orders , columns = [ regular_orders.regular_order_id ( integer | primary key ) , regular_orders.distributer_id ( integer ) ]\ntable regular_order_products , columns = [ regular_order_products.regular_order_id ( integer ) , regular_order_products.product_id ( integer ) ]\ntable actual_orders , columns = [ actual_orders.actual_order_id ( integer | primary key ) , actual_orders.order_status_code ( varchar(10) ) , actual_orders.regular_order_id ( integer ) , actual_orders.actual_order_date ( datetime ) ]\ntable actual_order_products , columns = [ actual_order_products.actual_order_id ( integer ) , actual_order_products.product_id ( integer ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_from ( datetime ) , customer_addresses.address_type ( varchar(10) ) , customer_addresses.date_to ( datetime ) ]\ntable delivery_routes , columns = [ delivery_routes.route_id ( integer | primary key ) , delivery_routes.route_name ( varchar(50) ) , delivery_routes.other_route_details ( varchar(255) ) ]\ntable delivery_route_locations , columns = [ delivery_route_locations.location_code ( varchar(10) | primary key ) , delivery_route_locations.route_id ( integer ) , delivery_route_locations.location_address_id ( integer ) , delivery_route_locations.location_name ( varchar(50) ) ]\ntable trucks , columns = [ trucks.truck_id ( integer | primary key ) , trucks.truck_licence_number ( varchar(20) ) , trucks.truck_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.employee_address_id ( integer ) , employees.employee_name ( varchar(80) ) , employees.employee_phone ( varchar(80) ) ]\ntable order_deliveries , columns = [ order_deliveries.location_code ( varchar(10) ) , order_deliveries.actual_order_id ( integer ) , order_deliveries.delivery_status_code ( varchar(10) ) , order_deliveries.driver_employee_id ( integer ) , order_deliveries.truck_id ( integer ) , order_deliveries.delivery_date ( datetime ) ]\nforeign keys :\nregular_orders.distributer_id = customers.customer_id\nregular_order_products.regular_order_id = regular_orders.regular_order_id\nregular_order_products.product_id = products.product_id\nactual_orders.regular_order_id = regular_orders.regular_order_id\nactual_order_products.actual_order_id = actual_orders.actual_order_id\nactual_order_products.product_id = products.product_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ndelivery_route_locations.route_id = delivery_routes.route_id\ndelivery_route_locations.location_address_id = addresses.address_id\nemployees.employee_address_id = addresses.address_id\norder_deliveries.driver_employee_id = employees.employee_id\norder_deliveries.location_code = delivery_route_locations.location_code\norder_deliveries.actual_order_id = actual_orders.actual_order_id\norder_deliveries.truck_id = trucks.truck_id\nmatched contents :\naddresses.address_id ( 5 )\ncustomers.customer_id ( 5 )\nactual_orders.actual_order_id ( 5 )\nactual_order_products.actual_order_id ( 5 )\nactual_order_products.product_id ( 5 )\ncustomer_addresses.customer_id ( 5 )\ncustomer_addresses.address_id ( 5 )\ndelivery_routes.route_id ( 5 )\ndelivery_route_locations.location_address_id ( 5 )\nemployees.employee_address_id ( 5 )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents : None",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.name ( Numbers )\nwine.drink ( 2010 )",
  "database schema :\ntable festival_detail , columns = [ festival_detail.festival_id ( int | primary key ) , festival_detail.festival_name ( text ) , festival_detail.chair_name ( text ) , festival_detail.location ( text ) , festival_detail.year ( int ) , festival_detail.num_of_audience ( int ) ]\ntable artwork , columns = [ artwork.artwork_id ( int | primary key ) , artwork.type ( text ) , artwork.name ( text ) ]\ntable nomination , columns = [ nomination.artwork_id ( int | primary key ) , nomination.festival_id ( int | primary key ) , nomination.result ( text ) ]\nforeign keys :\nnomination.festival_id = festival_detail.festival_id\nnomination.artwork_id = artwork.artwork_id\nmatched contents :\nnomination.result ( Nominated )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.town_city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( varchar(15) ) , services.service_name ( varchar(80) ) , services.service_descriptio ( varchar(255) ) ]\ntable forms , columns = [ forms.form_id ( integer | primary key ) , forms.form_type_code ( varchar(15) ) , forms.service_id ( integer ) , forms.form_number ( varchar(50) ) , forms.form_name ( varchar(80) ) , forms.form_description ( varchar(255) ) ]\ntable individuals , columns = [ individuals.individual_id ( integer | primary key ) , individuals.individual_first_name ( varchar(80) ) , individuals.individual_middle_name ( varchar(80) ) , individuals.inidividual_phone ( varchar(80) ) , individuals.individual_email ( varchar(80) ) , individuals.individual_address ( varchar(255) ) , individuals.individual_last_name ( varchar(80) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.date_formed ( datetime ) , organizations.organization_name ( varchar(255) ) , organizations.uk_vat_number ( varchar(20) ) ]\ntable parties , columns = [ parties.party_id ( integer | primary key ) , parties.payment_method_code ( varchar(15) ) , parties.party_phone ( varchar(80) ) , parties.party_email ( varchar(80) ) ]\ntable organization_contact_individuals , columns = [ organization_contact_individuals.individual_id ( integer | primary key ) , organization_contact_individuals.organization_id ( integer | primary key ) , organization_contact_individuals.date_contact_from ( datetime ) , organization_contact_individuals.date_contact_to ( datetime ) ]\ntable party_addresses , columns = [ party_addresses.party_id ( integer | primary key ) , party_addresses.address_id ( integer | primary key ) , party_addresses.date_address_from ( datetime ) , party_addresses.address_type_code ( varchar(15) ) , party_addresses.date_address_to ( datetime ) ]\ntable party_forms , columns = [ party_forms.party_id ( integer | primary key ) , party_forms.form_id ( integer | primary key ) , party_forms.date_completion_started ( datetime ) , party_forms.form_status_code ( varchar(15) ) , party_forms.date_fully_completed ( datetime ) ]\ntable party_services , columns = [ party_services.booking_id ( integer ) , party_services.customer_id ( integer ) , party_services.service_id ( integer ) , party_services.service_datetime ( datetime ) , party_services.booking_made_date ( datetime ) ]\nforeign keys :\nforms.service_id = services.service_id\norganization_contact_individuals.individual_id = individuals.individual_id\norganization_contact_individuals.organization_id = organizations.organization_id\nparty_addresses.party_id = parties.party_id\nparty_addresses.address_id = addresses.address_id\nparty_forms.form_id = forms.form_id\nparty_forms.party_id = parties.party_id\nparty_services.customer_id = parties.party_id\nparty_services.service_id = services.service_id\nmatched contents :\naddresses.address_id ( 3 )\nforms.form_id ( 3 )\nforms.service_id ( 3 )\nindividuals.individual_id ( 3 )\norganizations.organization_id ( 3 )\nparties.party_id ( 3 )\norganization_contact_individuals.organization_id ( 3 )\nparty_addresses.party_id ( 3 )\nparty_forms.form_id ( 3 )\nparty_services.booking_id ( 3 )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_colors.color_description ( white )\nref_product_categories.unit_of_measure ( Handful )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\ncourses.course_name ( Spanish )\ncourses.course_description ( Spanish )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\naddresses.zip_postcode ( 197 )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\nemployees.first_name ( Payam )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nrating.stars ( 3 )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Dan , Alice )\npersonfriend.name ( Alice )\npersonfriend.friend ( Dan , Alice )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.country ( Spain )\nraces.year ( 2017 )\nseasons.year ( 2017 )\nresults.resultid ( 2017 )\nconstructorresults.constructorresultsid ( 2017 )\nqualifying.qualifyid ( 2017 )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\naddresses.state_province_county ( Texas )",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents :\ndepartment.name ( State )",
  "database schema :\ntable premises , columns = [ premises.premise_id ( integer | primary key ) , premises.premises_type ( varchar(15) ) , premises.premise_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_category ( varchar(15) ) , products.product_name ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_login ( varchar(80) ) , customers.customer_password ( varchar(10) ) ]\ntable mailshot_campaigns , columns = [ mailshot_campaigns.mailshot_id ( integer | primary key ) , mailshot_campaigns.product_category ( varchar(15) ) , mailshot_campaigns.mailshot_name ( varchar(80) ) , mailshot_campaigns.mailshot_start_date ( datetime ) , mailshot_campaigns.mailshot_end_date ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.premise_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type_code ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(15) ) , customer_orders.shipping_method_code ( varchar(15) ) , customer_orders.order_placed_datetime ( datetime ) , customer_orders.order_delivered_datetime ( datetime ) , customer_orders.order_shipping_charges ( varchar(255) ) ]\ntable mailshot_customers , columns = [ mailshot_customers.mailshot_id ( integer ) , mailshot_customers.customer_id ( integer ) , mailshot_customers.outcome_code ( varchar(15) ) , mailshot_customers.mailshot_customer_date ( datetime ) ]\ntable order_items , columns = [ order_items.item_id ( integer ) , order_items.order_item_status_code ( varchar(15) ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.item_status_code ( varchar(15) ) , order_items.item_delivered_datetime ( datetime ) , order_items.item_order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.premise_id = premises.premise_id\ncustomer_orders.customer_id = customers.customer_id\nmailshot_customers.mailshot_id = mailshot_campaigns.mailshot_id\nmailshot_customers.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\nmailshot_customers.outcome_code ( No Response , Order )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.albumid ( 10 )\nalbum.artistid ( 10 )\nartist.artistid ( 10 )\ncustomer.customerid ( 10 )\ngenre.genreid ( 10 )\ninvoice.invoiceid ( 10 )\ninvoice.customerid ( 10 )\ninvoiceline.invoicelineid ( 10 )\ninvoiceline.invoiceid ( 10 )\ninvoiceline.trackid ( 10 )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_buildings.building_description ( Flat )\napartments.apt_type_code ( Flat )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nvisitors.tourist_details ( Vincent , Vivian )",
  "database schema :\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_name ( text ) , region.date ( text ) , region.label ( text ) , region.format ( text ) , region.catalogue ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.minister ( text ) , party.took_office ( text ) , party.left_office ( text ) , party.region_id ( int ) , party.party_name ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.member_name ( text ) , member.party_id ( text ) , member.in_office ( text ) ]\ntable party_events , columns = [ party_events.event_id ( int | primary key ) , party_events.event_name ( text ) , party_events.party_id ( int ) , party_events.member_in_charge_id ( int ) ]\nforeign keys :\nparty.region_id = region.region_id\nmember.party_id = party.party_id\nparty_events.member_in_charge_id = member.member_id\nparty_events.party_id = party.party_id\nmatched contents :\nregion.region_id ( 3 , 1 )\nparty.party_id ( 3 , 1 )\nparty.region_id ( 3 , 1 )\nparty.party_name ( 3 )\nmember.member_id ( 3 , 1 )\nmember.party_id ( 3 , 1 )\nparty_events.event_id ( 3 , 1 )\nparty_events.party_id ( 3 , 1 )\nparty_events.member_in_charge_id ( 3 )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.classroom ( 110 )\nteachers.classroom ( 110 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents : None",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.grade ( 0 )",
  "database schema :\ntable airport , columns = [ airport.id ( int | primary key ) , airport.city ( text ) , airport.country ( text ) , airport.iata ( text ) , airport.icao ( text ) , airport.name ( text ) ]\ntable operate_company , columns = [ operate_company.id ( int | primary key ) , operate_company.name ( text ) , operate_company.type ( text ) , operate_company.principal_activities ( text ) , operate_company.incorporated_in ( text ) , operate_company.group_equity_shareholding ( real ) ]\ntable flight , columns = [ flight.id ( int | primary key ) , flight.vehicle_flight_number ( text ) , flight.date ( text ) , flight.pilot ( text ) , flight.velocity ( real ) , flight.altitude ( real ) , flight.airport_id ( int ) , flight.company_id ( int ) ]\nforeign keys :\nflight.company_id = operate_company.id\nflight.airport_id = airport.id\nmatched contents : None",
  "database schema :\ntable device , columns = [ device.device_id ( int | primary key ) , device.device ( text ) , device.carrier ( text ) , device.package_version ( text ) , device.applications ( text ) , device.software_platform ( text ) ]\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.shop_name ( text ) , shop.location ( text ) , shop.open_date ( text ) , shop.open_year ( int ) ]\ntable stock , columns = [ stock.shop_id ( int | primary key ) , stock.device_id ( int | primary key ) , stock.quantity ( int ) ]\nforeign keys :\nstock.device_id = device.device_id\nstock.shop_id = shop.shop_id\nmatched contents : None",
  "database schema :\ntable building , columns = [ building.building_id ( text | primary key ) , building.name ( text ) , building.street_address ( text ) , building.years_as_tallest ( text ) , building.height_feet ( int ) , building.floors ( int ) ]\ntable institution , columns = [ institution.institution_id ( text | primary key ) , institution.institution ( text ) , institution.location ( text ) , institution.founded ( real ) , institution.type ( text ) , institution.enrollment ( int ) , institution.team ( text ) , institution.primary_conference ( text ) , institution.building_id ( text ) ]\ntable protein , columns = [ protein.common_name ( text | primary key ) , protein.protein_name ( text ) , protein.divergence_from_human_lineage ( real ) , protein.accession_number ( text ) , protein.sequence_length ( real ) , protein.sequence_identity_to_human_protein ( text ) , protein.institution_id ( text ) ]\nforeign keys :\ninstitution.building_id = building.building_id\nprotein.institution_id = institution.institution_id\nmatched contents :\ninstitution.type ( Private )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\ntrip.zip_code ( 94107 )\nweather.events ( Fog , Rain , rain )\nweather.zip_code ( 94107 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents : None",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ncourse.credits ( 3 )\nsection.sec_id ( 3 )\nteaches.sec_id ( 3 )\nstudent.tot_cred ( 3 )\ntakes.sec_id ( 3 )",
  "database schema :\ntable driver , columns = [ driver.driver_id ( int | primary key ) , driver.name ( text ) , driver.party ( text ) , driver.home_city ( text ) , driver.age ( int ) ]\ntable school , columns = [ school.school_id ( int | primary key ) , school.grade ( text ) , school.school ( text ) , school.location ( text ) , school.type ( text ) ]\ntable school_bus , columns = [ school_bus.school_id ( int | primary key ) , school_bus.driver_id ( int | primary key ) , school_bus.years_working ( int ) , school_bus.if_full_time ( bool ) ]\nforeign keys :\nschool_bus.driver_id = driver.driver_id\nschool_bus.school_id = school.school_id\nmatched contents :\ndriver.home_city ( Hartford )\ndriver.age ( 40 )",
  "database schema :\ntable entrepreneur , columns = [ entrepreneur.entrepreneur_id ( int | primary key ) , entrepreneur.people_id ( int ) , entrepreneur.company ( text ) , entrepreneur.money_requested ( real ) , entrepreneur.investor ( text ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.height ( real ) , people.weight ( real ) , people.date_of_birth ( text ) ]\nforeign keys :\nentrepreneur.people_id = people.people_id\nmatched contents : None",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ngenre.name ( Rock )\ntrack.name ( Belong )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.country ( Belgium , France )\nconstructors.nationality ( Belgium )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\nbridge.name ( Rainbow Bridge , Kolob Arch )",
  "database schema :\ntable station , columns = [ station.station_id ( int | primary key ) , station.name ( text ) , station.annual_entry_exit ( real ) , station.annual_interchanges ( real ) , station.total_passengers ( real ) , station.location ( text ) , station.main_services ( text ) , station.number_of_platforms ( int ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.name ( text ) , train.time ( text ) , train.service ( text ) ]\ntable train_station , columns = [ train_station.train_id ( int | primary key ) , train_station.station_id ( int | primary key ) ]\nforeign keys :\ntrain_station.station_id = station.station_id\ntrain_station.train_id = train.train_id\nmatched contents :\nstation.number_of_platforms ( 15 )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nclass.crs_code ( QM-261 )\ncourse.crs_code ( QM-261 )",
  "database schema :\ntable customer_master_index , columns = [ customer_master_index.master_customer_id ( integer | primary key ) , customer_master_index.cmi_details ( varchar(255) ) ]\ntable cmi_cross_references , columns = [ cmi_cross_references.cmi_cross_ref_id ( integer | primary key | comment : cmi cross reference id ) , cmi_cross_references.master_customer_id ( integer ) , cmi_cross_references.source_system_code ( char(15) ) ]\ntable council_tax , columns = [ council_tax.council_tax_id ( integer | primary key ) , council_tax.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable business_rates , columns = [ business_rates.business_rates_id ( integer | primary key ) , business_rates.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable benefits_overpayments , columns = [ benefits_overpayments.council_tax_id ( integer | primary key ) , benefits_overpayments.cmi_cross_ref_id ( integer ) ]\ntable parking_fines , columns = [ parking_fines.council_tax_id ( integer | primary key ) , parking_fines.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable rent_arrears , columns = [ rent_arrears.council_tax_id ( integer | primary key ) , rent_arrears.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable electoral_register , columns = [ electoral_register.electoral_register_id ( integer | primary key ) , electoral_register.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\nforeign keys :\ncmi_cross_references.master_customer_id = customer_master_index.master_customer_id\ncouncil_tax.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbusiness_rates.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbenefits_overpayments.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nparking_fines.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nrent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nelectoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nmatched contents :\ncmi_cross_references.source_system_code ( Electoral , Tax )",
  "database schema :\ntable book_club , columns = [ book_club.book_club_id ( int | primary key ) , book_club.year ( int ) , book_club.author_or_editor ( text ) , book_club.book_title ( text ) , book_club.publisher ( text ) , book_club.category ( text ) , book_club.result ( text ) ]\ntable movie , columns = [ movie.movie_id ( int | primary key ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) , movie.budget_million ( real ) , movie.gross_worldwide ( int ) ]\ntable culture_company , columns = [ culture_company.company_name ( text | primary key ) , culture_company.type ( text ) , culture_company.incorporated_in ( text ) , culture_company.group_equity_shareholding ( real ) , culture_company.book_club_id ( text ) , culture_company.movie_id ( text ) ]\nforeign keys :\nculture_company.movie_id = movie.movie_id\nculture_company.book_club_id = book_club.book_club_id\nmatched contents :\nbook_club.publisher ( Alyson )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nteachers.lastname ( ONDERSMA )\nteachers.firstname ( LORIA )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(80) ) , addresses.line_2 ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( char(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable people , columns = [ people.person_id ( integer | primary key ) , people.first_name ( varchar(255) ) , people.middle_name ( varchar(255) ) , people.last_name ( varchar(255) ) , people.cell_mobile_number ( varchar(40) ) , people.email_address ( varchar(40) ) , people.login_name ( varchar(40) ) , people.password ( varchar(40) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.student_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( varchar(100) | primary key ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable people_addresses , columns = [ people_addresses.person_address_id ( integer | primary key ) , people_addresses.person_id ( integer ) , people_addresses.address_id ( integer ) , people_addresses.date_from ( datetime ) , people_addresses.date_to ( datetime ) ]\ntable student_course_registrations , columns = [ student_course_registrations.student_id ( integer | primary key ) , student_course_registrations.course_id ( integer | primary key ) , student_course_registrations.registration_date ( datetime ) ]\ntable student_course_attendance , columns = [ student_course_attendance.student_id ( integer | primary key ) , student_course_attendance.course_id ( integer | primary key ) , student_course_attendance.date_of_attendance ( datetime ) ]\ntable candidates , columns = [ candidates.candidate_id ( integer | primary key ) , candidates.candidate_details ( varchar(255) ) ]\ntable candidate_assessments , columns = [ candidate_assessments.candidate_id ( integer | primary key ) , candidate_assessments.qualification ( char(15) | primary key ) , candidate_assessments.assessment_date ( datetime ) , candidate_assessments.asessment_outcome_code ( char(15) ) ]\nforeign keys :\nstudents.student_id = people.person_id\npeople_addresses.address_id = addresses.address_id\npeople_addresses.person_id = people.person_id\nstudent_course_registrations.course_id = courses.course_id\nstudent_course_registrations.student_id = students.student_id\nstudent_course_attendance.student_id = student_course_registrations.student_id\nstudent_course_attendance.course_id = student_course_registrations.course_id\ncandidates.candidate_id = people.person_id\ncandidate_assessments.candidate_id = candidates.candidate_id\nmatched contents :\ncourses.course_name ( statistics )\ncourses.course_description ( statistics )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nfaculty.rank ( Professor )\nfaculty.building ( NEB )\ndepartment.building ( NEB )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\ndorm_amenity.amenity_name ( TV Lounge , Study Room )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\naddresses.address_id ( 2 )\nstaff.staff_id ( 2 )\nstaff.staff_address_id ( 2 )\ncustomers.customer_id ( 2 )\ncustomers.customer_address_id ( 2 )\ncustomer_payments.customer_id ( 2 )\nlessons.lesson_id ( 2 )\nlessons.customer_id ( 2 )\nlessons.vehicle_id ( 2 )\nlessons.lesson_time ( 2 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\nstaff_department_assignments.job_title_code ( Department Manager )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents :\nstudent.lname ( Smith )\nstudent.fname ( Linda )\nrestaurant.resname ( Subway )",
  "database schema :\ntable perpetrator , columns = [ perpetrator.perpetrator_id ( int | primary key ) , perpetrator.people_id ( int ) , perpetrator.date ( text ) , perpetrator.year ( real ) , perpetrator.location ( text ) , perpetrator.country ( text ) , perpetrator.killed ( int ) , perpetrator.injured ( int ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.height ( real ) , people.weight ( real ) , people.`home town` ( text ) ]\nforeign keys :\nperpetrator.people_id = people.people_id\nmatched contents :\nperpetrator.country ( China , Japan )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_budget_codes.budget_type_code ( GV , SF )\ndocuments_with_expenses.budget_type_code ( GV , SF )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents : None",
  "database schema :\ntable accounts , columns = [ accounts.custid ( bigint | primary key | comment : customer id ) , accounts.name ( varchar(64) ) ]\ntable savings , columns = [ savings.custid ( bigint | primary key | comment : customer id ) , savings.balance ( float ) ]\ntable checking , columns = [ checking.custid ( bigint | primary key | comment : customer id ) , checking.balance ( float ) ]\nforeign keys :\nsavings.custid = accounts.custid\nchecking.custid = accounts.custid\nmatched contents : None",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 60 )\nstatus.station_id ( 60 )\ntrip.start_station_id ( 60 )\ntrip.end_station_id ( 60 )\nweather.max_temperature_f ( 60 )\nweather.mean_temperature_f ( 60 )\nweather.max_dew_point_f ( 60 )\nweather.mean_dew_point_f ( 60 )\nweather.max_humidity ( 60 )\nweather.mean_humidity ( 60 )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents :\nstore.store_name ( Blackville )",
  "database schema :\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_name ( text ) , region.date ( text ) , region.label ( text ) , region.format ( text ) , region.catalogue ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.minister ( text ) , party.took_office ( text ) , party.left_office ( text ) , party.region_id ( int ) , party.party_name ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.member_name ( text ) , member.party_id ( text ) , member.in_office ( text ) ]\ntable party_events , columns = [ party_events.event_id ( int | primary key ) , party_events.event_name ( text ) , party_events.party_id ( int ) , party_events.member_in_charge_id ( int ) ]\nforeign keys :\nparty.region_id = region.region_id\nmember.party_id = party.party_id\nparty_events.member_in_charge_id = member.member_id\nparty_events.party_id = party.party_id\nmatched contents : None",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_budget_codes.budget_type_code ( SF )\ndocuments_with_expenses.budget_type_code ( SF )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\ndepartment.name ( Psychiatry , Surgery )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.circuitref ( monaco )\ncircuits.country ( Monaco )\nraces.year ( 2008 )\nraces.name ( Monaco Grand Prix )\ndrivers.driverref ( speed )\ndrivers.surname ( Speed )\nseasons.year ( 2008 )\nresults.resultid ( 2008 )\nconstructorresults.constructorresultsid ( 2008 )\nqualifying.qualifyid ( 2008 )",
  "database schema :\ntable pilot , columns = [ pilot.pilot_id ( int(11) | primary key ) , pilot.name ( varchar(50) ) , pilot.age ( int(11) ) ]\ntable aircraft , columns = [ aircraft.aircraft_id ( int(11) | primary key ) , aircraft.aircraft ( varchar(50) ) , aircraft.description ( varchar(50) ) , aircraft.max_gross_weight ( varchar(50) ) , aircraft.total_disk_area ( varchar(50) ) , aircraft.max_disk_loading ( varchar(50) ) ]\ntable match , columns = [ match.round ( real | primary key ) , match.location ( text ) , match.country ( text ) , match.date ( text ) , match.fastest_qualifying ( text ) , match.winning_pilot ( text ) , match.winning_aircraft ( text ) ]\ntable airport , columns = [ airport.airport_id ( int | primary key ) , airport.airport_name ( text ) , airport.total_passengers ( real ) , airport.%_change_2007 ( text ) , airport.international_passengers ( real ) , airport.domestic_passengers ( real ) , airport.transit_passengers ( real ) , airport.aircraft_movements ( real ) , airport.freight_metric_tonnes ( real ) ]\ntable airport_aircraft , columns = [ airport_aircraft.id ( int ) , airport_aircraft.airport_id ( int | primary key ) , airport_aircraft.aircraft_id ( int | primary key ) ]\nforeign keys :\nmatch.winning_pilot = pilot.pilot_id\nmatch.winning_aircraft = aircraft.aircraft_id\nairport_aircraft.aircraft_id = aircraft.aircraft_id\nairport_aircraft.airport_id = airport.airport_id\nmatched contents :\nairport.airport_name ( London Gatwick )",
  "database schema :\ntable third_party_companies , columns = [ third_party_companies.company_id ( integer | primary key ) , third_party_companies.company_type ( varchar(5) ) , third_party_companies.company_name ( varchar(255) ) , third_party_companies.company_address ( varchar(255) ) , third_party_companies.other_company_details ( varchar(255) ) ]\ntable maintenance_contracts , columns = [ maintenance_contracts.maintenance_contract_id ( integer | primary key ) , maintenance_contracts.maintenance_contract_company_id ( integer ) , maintenance_contracts.contract_start_date ( datetime ) , maintenance_contracts.contract_end_date ( datetime ) , maintenance_contracts.other_contract_details ( varchar(255) ) ]\ntable parts , columns = [ parts.part_id ( integer | primary key ) , parts.part_name ( varchar(255) ) , parts.chargeable_yn ( varchar(1) ) , parts.chargeable_amount ( varchar(20) ) , parts.other_part_details ( varchar(255) ) ]\ntable skills , columns = [ skills.skill_id ( integer | primary key ) , skills.skill_code ( varchar(20) ) , skills.skill_description ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_name ( varchar(255) ) , staff.gender ( varchar(1) ) , staff.other_staff_details ( varchar(255) ) ]\ntable assets , columns = [ assets.asset_id ( integer | primary key ) , assets.maintenance_contract_id ( integer ) , assets.supplier_company_id ( integer ) , assets.asset_details ( varchar(255) ) , assets.asset_make ( varchar(20) ) , assets.asset_model ( varchar(20) ) , assets.asset_acquired_date ( datetime ) , assets.asset_disposed_date ( datetime ) , assets.other_asset_details ( varchar(255) ) ]\ntable asset_parts , columns = [ asset_parts.asset_id ( integer ) , asset_parts.part_id ( integer ) ]\ntable maintenance_engineers , columns = [ maintenance_engineers.engineer_id ( integer | primary key ) , maintenance_engineers.company_id ( integer ) , maintenance_engineers.first_name ( varchar(50) ) , maintenance_engineers.last_name ( varchar(50) ) , maintenance_engineers.other_details ( varchar(255) ) ]\ntable engineer_skills , columns = [ engineer_skills.engineer_id ( integer ) , engineer_skills.skill_id ( integer ) ]\ntable fault_log , columns = [ fault_log.fault_log_entry_id ( integer | primary key ) , fault_log.asset_id ( integer ) , fault_log.recorded_by_staff_id ( integer ) , fault_log.fault_log_entry_datetime ( datetime ) , fault_log.fault_description ( varchar(255) ) , fault_log.other_fault_details ( varchar(255) ) ]\ntable engineer_visits , columns = [ engineer_visits.engineer_visit_id ( integer | primary key ) , engineer_visits.contact_staff_id ( integer ) , engineer_visits.engineer_id ( integer ) , engineer_visits.fault_log_entry_id ( integer ) , engineer_visits.fault_status ( varchar(10) ) , engineer_visits.visit_start_datetime ( datetime ) , engineer_visits.visit_end_datetime ( datetime ) , engineer_visits.other_visit_details ( varchar(255) ) ]\ntable part_faults , columns = [ part_faults.part_fault_id ( integer | primary key ) , part_faults.part_id ( integer ) , part_faults.fault_short_name ( varchar(20) ) , part_faults.fault_description ( varchar(255) ) , part_faults.other_fault_details ( varchar(255) ) ]\ntable fault_log_parts , columns = [ fault_log_parts.fault_log_entry_id ( integer ) , fault_log_parts.part_fault_id ( integer ) , fault_log_parts.fault_status ( varchar(10) ) ]\ntable skills_required_to_fix , columns = [ skills_required_to_fix.part_fault_id ( integer ) , skills_required_to_fix.skill_id ( integer ) ]\nforeign keys :\nmaintenance_contracts.maintenance_contract_company_id = third_party_companies.company_id\nassets.supplier_company_id = third_party_companies.company_id\nassets.maintenance_contract_id = maintenance_contracts.maintenance_contract_id\nasset_parts.asset_id = assets.asset_id\nasset_parts.part_id = parts.part_id\nmaintenance_engineers.company_id = third_party_companies.company_id\nengineer_skills.skill_id = skills.skill_id\nengineer_skills.engineer_id = maintenance_engineers.engineer_id\nfault_log.recorded_by_staff_id = staff.staff_id\nfault_log.asset_id = assets.asset_id\nengineer_visits.contact_staff_id = staff.staff_id\nengineer_visits.engineer_id = maintenance_engineers.engineer_id\nengineer_visits.fault_log_entry_id = fault_log.fault_log_entry_id\npart_faults.part_id = parts.part_id\nfault_log_parts.fault_log_entry_id = fault_log.fault_log_entry_id\nfault_log_parts.part_fault_id = part_faults.part_fault_id\nskills_required_to_fix.skill_id = skills.skill_id\nskills_required_to_fix.part_fault_id = part_faults.part_fault_id\nmatched contents :\nassets.asset_id ( 2 )\nassets.maintenance_contract_id ( 2 )\nassets.supplier_company_id ( 2 )\nasset_parts.asset_id ( 2 )\nasset_parts.part_id ( 2 )\nengineer_skills.engineer_id ( 2 )\nengineer_skills.skill_id ( 2 )\nengineer_visits.engineer_visit_id ( 2 )\nengineer_visits.contact_staff_id ( 2 )\nengineer_visits.fault_log_entry_id ( 2 )",
  "database schema :\ntable manufacturer , columns = [ manufacturer.manufacturer_id ( int | primary key ) , manufacturer.open_year ( real ) , manufacturer.name ( text ) , manufacturer.num_of_factories ( int ) , manufacturer.num_of_shops ( int ) ]\ntable furniture , columns = [ furniture.furniture_id ( int | primary key ) , furniture.name ( text ) , furniture.num_of_component ( int ) , furniture.market_rate ( real ) ]\ntable furniture_manufacte , columns = [ furniture_manufacte.manufacturer_id ( int | primary key ) , furniture_manufacte.furniture_id ( int | primary key ) , furniture_manufacte.price_in_dollar ( real ) ]\nforeign keys :\nfurniture_manufacte.furniture_id = furniture.furniture_id\nfurniture_manufacte.manufacturer_id = manufacturer.manufacturer_id\nmatched contents : None",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Zach )\nperson.gender ( female )\npersonfriend.name ( Zach )\npersonfriend.friend ( Zach )",
  "database schema :\ntable item , columns = [ item.i_id ( integer | primary key | comment : item id ) , item.title ( varchar(20) ) ]\ntable review , columns = [ review.a_id ( integer | primary key ) , review.u_id ( integer | comment : user id ) , review.i_id ( integer | comment : item id ) , review.rating ( integer ) , review.rank ( integer ) ]\ntable useracct , columns = [ useracct.u_id ( integer | primary key | comment : user id ) , useracct.name ( varchar(128) ) ]\ntable trust , columns = [ trust.source_u_id ( integer | comment : source user id ) , trust.target_u_id ( integer | comment : target user id ) , trust.trust ( integer ) ]\nforeign keys :\nreview.i_id = item.i_id\nreview.u_id = useracct.u_id\ntrust.target_u_id = useracct.u_id\ntrust.source_u_id = useracct.u_id\nmatched contents :\nitem.title ( orange )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents :\nstudent.age ( 18 )\nstudent.major ( 600 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\ncustomers.last_name ( Goodwin )\nlessons.lesson_status_code ( Completed )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( Iceland )\nairlines.country ( Iceland )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairlines.callsign ( Orbit )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( San Francisco )\ncampuses.county ( San Francisco )\ncsu_fees.year ( 1996 )\ndegrees.year ( 1996 )\nenrollments.year ( 1996 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ngenres.name ( Rock )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nloan.loan_type ( Mortgages , Auto )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.department_id ( 100 , 200 )\ndepartments.manager_id ( 100 , 200 )\nemployees.employee_id ( 100 , 200 )\nemployees.manager_id ( 100 )\nemployees.department_id ( 100 )\njob_history.employee_id ( 200 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ncustomer.city ( Edmonton )\nemployee.city ( Edmonton )\ninvoice.billingcity ( Edmonton )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nmusical.nominee ( Cleavant Derricks , Bob Fosse )\nmusical.result ( Nominated )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nfiles.formats ( mp4 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.albumid ( 3 )\nalbum.artistid ( 3 )\nartist.artistid ( 3 )\ncustomer.customerid ( 3 )\ncustomer.supportrepid ( 3 )\nemployee.employeeid ( 3 )\ngenre.genreid ( 3 )\ninvoice.invoiceid ( 3 )\ninvoice.customerid ( 3 )\ninvoiceline.invoiceid ( 3 )\ntrack.name ( Please )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.circuitid ( 20 , 1 )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\nconstructors.constructorid ( 20 , 1 )\nconstructorstandings.constructorstandingsid ( 20 , 1 )\nconstructorstandings.raceid ( 20 , 1 )\nconstructorstandings.constructorid ( 20 , 1 )\nconstructorstandings.position ( 20 , 1 )\nconstructorstandings.positiontext ( 20 , 1 )\nconstructorresults.constructorresultsid ( 20 , 1 )\nconstructorresults.raceid ( 20 , 1 )\nconstructorresults.constructorid ( 20 , 1 )",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents :\ndepartment.department_id ( 3 )\ndepartment.name ( State )\ndepartment.ranking ( 3 )\nhead.head_id ( 3 )\nmanagement.head_id ( 3 )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents : None",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.rating ( 9 )",
  "database schema :\ntable station , columns = [ station.station_id ( int | primary key ) , station.name ( text ) , station.annual_entry_exit ( real ) , station.annual_interchanges ( real ) , station.total_passengers ( real ) , station.location ( text ) , station.main_services ( text ) , station.number_of_platforms ( int ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.name ( text ) , train.time ( text ) , train.service ( text ) ]\ntable train_station , columns = [ train_station.train_id ( int | primary key ) , train_station.station_id ( int | primary key ) ]\nforeign keys :\ntrain_station.station_id = station.station_id\ntrain_station.train_id = train.train_id\nmatched contents :\nstation.location ( London )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\ngrapes.color ( Red )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nteachers.last_name ( Schultz )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents : None",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.city_code ( NYC )\nvoting_record.election_cycle ( Spring )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents : None",
  "database schema :\ntable gymnast , columns = [ gymnast.gymnast_id ( int | primary key ) , gymnast.floor_exercise_points ( real ) , gymnast.pommel_horse_points ( real ) , gymnast.rings_points ( real ) , gymnast.vault_points ( real ) , gymnast.parallel_bars_points ( real ) , gymnast.horizontal_bar_points ( real ) , gymnast.total_points ( real ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.age ( real ) , people.height ( real ) , people.hometown ( text ) ]\nforeign keys :\ngymnast.gymnast_id = people.people_id\nmatched contents : None",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(50) ) , customers.customer_middle_initial ( varchar(1) ) , customers.customer_last_name ( varchar(50) ) , customers.gender ( varchar(1) ) , customers.email_address ( varchar(255) ) , customers.login_name ( varchar(80) ) , customers.login_password ( varchar(20) ) , customers.phone_number ( varchar(255) ) , customers.town_city ( varchar(50) ) , customers.state_county_province ( varchar(50) ) , customers.country ( varchar(50) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.order_id ( integer ) , invoices.invoice_date ( datetime ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.date_account_opened ( datetime ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable product_categories , columns = [ product_categories.production_type_code ( varchar(15) | primary key ) , product_categories.product_type_description ( varchar(80) ) , product_categories.vat_rating ( decimal(19,4) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.production_type_code ( varchar(15) ) , products.unit_price ( decimal(19,4) ) , products.product_name ( varchar(80) ) , products.product_color ( varchar(20) ) , products.product_size ( varchar(20) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.invoice_number ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( decimal(19,4) ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.product_quantity ( varchar(50) ) , order_items.other_order_item_details ( varchar(255) ) ]\ntable invoice_line_items , columns = [ invoice_line_items.order_item_id ( integer ) , invoice_line_items.invoice_number ( integer ) , invoice_line_items.product_id ( integer ) , invoice_line_items.product_title ( varchar(80) ) , invoice_line_items.product_quantity ( varchar(50) ) , invoice_line_items.product_price ( decimal(19,4) ) , invoice_line_items.derived_product_cost ( decimal(19,4) ) , invoice_line_items.derived_vat_payable ( decimal(19,4) ) , invoice_line_items.derived_total_cost ( decimal(19,4) ) ]\nforeign keys :\norders.customer_id = customers.customer_id\ninvoices.order_id = orders.order_id\naccounts.customer_id = customers.customer_id\nproducts.production_type_code = product_categories.production_type_code\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.invoice_number = invoices.invoice_number\norder_items.order_id = orders.order_id\norder_items.product_id = products.product_id\ninvoice_line_items.product_id = products.product_id\ninvoice_line_items.invoice_number = invoices.invoice_number\ninvoice_line_items.order_item_id = order_items.order_item_id\nmatched contents :\naccounts.account_name ( 900 )",
  "database schema :\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) ]\ntable participants , columns = [ participants.participant_id ( integer | primary key ) , participants.participant_type_code ( char(15) ) , participants.participant_details ( varchar(255) ) ]\ntable events , columns = [ events.event_id ( integer | primary key ) , events.service_id ( integer ) , events.event_details ( varchar(255) ) ]\ntable participants_in_events , columns = [ participants_in_events.event_id ( integer | primary key ) , participants_in_events.participant_id ( integer | primary key ) ]\nforeign keys :\nevents.service_id = services.service_id\nparticipants_in_events.event_id = events.event_id\nparticipants_in_events.participant_id = participants.participant_id\nmatched contents :\nparticipants.participant_type_code ( Organizer , Participant )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.artist ( text ) , artist.age ( int ) , artist.famous_title ( text ) , artist.famous_release_date ( text ) ]\ntable volume , columns = [ volume.volume_id ( int | primary key ) , volume.volume_issue ( text ) , volume.issue_date ( text ) , volume.weeks_on_top ( real ) , volume.song ( text ) , volume.artist_id ( int ) ]\ntable music_festival , columns = [ music_festival.id ( int | primary key ) , music_festival.music_festival ( text ) , music_festival.date_of_ceremony ( text ) , music_festival.category ( text ) , music_festival.volume ( int ) , music_festival.result ( text ) ]\nforeign keys :\nvolume.artist_id = artist.artist_id\nmusic_festival.volume = volume.volume_id\nmatched contents :\nartist.artist ( Gorgoroth )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.id ( 10 )\nalbums.id ( 10 )\nalbums.artist_id ( 10 )\ncustomers.id ( 10 )\ngenres.id ( 10 )\ninvoices.id ( 10 )\ninvoices.customer_id ( 10 )\ninvoice_lines.id ( 10 )\ninvoice_lines.invoice_id ( 10 )\ninvoice_lines.track_id ( 10 )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nfaculty.lname ( Prince )\nfaculty.fname ( Jerry )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nloan.loan_type ( Auto , Mortgages )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.title ( text ) , film.studio ( text ) , film.director ( text ) , film.gross_in_dollar ( int ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.country ( text ) , market.number_cities ( int ) ]\ntable film_market_estimation , columns = [ film_market_estimation.estimation_id ( int | primary key ) , film_market_estimation.low_estimate ( real ) , film_market_estimation.high_estimate ( real ) , film_market_estimation.film_id ( int ) , film_market_estimation.type ( text ) , film_market_estimation.market_id ( int ) , film_market_estimation.year ( int ) ]\nforeign keys :\nfilm_market_estimation.market_id = market.market_id\nfilm_market_estimation.film_id = film.film_id\nmatched contents :\nmarket.country ( Japan )",
  "database schema :\ntable captain , columns = [ captain.captain_id ( int | primary key ) , captain.name ( text ) , captain.ship_id ( int ) , captain.age ( text ) , captain.class ( text ) , captain.rank ( text ) ]\ntable ship , columns = [ ship.ship_id ( int | primary key ) , ship.name ( text ) , ship.type ( text ) , ship.built_year ( real ) , ship.class ( text ) , ship.flag ( text ) ]\nforeign keys :\ncaptain.ship_id = ship.ship_id\nmatched contents : None",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\ncustomer.no_of_loans ( 0 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_document_types.document_type_code ( CV , BK )\nref_document_types.document_type_name ( CV )\nall_documents.document_type_code ( CV , BK )",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents :\ndepartment.department_id ( 10 , 15 )\ndepartment.ranking ( 10 , 15 )\nhead.head_id ( 10 )\nmanagement.department_id ( 15 )\nmanagement.head_id ( 10 )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.lname ( Gibbons )\nauthors.fname ( Jeremy )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\ncourse.credits ( 2 )\ncourse.hours ( 2 )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nweather.max_temperature_f ( 85 )\nweather.max_humidity ( 85 )\nweather.mean_humidity ( 85 )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\ncustomers_cards.card_type_code ( Debit )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nmovie.title ( Avatar )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.first_name ( Lucas )\ncustomers.last_name ( Mancini )\ntracks.name ( Money )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.name ( text ) , artist.country ( text ) , artist.year_join ( int ) , artist.age ( int ) ]\ntable exhibition , columns = [ exhibition.exhibition_id ( int | primary key ) , exhibition.year ( int ) , exhibition.theme ( text ) , exhibition.artist_id ( int ) , exhibition.ticket_price ( real ) ]\ntable exhibition_record , columns = [ exhibition_record.exhibition_id ( int | primary key ) , exhibition_record.date ( text | primary key ) , exhibition_record.attendance ( int ) ]\nforeign keys :\nexhibition.artist_id = artist.artist_id\nexhibition_record.exhibition_id = exhibition.exhibition_id\nmatched contents :\nexhibition.year ( 2009 )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\nmill.type ( Grondzeiler )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( Italy )\nairlines.name ( American Airlines )\nairlines.callsign ( AMERICAN )\nairlines.country ( Italy )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\ngrapes.color ( White )\nwine.no ( 90 )\nwine.price ( 90 )\nwine.score ( 90 )\nwine.cases ( 90 )",
  "database schema :\ntable scientists , columns = [ scientists.ssn ( int | primary key ) , scientists.name ( char(30) ) ]\ntable projects , columns = [ projects.code ( char(4) | primary key ) , projects.name ( char(50) ) , projects.hours ( int ) ]\ntable assignedto , columns = [ assignedto.scientist ( int | primary key ) , assignedto.project ( char(4) | primary key ) ]\nforeign keys :\nassignedto.project = projects.code\nassignedto.scientist = scientists.ssn\nmatched contents :\nscientists.name ( Michael Rogers , Carol Smith )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\naddresses.city ( Damianfort )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.lname ( Ueno )\nauthors.fname ( Katsuhiro )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nhall_of_fame.category ( Player )\nplayer.name_first ( Count )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.grade ( 1 )",
  "database schema :\ntable company , columns = [ company.company_id ( int | primary key ) , company.rank ( int ) , company.company ( text ) , company.headquarters ( text ) , company.main_industry ( text ) , company.sales_billion ( real ) , company.profits_billion ( real ) , company.assets_billion ( real ) , company.market_value ( real ) ]\ntable gas_station , columns = [ gas_station.station_id ( int | primary key ) , gas_station.open_year ( int ) , gas_station.location ( text ) , gas_station.manager_name ( text ) , gas_station.vice_manager_name ( text ) , gas_station.representative_name ( text ) ]\ntable station_company , columns = [ station_company.station_id ( int | primary key ) , station_company.company_id ( int | primary key ) , station_company.rank_of_the_year ( int ) ]\nforeign keys :\nstation_company.company_id = company.company_id\nstation_company.station_id = gas_station.station_id\nmatched contents :\ncompany.main_industry ( Oil and gas , Banking )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nproducts.product_name ( photo )\nservices.product_name ( photo )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\ngrapes.color ( Red )\nappellations.no ( 50 )\nwine.no ( 50 )\nwine.price ( 50 )\nwine.cases ( 50 )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.iata ( END )\nairlines.icao ( END )\nairlines.callsign ( CANADIAN , Canadian )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_colors.color_description ( white )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\ncounty.county_id ( 1 )\nparty.party_id ( 1 )\nelection.election_id ( 1 )\nelection.district ( 1 )\nelection.party ( 1 )",
  "database schema :\ntable journal , columns = [ journal.journal_id ( int | primary key ) , journal.date ( text ) , journal.theme ( text ) , journal.sales ( int ) ]\ntable editor , columns = [ editor.editor_id ( int | primary key ) , editor.name ( text ) , editor.age ( real ) ]\ntable journal_committee , columns = [ journal_committee.editor_id ( int | primary key ) , journal_committee.journal_id ( int | primary key ) , journal_committee.work_type ( text ) ]\nforeign keys :\njournal_committee.journal_id = journal.journal_id\njournal_committee.editor_id = editor.editor_id\nmatched contents :\njournal_committee.work_type ( Photo )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\nstudent.age ( 20 )\nstudent.city_code ( PHL )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents : None",
  "database schema :\ntable club , columns = [ club.club_id ( int | primary key ) , club.name ( text ) , club.region ( text ) , club.start_year ( text ) ]\ntable club_rank , columns = [ club_rank.rank ( real | primary key ) , club_rank.club_id ( int | primary key ) , club_rank.gold ( real ) , club_rank.silver ( real ) , club_rank.bronze ( real ) , club_rank.total ( real ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.name ( text ) , player.position ( text ) , player.club_id ( int ) , player.apps ( real ) , player.tries ( real ) , player.goals ( text ) , player.points ( real ) ]\ntable competition , columns = [ competition.competition_id ( int | primary key ) , competition.year ( real ) , competition.competition_type ( text ) , competition.country ( text ) ]\ntable competition_result , columns = [ competition_result.competition_id ( int | primary key ) , competition_result.club_id_1 ( int | primary key ) , competition_result.club_id_2 ( int | primary key ) , competition_result.score ( text ) ]\nforeign keys :\nclub_rank.club_id = club.club_id\nplayer.club_id = club.club_id\ncompetition_result.competition_id = competition.competition_id\ncompetition_result.club_id_2 = club.club_id\ncompetition_result.club_id_1 = club.club_id\nmatched contents :\nplayer.player_id ( 10 )\ncompetition.competition_id ( 10 )\ncompetition_result.competition_id ( 10 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nplayer.name_last ( Parks )",
  "database schema :\ntable pilot , columns = [ pilot.pilot_id ( int(11) | primary key ) , pilot.name ( varchar(50) ) , pilot.age ( int(11) ) ]\ntable aircraft , columns = [ aircraft.aircraft_id ( int(11) | primary key ) , aircraft.aircraft ( varchar(50) ) , aircraft.description ( varchar(50) ) , aircraft.max_gross_weight ( varchar(50) ) , aircraft.total_disk_area ( varchar(50) ) , aircraft.max_disk_loading ( varchar(50) ) ]\ntable match , columns = [ match.round ( real | primary key ) , match.location ( text ) , match.country ( text ) , match.date ( text ) , match.fastest_qualifying ( text ) , match.winning_pilot ( text ) , match.winning_aircraft ( text ) ]\ntable airport , columns = [ airport.airport_id ( int | primary key ) , airport.airport_name ( text ) , airport.total_passengers ( real ) , airport.%_change_2007 ( text ) , airport.international_passengers ( real ) , airport.domestic_passengers ( real ) , airport.transit_passengers ( real ) , airport.aircraft_movements ( real ) , airport.freight_metric_tonnes ( real ) ]\ntable airport_aircraft , columns = [ airport_aircraft.id ( int ) , airport_aircraft.airport_id ( int | primary key ) , airport_aircraft.aircraft_id ( int | primary key ) ]\nforeign keys :\nmatch.winning_pilot = pilot.pilot_id\nmatch.winning_aircraft = aircraft.aircraft_id\nairport_aircraft.aircraft_id = aircraft.aircraft_id\nairport_aircraft.airport_id = airport.airport_id\nmatched contents :\npilot.age ( 25 )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\naddress.district ( California )",
  "database schema :\ntable city , columns = [ city.city_id ( int | primary key ) , city.city ( text ) , city.hanzi ( text ) , city.hanyu_pinyin ( text ) , city.regional_population ( int ) , city.gdp ( real ) ]\ntable match , columns = [ match.match_id ( int | primary key ) , match.date ( text ) , match.venue ( text ) , match.score ( text ) , match.result ( text ) , match.competition ( text ) ]\ntable temperature , columns = [ temperature.city_id ( int | primary key ) , temperature.jan ( real ) , temperature.feb ( real ) , temperature.mar ( real ) , temperature.apr ( real ) , temperature.jun ( real ) , temperature.jul ( real ) , temperature.aug ( real ) , temperature.sep ( real ) , temperature.oct ( real ) , temperature.nov ( real ) , temperature.dec ( real ) ]\ntable hosting_city , columns = [ hosting_city.year ( int | primary key ) , hosting_city.match_id ( int ) , hosting_city.host_city ( text ) ]\nforeign keys :\ntemperature.city_id = city.city_id\nhosting_city.match_id = match.match_id\nhosting_city.host_city = city.city_id\nmatched contents :\ncity.city ( Taizhou ( Zhejiang ) )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents : None",
  "database schema :\ntable player_attributes , columns = [ player_attributes.id ( integer | primary key ) , player_attributes.player_fifa_api_id ( integer ) , player_attributes.player_api_id ( integer ) , player_attributes.date ( text ) , player_attributes.overall_rating ( integer ) , player_attributes.potential ( integer ) , player_attributes.preferred_foot ( text ) , player_attributes.attacking_work_rate ( text ) , player_attributes.defensive_work_rate ( text ) , player_attributes.crossing ( integer ) , player_attributes.finishing ( integer ) , player_attributes.heading_accuracy ( integer ) , player_attributes.short_passing ( integer ) , player_attributes.volleys ( integer ) , player_attributes.dribbling ( integer ) , player_attributes.curve ( integer ) , player_attributes.free_kick_accuracy ( integer ) , player_attributes.long_passing ( integer ) , player_attributes.ball_control ( integer ) , player_attributes.acceleration ( integer ) , player_attributes.sprint_speed ( integer ) , player_attributes.agility ( integer ) , player_attributes.reactions ( integer ) , player_attributes.balance ( integer ) , player_attributes.shot_power ( integer ) , player_attributes.jumping ( integer ) , player_attributes.stamina ( integer ) , player_attributes.strength ( integer ) , player_attributes.long_shots ( integer ) , player_attributes.aggression ( integer ) , player_attributes.interceptions ( integer ) , player_attributes.positioning ( integer ) , player_attributes.vision ( integer ) , player_attributes.penalties ( integer ) , player_attributes.marking ( integer ) , player_attributes.standing_tackle ( integer ) , player_attributes.sliding_tackle ( integer ) , player_attributes.gk_diving ( integer ) , player_attributes.gk_handling ( integer ) , player_attributes.gk_kicking ( integer ) , player_attributes.gk_positioning ( integer ) , player_attributes.gk_reflexes ( integer ) ]\ntable player , columns = [ player.id ( integer | primary key ) , player.player_api_id ( integer ) , player.player_name ( text ) , player.player_fifa_api_id ( integer ) , player.birthday ( text ) , player.height ( integer ) , player.weight ( integer ) ]\ntable league , columns = [ league.id ( integer | primary key ) , league.country_id ( integer ) , league.name ( text ) ]\ntable country , columns = [ country.id ( integer | primary key ) , country.name ( text ) ]\ntable team , columns = [ team.id ( integer | primary key ) , team.team_api_id ( integer ) , team.team_fifa_api_id ( integer ) , team.team_long_name ( text ) , team.team_short_name ( text ) ]\ntable team_attributes , columns = [ team_attributes.id ( integer | primary key ) , team_attributes.team_fifa_api_id ( integer ) , team_attributes.team_api_id ( integer ) , team_attributes.date ( text ) , team_attributes.buildupplayspeed ( integer ) , team_attributes.buildupplayspeedclass ( text ) , team_attributes.buildupplaydribbling ( integer ) , team_attributes.buildupplaydribblingclass ( text ) , team_attributes.buildupplaypassing ( integer ) , team_attributes.buildupplaypassingclass ( text ) , team_attributes.buildupplaypositioningclass ( text ) , team_attributes.chancecreationpassing ( integer ) , team_attributes.chancecreationpassingclass ( text ) , team_attributes.chancecreationcrossing ( integer ) , team_attributes.chancecreationcrossingclass ( text ) , team_attributes.chancecreationshooting ( integer ) , team_attributes.chancecreationshootingclass ( text ) , team_attributes.chancecreationpositioningclass ( text ) , team_attributes.defencepressure ( integer ) , team_attributes.defencepressureclass ( text ) , team_attributes.defenceaggression ( integer ) , team_attributes.defenceaggressionclass ( text ) , team_attributes.defenceteamwidth ( integer ) , team_attributes.defenceteamwidthclass ( text ) , team_attributes.defencedefenderlineclass ( text ) ]\nforeign keys :\nplayer_attributes.player_api_id = player.player_api_id\nplayer_attributes.player_fifa_api_id = player.player_fifa_api_id\nleague.country_id = country.id\nteam_attributes.team_api_id = team.team_api_id\nteam_attributes.team_fifa_api_id = team.team_fifa_api_id\nmatched contents :\nplayer_attributes.crossing ( 85 , 90 )\nplayer_attributes.finishing ( 85 , 90 )\nplayer_attributes.dribbling ( 85 , 90 )\nplayer_attributes.curve ( 85 , 90 )\nplayer_attributes.ball_control ( 85 , 90 )\nplayer_attributes.acceleration ( 85 , 90 )\nplayer_attributes.agility ( 85 , 90 )\nplayer_attributes.balance ( 85 , 90 )\nplayer_attributes.aggression ( 85 , 90 )\nplayer.id ( 85 , 90 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.state ( CA )\ninvoices.billing_state ( CA )\ntracks.name ( Money , Numbers )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(80) ) , addresses.line_2 ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( char(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable people , columns = [ people.person_id ( integer | primary key ) , people.first_name ( varchar(255) ) , people.middle_name ( varchar(255) ) , people.last_name ( varchar(255) ) , people.cell_mobile_number ( varchar(40) ) , people.email_address ( varchar(40) ) , people.login_name ( varchar(40) ) , people.password ( varchar(40) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.student_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( varchar(100) | primary key ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable people_addresses , columns = [ people_addresses.person_address_id ( integer | primary key ) , people_addresses.person_id ( integer ) , people_addresses.address_id ( integer ) , people_addresses.date_from ( datetime ) , people_addresses.date_to ( datetime ) ]\ntable student_course_registrations , columns = [ student_course_registrations.student_id ( integer | primary key ) , student_course_registrations.course_id ( integer | primary key ) , student_course_registrations.registration_date ( datetime ) ]\ntable student_course_attendance , columns = [ student_course_attendance.student_id ( integer | primary key ) , student_course_attendance.course_id ( integer | primary key ) , student_course_attendance.date_of_attendance ( datetime ) ]\ntable candidates , columns = [ candidates.candidate_id ( integer | primary key ) , candidates.candidate_details ( varchar(255) ) ]\ntable candidate_assessments , columns = [ candidate_assessments.candidate_id ( integer | primary key ) , candidate_assessments.qualification ( char(15) | primary key ) , candidate_assessments.assessment_date ( datetime ) , candidate_assessments.asessment_outcome_code ( char(15) ) ]\nforeign keys :\nstudents.student_id = people.person_id\npeople_addresses.address_id = addresses.address_id\npeople_addresses.person_id = people.person_id\nstudent_course_registrations.course_id = courses.course_id\nstudent_course_registrations.student_id = students.student_id\nstudent_course_attendance.student_id = student_course_registrations.student_id\nstudent_course_attendance.course_id = student_course_registrations.course_id\ncandidates.candidate_id = people.person_id\ncandidate_assessments.candidate_id = candidates.candidate_id\nmatched contents :\ncourses.course_id ( 301 )\nstudent_course_registrations.course_id ( 301 )\nstudent_course_attendance.course_id ( 301 )",
  "database schema :\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.address ( text ) , shop.num_of_staff ( text ) , shop.score ( real ) , shop.open_year ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.membership_card ( text ) , member.age ( int ) , member.time_of_purchase ( int ) , member.level_of_membership ( int ) , member.address ( text ) ]\ntable happy_hour , columns = [ happy_hour.hh_id ( int | primary key ) , happy_hour.shop_id ( int | primary key ) , happy_hour.month ( text | primary key ) , happy_hour.num_of_shaff_in_charge ( int ) ]\ntable happy_hour_member , columns = [ happy_hour_member.hh_id ( int | primary key ) , happy_hour_member.member_id ( int | primary key ) , happy_hour_member.total_amount ( real ) ]\nforeign keys :\nhappy_hour.shop_id = shop.shop_id\nhappy_hour_member.member_id = member.member_id\nmatched contents : None",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nmember_of_club.position ( CTO )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Physics )\ncourse.dept_name ( Physics )\ninstructor.dept_name ( Physics )\nstudent.dept_name ( Physics )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncsu_fees.year ( 2003 )\ndegrees.year ( 2003 )\nenrollments.year ( 2003 )\nenrollments.fte_ay ( 2003 )\nfaculty.year ( 2003 )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_ap ( PER )\nroutes.src_ap ( PER )\nairports.iata ( PER )\nairlines.iata ( US )\nairlines.icao ( PER )\nairlines.callsign ( CITY )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_buildings.building_description ( Studio )\napartments.apt_type_code ( Studio )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_status_code ( Reported )\nproblem_status_codes.problem_status_code ( Reported )\nproblem_status_codes.problem_status_description ( Reported )\nstaff.staff_first_name ( Lysanne )\nstaff.staff_last_name ( Turcotte )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\ncourse_authors_and_tutors.author_id ( 2 )\nstudents.student_id ( 2 )\nsubjects.subject_id ( 2 )\ncourses.course_id ( 2 )\ncourses.subject_id ( 2 )\nstudent_course_enrolment.registration_id ( 2 )\nstudent_course_enrolment.student_id ( 2 )\nstudent_course_enrolment.course_id ( 2 )\nstudent_tests_taken.registration_id ( 2 )",
  "database schema :\ntable program , columns = [ program.program_id ( int | primary key ) , program.name ( text ) , program.origin ( text ) , program.launch ( real ) , program.owner ( text ) ]\ntable channel , columns = [ channel.channel_id ( int | primary key ) , channel.name ( text ) , channel.owner ( text ) , channel.share_in_percent ( real ) , channel.rating_in_percent ( real ) ]\ntable broadcast , columns = [ broadcast.channel_id ( int | primary key ) , broadcast.program_id ( int | primary key ) , broadcast.time_of_day ( text ) ]\ntable broadcast_share , columns = [ broadcast_share.channel_id ( int | primary key ) , broadcast_share.program_id ( int | primary key ) , broadcast_share.date ( text ) , broadcast_share.share_in_percent ( real ) ]\nforeign keys :\nbroadcast.program_id = program.program_id\nbroadcast.channel_id = channel.channel_id\nbroadcast_share.program_id = program.program_id\nbroadcast_share.channel_id = channel.channel_id\nmatched contents :\nbroadcast.time_of_day ( Night )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents : None",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.name ( text ) , artist.country ( text ) , artist.year_join ( int ) , artist.age ( int ) ]\ntable exhibition , columns = [ exhibition.exhibition_id ( int | primary key ) , exhibition.year ( int ) , exhibition.theme ( text ) , exhibition.artist_id ( int ) , exhibition.ticket_price ( real ) ]\ntable exhibition_record , columns = [ exhibition_record.exhibition_id ( int | primary key ) , exhibition_record.date ( text | primary key ) , exhibition_record.attendance ( int ) ]\nforeign keys :\nexhibition.artist_id = artist.artist_id\nexhibition_record.exhibition_id = exhibition.exhibition_id\nmatched contents : None",
  "database schema :\ntable school , columns = [ school.school_id ( text | primary key ) , school.school_name ( text ) , school.location ( text ) , school.mascot ( text ) , school.enrollment ( int ) , school.ihsaa_class ( text ) , school.ihsaa_football_class ( text ) , school.county ( text ) ]\ntable budget , columns = [ budget.school_id ( int | primary key ) , budget.year ( int | primary key ) , budget.budgeted ( int ) , budget.total_budget_percent_budgeted ( real ) , budget.invested ( int ) , budget.total_budget_percent_invested ( real ) , budget.budget_invested_percent ( text ) ]\ntable endowment , columns = [ endowment.endowment_id ( int | primary key ) , endowment.school_id ( int ) , endowment.donator_name ( text ) , endowment.amount ( real ) ]\nforeign keys :\nbudget.school_id = school.school_id\nendowment.school_id = school.school_id\nmatched contents :\nbudget.year ( 2003 )",
  "database schema :\ntable station , columns = [ station.station_id ( int | primary key ) , station.name ( text ) , station.annual_entry_exit ( real ) , station.annual_interchanges ( real ) , station.total_passengers ( real ) , station.location ( text ) , station.main_services ( text ) , station.number_of_platforms ( int ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.name ( text ) , train.time ( text ) , train.service ( text ) ]\ntable train_station , columns = [ train_station.train_id ( int | primary key ) , train_station.station_id ( int | primary key ) ]\nforeign keys :\ntrain_station.station_id = station.station_id\ntrain_station.train_id = train.train_id\nmatched contents :\nstation.location ( Glasgow , London )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents :\nrestaurant_type.restypename ( Sandwich )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\npayment.payment_date ( 2005-08-23 02:06:01 )\nrental.rental_date ( 2005-08-23 02:06:01 )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\nattribute_definitions.attribute_id ( 3 )\ncatalogs.catalog_id ( 3 , 5 )\ncatalog_structure.catalog_level_name ( Product )\ncatalog_contents.catalog_entry_id ( 3 , 5 )\ncatalog_contents.parent_entry_id ( 3 , 5 )\ncatalog_contents.previous_entry_id ( 3 , 5 )\ncatalog_contents.next_entry_id ( 3 )\ncatalog_contents.capacity ( 5 )\ncatalog_contents.length ( 3 , 5 )\ncatalog_contents.height ( 3 , 5 )\ncatalog_contents.width ( 3 , 5 )\ncatalog_contents_additional_attributes.catalog_entry_id ( 5 )\ncatalog_contents_additional_attributes.attribute_id ( 3 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nhall_of_fame.category ( Manager )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.age ( 22 )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\nmatch_season.college ( UCLA , Duke )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.advisor ( 1121 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\ndepartments.department_name ( marketing , managing )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ngenres.name ( Rock , Jazz )\ntracks.name ( Belong )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_document_types.document_type_code ( BK )\ndocuments.document_type_code ( BK )",
  "database schema :\ntable county_public_safety , columns = [ county_public_safety.county_id ( int | primary key ) , county_public_safety.name ( text ) , county_public_safety.population ( int ) , county_public_safety.police_officers ( int ) , county_public_safety.residents_per_officer ( int ) , county_public_safety.case_burden ( int ) , county_public_safety.crime_rate ( real ) , county_public_safety.police_force ( text ) , county_public_safety.location ( text ) ]\ntable city , columns = [ city.city_id ( int | primary key ) , city.county_id ( int ) , city.name ( text ) , city.white ( real ) , city.black ( real ) , city.amerindian ( real ) , city.asian ( real ) , city.multiracial ( real ) , city.hispanic ( real ) ]\nforeign keys :\ncity.county_id = county_public_safety.county_id\nmatched contents :\ncounty_public_safety.location ( East , West )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.department_id ( 40 )\njobs.min_salary ( 8000 )\njobs.max_salary ( 12000 )\nemployees.salary ( 8000 , 12000 )\nemployees.department_id ( 40 )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nstudent.tot_cred ( 50 )\ntime_slot.end_min ( 50 )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nflight.flno ( 99 )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( San Francisco )\ncampuses.county ( San Francisco )\ndegrees.year ( 2004 )\ndiscipline_enrollments.year ( 2004 )\nenrollments.year ( 2004 )\nfaculty.year ( 2004 )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\ncustomers.good_or_bad_customer ( good )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nsong.languages ( bangla )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.district ( text ) , people.name ( text ) , people.party ( text ) , people.age ( int ) ]\ntable debate , columns = [ debate.debate_id ( int | primary key ) , debate.date ( text ) , debate.venue ( text ) , debate.num_of_audience ( int ) ]\ntable debate_people , columns = [ debate_people.debate_id ( int | primary key ) , debate_people.affirmative ( int | primary key ) , debate_people.negative ( int | primary key ) , debate_people.if_affirmative_win ( bool ) ]\nforeign keys :\ndebate_people.negative = people.people_id\ndebate_people.affirmative = people.people_id\ndebate_people.debate_id = debate.debate_id\nmatched contents :\npeople.age ( 35 , 36 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\nstudent.lname ( Smith )\ndorm.dorm_name ( Smith Hall )",
  "database schema :\ntable airport , columns = [ airport.id ( int | primary key ) , airport.city ( text ) , airport.country ( text ) , airport.iata ( text ) , airport.icao ( text ) , airport.name ( text ) ]\ntable operate_company , columns = [ operate_company.id ( int | primary key ) , operate_company.name ( text ) , operate_company.type ( text ) , operate_company.principal_activities ( text ) , operate_company.incorporated_in ( text ) , operate_company.group_equity_shareholding ( real ) ]\ntable flight , columns = [ flight.id ( int | primary key ) , flight.vehicle_flight_number ( text ) , flight.date ( text ) , flight.pilot ( text ) , flight.velocity ( real ) , flight.altitude ( real ) , flight.airport_id ( int ) , flight.company_id ( int ) ]\nforeign keys :\nflight.company_id = operate_company.id\nflight.airport_id = airport.id\nmatched contents :\nairport.country ( Iceland )",
  "database schema :\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.address ( text ) , shop.num_of_staff ( text ) , shop.score ( real ) , shop.open_year ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.membership_card ( text ) , member.age ( int ) , member.time_of_purchase ( int ) , member.level_of_membership ( int ) , member.address ( text ) ]\ntable happy_hour , columns = [ happy_hour.hh_id ( int | primary key ) , happy_hour.shop_id ( int | primary key ) , happy_hour.month ( text | primary key ) , happy_hour.num_of_shaff_in_charge ( int ) ]\ntable happy_hour_member , columns = [ happy_hour_member.hh_id ( int | primary key ) , happy_hour_member.member_id ( int | primary key ) , happy_hour_member.total_amount ( real ) ]\nforeign keys :\nhappy_hour.shop_id = shop.shop_id\nhappy_hour_member.member_id = member.member_id\nmatched contents :\nmember.address ( Hartford )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nclass.class_section ( 2 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.id ( 100 )\nalbums.id ( 100 )\nalbums.artist_id ( 100 )\ninvoices.id ( 100 )\ntracks.id ( 100 )\ntracks.album_id ( 100 )\ninvoice_lines.id ( 100 )\ninvoice_lines.invoice_id ( 100 )\nplaylist_tracks.track_id ( 100 )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.artist ( text ) , artist.age ( int ) , artist.famous_title ( text ) , artist.famous_release_date ( text ) ]\ntable volume , columns = [ volume.volume_id ( int | primary key ) , volume.volume_issue ( text ) , volume.issue_date ( text ) , volume.weeks_on_top ( real ) , volume.song ( text ) , volume.artist_id ( int ) ]\ntable music_festival , columns = [ music_festival.id ( int | primary key ) , music_festival.music_festival ( text ) , music_festival.date_of_ceremony ( text ) , music_festival.category ( text ) , music_festival.volume ( int ) , music_festival.result ( text ) ]\nforeign keys :\nvolume.artist_id = artist.artist_id\nmusic_festival.volume = volume.volume_id\nmatched contents :\nmusic_festival.result ( Nominated )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.grade ( 4 )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.year ( 2004 )\ndrivers.driverref ( speed )\ndrivers.surname ( Speed )\nseasons.year ( 2004 )\nresults.resultid ( 2004 )\nconstructorresults.constructorresultsid ( 2004 )\nqualifying.qualifyid ( 2004 )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nmanufacturers.headquarter ( Taiwan , Tokyo )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\ntourist_attractions.how_to_get_there ( bus , walk )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ngenres.name ( Rock )\ntracks.name ( Belong )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ncollege.enr ( 18000 )",
  "database schema :\ntable mountain , columns = [ mountain.mountain_id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable climber , columns = [ climber.climber_id ( int | primary key ) , climber.name ( text ) , climber.country ( text ) , climber.time ( text ) , climber.points ( real ) , climber.mountain_id ( int ) ]\nforeign keys :\nclimber.mountain_id = mountain.mountain_id\nmatched contents :\nclimber.country ( West Germany )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nswimmer.nationality ( Australia )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\ninst.name ( Indiana University )",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nteachers.lastname ( MARROTTE )\nteachers.firstname ( KIRK )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents :\nbank.state ( Utah )\ncustomer.state ( Utah )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2009 )\nappearances.year ( 2009 )\nbatting.year ( 2009 )\nbatting_postseason.year ( 2009 )\nfielding.year ( 2009 )\nfielding.inn_outs ( 2009 )\nfielding_postseason.year ( 2009 )\nhall_of_fame.yearid ( 2009 )\nhome_game.year ( 2009 )\nmanager.year ( 2009 )\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable county_public_safety , columns = [ county_public_safety.county_id ( int | primary key ) , county_public_safety.name ( text ) , county_public_safety.population ( int ) , county_public_safety.police_officers ( int ) , county_public_safety.residents_per_officer ( int ) , county_public_safety.case_burden ( int ) , county_public_safety.crime_rate ( real ) , county_public_safety.police_force ( text ) , county_public_safety.location ( text ) ]\ntable city , columns = [ city.city_id ( int | primary key ) , city.county_id ( int ) , city.name ( text ) , city.white ( real ) , city.black ( real ) , city.amerindian ( real ) , city.asian ( real ) , city.multiracial ( real ) , city.hispanic ( real ) ]\nforeign keys :\ncity.county_id = county_public_safety.county_id\nmatched contents :\ncounty_public_safety.county_id ( 5 )\ncity.city_id ( 5 )\ncity.county_id ( 5 )",
  "database schema :\ntable book_club , columns = [ book_club.book_club_id ( int | primary key ) , book_club.year ( int ) , book_club.author_or_editor ( text ) , book_club.book_title ( text ) , book_club.publisher ( text ) , book_club.category ( text ) , book_club.result ( text ) ]\ntable movie , columns = [ movie.movie_id ( int | primary key ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) , movie.budget_million ( real ) , movie.gross_worldwide ( int ) ]\ntable culture_company , columns = [ culture_company.company_name ( text | primary key ) , culture_company.type ( text ) , culture_company.incorporated_in ( text ) , culture_company.group_equity_shareholding ( real ) , culture_company.book_club_id ( text ) , culture_company.movie_id ( text ) ]\nforeign keys :\nculture_company.movie_id = movie.movie_id\nculture_company.book_club_id = book_club.book_club_id\nmatched contents :\nbook_club.year ( 1989 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nemployees.last_name ( Johnson )\nemployees.first_name ( Steve )\ncustomers.first_name ( Steve )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\naddress.address ( 1031 Daugavpils Parkway )\naddress.district ( Daugavpils )\ncity.city ( Daugavpils )\ninventory.inventory_id ( 1031 )\npayment.payment_id ( 1031 )\npayment.rental_id ( 1031 )\nrental.rental_id ( 1031 )\nrental.inventory_id ( 1031 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nstudent.age ( 20 )\nsportsinfo.gamesplayed ( 20 )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nartist.gender ( Female , Male )",
  "database schema :\ntable airport , columns = [ airport.id ( int | primary key ) , airport.city ( text ) , airport.country ( text ) , airport.iata ( text ) , airport.icao ( text ) , airport.name ( text ) ]\ntable operate_company , columns = [ operate_company.id ( int | primary key ) , operate_company.name ( text ) , operate_company.type ( text ) , operate_company.principal_activities ( text ) , operate_company.incorporated_in ( text ) , operate_company.group_equity_shareholding ( real ) ]\ntable flight , columns = [ flight.id ( int | primary key ) , flight.vehicle_flight_number ( text ) , flight.date ( text ) , flight.pilot ( text ) , flight.velocity ( real ) , flight.altitude ( real ) , flight.airport_id ( int ) , flight.company_id ( int ) ]\nforeign keys :\nflight.company_id = operate_company.id\nflight.airport_id = airport.id\nmatched contents :\noperate_company.principal_activities ( Airline )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_apid ( 3 )\nroutes.src_apid ( 3 )\nroutes.airline ( 3 )\nairports.apid ( 3 )\nairports.country ( United States )\nairports.elevation ( 3 )\nairlines.alid ( 3 )\nairlines.callsign ( UNITED , STATES )\nairlines.country ( United States )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nfaculty.rank ( Instructor )\ncourse.credits ( 3 )\ncourse.hours ( 3 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable properties , columns = [ properties.property_id ( integer | primary key ) , properties.property_type_code ( char(15) ) , properties.property_address ( varchar(255) ) , properties.other_details ( varchar(255) ) ]\ntable residents , columns = [ residents.resident_id ( integer | primary key ) , residents.property_id ( integer | primary key ) , residents.date_moved_in ( datetime | primary key ) , residents.date_moved_out ( datetime ) , residents.other_details ( varchar(255) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.parent_organization_id ( integer ) , organizations.organization_details ( varchar(255) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.organization_id ( integer ) , services.service_type_code ( char(15) ) , services.service_details ( varchar(255) ) ]\ntable residents_services , columns = [ residents_services.resident_id ( integer | primary key ) , residents_services.service_id ( integer | primary key ) , residents_services.date_moved_in ( datetime ) , residents_services.property_id ( integer ) , residents_services.date_requested ( datetime ) , residents_services.date_provided ( datetime ) , residents_services.other_details ( varchar(255) ) ]\ntable things , columns = [ things.thing_id ( integer | primary key ) , things.organization_id ( integer ) , things.type_of_thing_code ( char(15) ) , things.service_type_code ( char(10) ) , things.service_details ( varchar(255) ) ]\ntable customer_events , columns = [ customer_events.customer_event_id ( integer | primary key ) , customer_events.customer_id ( integer ) , customer_events.date_moved_in ( datetime ) , customer_events.property_id ( integer ) , customer_events.resident_id ( integer ) , customer_events.thing_id ( integer ) ]\ntable customer_event_notes , columns = [ customer_event_notes.customer_event_note_id ( integer | primary key ) , customer_event_notes.customer_event_id ( integer ) , customer_event_notes.service_type_code ( char(15) ) , customer_event_notes.resident_id ( integer ) , customer_event_notes.property_id ( integer ) , customer_event_notes.date_moved_in ( datetime ) ]\ntable timed_status_of_things , columns = [ timed_status_of_things.thing_id ( integer | primary key ) , timed_status_of_things.date_and_date ( datetime | primary key ) , timed_status_of_things.status_of_thing_code ( char(15) | primary key ) ]\ntable timed_locations_of_things , columns = [ timed_locations_of_things.thing_id ( integer | primary key ) , timed_locations_of_things.date_and_time ( datetime | primary key ) , timed_locations_of_things.location_code ( char(15) | primary key ) ]\nforeign keys :\nresidents.property_id = properties.property_id\nservices.organization_id = organizations.organization_id\nresidents_services.resident_id = residents.resident_id\nresidents_services.property_id = residents.property_id\nresidents_services.date_moved_in = residents.date_moved_in\nresidents_services.service_id = services.service_id\nthings.organization_id = organizations.organization_id\ncustomer_events.resident_id = residents.resident_id\ncustomer_events.property_id = residents.property_id\ncustomer_events.date_moved_in = residents.date_moved_in\ncustomer_events.customer_id = customers.customer_id\ncustomer_events.thing_id = things.thing_id\ncustomer_event_notes.customer_event_id = customer_events.customer_event_id\ntimed_status_of_things.thing_id = things.thing_id\ntimed_locations_of_things.thing_id = things.thing_id\nmatched contents :\ntimed_status_of_things.date_and_date ( 2017-06-19 02:59:21 )\ntimed_status_of_things.status_of_thing_code ( Close )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.title ( text ) , film.studio ( text ) , film.director ( text ) , film.gross_in_dollar ( int ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.country ( text ) , market.number_cities ( int ) ]\ntable film_market_estimation , columns = [ film_market_estimation.estimation_id ( int | primary key ) , film_market_estimation.low_estimate ( real ) , film_market_estimation.high_estimate ( real ) , film_market_estimation.film_id ( int ) , film_market_estimation.type ( text ) , film_market_estimation.market_id ( int ) , film_market_estimation.year ( int ) ]\nforeign keys :\nfilm_market_estimation.market_id = market.market_id\nfilm_market_estimation.film_id = film.film_id\nmatched contents :\nfilm_market_estimation.year ( 1995 )",
  "database schema :\ntable scientists , columns = [ scientists.ssn ( int | primary key ) , scientists.name ( char(30) ) ]\ntable projects , columns = [ projects.code ( char(4) | primary key ) , projects.name ( char(50) ) , projects.hours ( int ) ]\ntable assignedto , columns = [ assignedto.scientist ( int | primary key ) , assignedto.project ( char(4) | primary key ) ]\nforeign keys :\nassignedto.project = projects.code\nassignedto.scientist = scientists.ssn\nmatched contents : None",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nclassroom.building ( Chandler )\ndepartment.building ( Chandler )\nsection.semester ( Fall )\nsection.year ( 2010 )\nsection.building ( Chandler )\nteaches.semester ( Fall )\nteaches.year ( 2010 )\nstudent.name ( Fall )\ntakes.semester ( Fall )\ntakes.year ( 2010 )",
  "database schema :\ntable captain , columns = [ captain.captain_id ( int | primary key ) , captain.name ( text ) , captain.ship_id ( int ) , captain.age ( text ) , captain.class ( text ) , captain.rank ( text ) ]\ntable ship , columns = [ ship.ship_id ( int | primary key ) , ship.name ( text ) , ship.type ( text ) , ship.built_year ( real ) , ship.class ( text ) , ship.flag ( text ) ]\nforeign keys :\ncaptain.ship_id = ship.ship_id\nmatched contents :\nship.flag ( Panama , Malta )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents : None",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ntryout.ppos ( mid )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\ncatalog_structure.catalog_level_name ( Product )\ncatalog_contents.catalog_entry_id ( 8 )\ncatalog_contents.catalog_level_number ( 8 )\ncatalog_contents.previous_entry_id ( 8 )\ncatalog_contents.next_entry_id ( 8 )\ncatalog_contents.capacity ( 8 )\ncatalog_contents.length ( 8 )\ncatalog_contents.height ( 8 )\ncatalog_contents.width ( 8 )\ncatalog_contents_additional_attributes.catalog_entry_id ( 8 )\ncatalog_contents_additional_attributes.catalog_level_number ( 8 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\naddresses.address_id ( 3 )\ndocuments.document_id ( 3 )\nemployees.employee_id ( 3 )\ndocuments_mailed.mailed_to_address_id ( 3 )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\naircraft.name ( Airbus A340-300 )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\nmatch_season.college ( UCLA )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergy ( Soy )\nhas_allergy.allergy ( Soy )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\naddresses.address_id ( 1 )\nstudents.address_id ( 1 )\nassessment_notes.notes_id ( 1 )\nassessment_notes.student_id ( 1 )\nassessment_notes.teacher_id ( 1 )\nbehavior_incident.incident_id ( 1 )\nbehavior_incident.student_id ( 1 )\ndetention.detention_id ( 1 )\nstudent_addresses.student_id ( 1 )\nstudent_addresses.address_id ( 1 )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\nstudent_tests_taken.test_result ( Pass )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.id ( 5 )\nalbums.id ( 5 )\nalbums.artist_id ( 5 )\nemployees.id ( 5 )\ncustomers.id ( 5 )\ncustomers.support_rep_id ( 5 )\ngenres.id ( 5 )\ninvoice_lines.id ( 5 )\ninvoice_lines.invoice_id ( 5 )\ninvoice_lines.track_id ( 5 )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.circuitid ( 2 )\ndrivers.driverref ( driver )\ndrivers.surname ( Driver )\nconstructors.constructorid ( 2 )\nconstructorstandings.constructorstandingsid ( 2 )\nconstructorstandings.raceid ( 2 )\nconstructorstandings.constructorid ( 2 )\nconstructorstandings.position ( 2 )\nconstructorstandings.positiontext ( 2 )\nconstructorresults.constructorresultsid ( 2 )\nconstructorresults.raceid ( 2 )\nconstructorresults.constructorid ( 2 )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Finance )\ncourse.title ( International Finance )\ncourse.dept_name ( Finance )\ninstructor.dept_name ( Finance )\nstudent.name ( Finance )\nstudent.dept_name ( Finance )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nref_document_types.document_type_code ( Paper )\nref_document_status.document_status_code ( done )\ndocuments.document_status_code ( done )\ndocuments.document_type_code ( Paper )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nreservations.lastname ( SWEAZY )\nreservations.firstname ( ROY )",
  "database schema :\ntable building , columns = [ building.building_id ( text | primary key ) , building.name ( text ) , building.street_address ( text ) , building.years_as_tallest ( text ) , building.height_feet ( int ) , building.floors ( int ) ]\ntable institution , columns = [ institution.institution_id ( text | primary key ) , institution.institution ( text ) , institution.location ( text ) , institution.founded ( real ) , institution.type ( text ) , institution.enrollment ( int ) , institution.team ( text ) , institution.primary_conference ( text ) , institution.building_id ( text ) ]\ntable protein , columns = [ protein.common_name ( text | primary key ) , protein.protein_name ( text ) , protein.divergence_from_human_lineage ( real ) , protein.accession_number ( text ) , protein.sequence_length ( real ) , protein.sequence_identity_to_human_protein ( text ) , protein.institution_id ( text ) ]\nforeign keys :\ninstitution.building_id = building.building_id\nprotein.institution_id = institution.institution_id\nmatched contents :\ninstitution.enrollment ( 1000 )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nstadium.country ( Russia )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\ndepartment.dept_name ( Accounting , Biology )",
  "database schema :\ntable company , columns = [ company.company_id ( int | primary key ) , company.rank ( int ) , company.company ( text ) , company.headquarters ( text ) , company.main_industry ( text ) , company.sales_billion ( real ) , company.profits_billion ( real ) , company.assets_billion ( real ) , company.market_value ( real ) ]\ntable gas_station , columns = [ gas_station.station_id ( int | primary key ) , gas_station.open_year ( int ) , gas_station.location ( text ) , gas_station.manager_name ( text ) , gas_station.vice_manager_name ( text ) , gas_station.representative_name ( text ) ]\ntable station_company , columns = [ station_company.station_id ( int | primary key ) , station_company.company_id ( int | primary key ) , station_company.rank_of_the_year ( int ) ]\nforeign keys :\nstation_company.company_id = company.company_id\nstation_company.station_id = gas_station.station_id\nmatched contents :\ncompany.company_id ( 3 )\ncompany.rank ( 3 )\ngas_station.station_id ( 3 )\nstation_company.company_id ( 3 )\nstation_company.rank_of_the_year ( 3 )",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents :\ndepartment.name ( State )\nhead.born_state ( Alabama )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_document_types.document_type_name ( Book )\ndocuments.document_name ( King Book )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2000 , 2010 )\nappearances.year ( 2000 , 2010 )\nbatting.year ( 2000 , 2010 )\nbatting_postseason.year ( 2000 , 2010 )\nfielding.year ( 2000 , 2010 )\nfielding.inn_outs ( 2000 , 2010 )\nfielding_postseason.year ( 2000 , 2010 )\nhall_of_fame.yearid ( 2000 , 2010 )\nhome_game.year ( 2000 , 2010 )\nhome_game.attendance ( 2000 )\nmanager.year ( 2010 )\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable follows , columns = [ follows.f1 ( int(11) | primary key | comment : user id ) , follows.f2 ( int(11) | primary key | comment : follower id ) ]\ntable tweets , columns = [ tweets.id ( bigint(20) | primary key ) , tweets.uid ( int(11) | comment : user id ) , tweets.text ( char(140) ) , tweets.createdate ( datetime ) ]\ntable user_profiles , columns = [ user_profiles.uid ( int(11) | primary key ) , user_profiles.name ( varchar(255) ) , user_profiles.email ( varchar(255) ) , user_profiles.partitionid ( int(11) ) , user_profiles.followers ( int(11) ) ]\nforeign keys :\nfollows.f2 = user_profiles.uid\nfollows.f1 = user_profiles.uid\ntweets.uid = user_profiles.uid\nmatched contents :\nuser_profiles.name ( Tyler Swift )",
  "database schema :\ntable college , columns = [ college.college_id ( int | primary key ) , college.name ( text ) , college.leader_name ( text ) , college.college_location ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.country ( text ) , member.college_id ( int ) ]\ntable round , columns = [ round.round_id ( int | primary key ) , round.member_id ( int | primary key ) , round.decoration_theme ( text ) , round.rank_in_round ( int ) ]\nforeign keys :\nmember.college_id = college.college_id\nround.member_id = member.member_id\nmatched contents :\ncollege.college_id ( 3 )\nmember.member_id ( 3 )\nmember.college_id ( 3 )\nround.rank_in_round ( 3 )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_colors.color_description ( white )\ncharacteristics.characteristic_name ( hot )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.city ( Palo Alto )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\nsubjects.subject_name ( Computer Science )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nactor.age ( 20 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\norders.order_status ( Shipped )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_colors.color_description ( yellow )",
  "database schema :\ntable company , columns = [ company.company_id ( int | primary key ) , company.rank ( int ) , company.company ( text ) , company.headquarters ( text ) , company.main_industry ( text ) , company.sales_billion ( real ) , company.profits_billion ( real ) , company.assets_billion ( real ) , company.market_value ( real ) ]\ntable gas_station , columns = [ gas_station.station_id ( int | primary key ) , gas_station.open_year ( int ) , gas_station.location ( text ) , gas_station.manager_name ( text ) , gas_station.vice_manager_name ( text ) , gas_station.representative_name ( text ) ]\ntable station_company , columns = [ station_company.station_id ( int | primary key ) , station_company.company_id ( int | primary key ) , station_company.rank_of_the_year ( int ) ]\nforeign keys :\nstation_company.company_id = company.company_id\nstation_company.station_id = gas_station.station_id\nmatched contents :\ngas_station.open_year ( 2000 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.title ( Pop )\ngenre.name ( Latin , Pop )",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents :\nmedicine.name ( Aripiprazole )\nenzyme.name ( ALA synthase )",
  "database schema :\ntable investors , columns = [ investors.investor_id ( integer | primary key ) , investors.investor_details ( varchar(255) ) ]\ntable lots , columns = [ lots.lot_id ( integer | primary key ) , lots.investor_id ( integer ) , lots.lot_details ( varchar(255) ) ]\ntable ref_transaction_types , columns = [ ref_transaction_types.transaction_type_code ( varchar(10) | primary key ) , ref_transaction_types.transaction_type_description ( varchar(80) ) ]\ntable transactions , columns = [ transactions.transaction_id ( integer | primary key ) , transactions.investor_id ( integer ) , transactions.transaction_type_code ( varchar(10) ) , transactions.date_of_transaction ( datetime ) , transactions.amount_of_transaction ( decimal(19,4) ) , transactions.share_count ( varchar(40) ) , transactions.other_details ( varchar(255) ) ]\ntable sales , columns = [ sales.sales_transaction_id ( integer | primary key ) , sales.sales_details ( varchar(255) ) ]\ntable purchases , columns = [ purchases.purchase_transaction_id ( integer ) , purchases.purchase_details ( varchar(255) ) ]\ntable transactions_lots , columns = [ transactions_lots.transaction_id ( integer ) , transactions_lots.lot_id ( integer ) ]\nforeign keys :\nlots.investor_id = investors.investor_id\ntransactions.transaction_type_code = ref_transaction_types.transaction_type_code\ntransactions.investor_id = investors.investor_id\nsales.sales_transaction_id = transactions.transaction_id\npurchases.purchase_transaction_id = transactions.transaction_id\ntransactions_lots.transaction_id = transactions.transaction_id\ntransactions_lots.lot_id = lots.lot_id\nmatched contents : None",
  "database schema :\ntable airport , columns = [ airport.id ( int | primary key ) , airport.city ( text ) , airport.country ( text ) , airport.iata ( text ) , airport.icao ( text ) , airport.name ( text ) ]\ntable operate_company , columns = [ operate_company.id ( int | primary key ) , operate_company.name ( text ) , operate_company.type ( text ) , operate_company.principal_activities ( text ) , operate_company.incorporated_in ( text ) , operate_company.group_equity_shareholding ( real ) ]\ntable flight , columns = [ flight.id ( int | primary key ) , flight.vehicle_flight_number ( text ) , flight.date ( text ) , flight.pilot ( text ) , flight.velocity ( real ) , flight.altitude ( real ) , flight.airport_id ( int ) , flight.company_id ( int ) ]\nforeign keys :\nflight.company_id = operate_company.id\nflight.airport_id = airport.id\nmatched contents :\nairport.city ( Billund )\nairport.country ( United States )\nairport.name ( Billund Airport )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ncourse.title ( Differential Geometry )",
  "database schema :\ntable county_public_safety , columns = [ county_public_safety.county_id ( int | primary key ) , county_public_safety.name ( text ) , county_public_safety.population ( int ) , county_public_safety.police_officers ( int ) , county_public_safety.residents_per_officer ( int ) , county_public_safety.case_burden ( int ) , county_public_safety.crime_rate ( real ) , county_public_safety.police_force ( text ) , county_public_safety.location ( text ) ]\ntable city , columns = [ city.city_id ( int | primary key ) , city.county_id ( int ) , city.name ( text ) , city.white ( real ) , city.black ( real ) , city.amerindian ( real ) , city.asian ( real ) , city.multiracial ( real ) , city.hispanic ( real ) ]\nforeign keys :\ncity.county_id = county_public_safety.county_id\nmatched contents :\ncity.city_id ( 10 )",
  "database schema :\ntable club , columns = [ club.club_id ( int | primary key ) , club.name ( text ) , club.region ( text ) , club.start_year ( text ) ]\ntable club_rank , columns = [ club_rank.rank ( real | primary key ) , club_rank.club_id ( int | primary key ) , club_rank.gold ( real ) , club_rank.silver ( real ) , club_rank.bronze ( real ) , club_rank.total ( real ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.name ( text ) , player.position ( text ) , player.club_id ( int ) , player.apps ( real ) , player.tries ( real ) , player.goals ( text ) , player.points ( real ) ]\ntable competition , columns = [ competition.competition_id ( int | primary key ) , competition.year ( real ) , competition.competition_type ( text ) , competition.country ( text ) ]\ntable competition_result , columns = [ competition_result.competition_id ( int | primary key ) , competition_result.club_id_1 ( int | primary key ) , competition_result.club_id_2 ( int | primary key ) , competition_result.score ( text ) ]\nforeign keys :\nclub_rank.club_id = club.club_id\nplayer.club_id = club.club_id\ncompetition_result.competition_id = competition.competition_id\ncompetition_result.club_id_2 = club.club_id\ncompetition_result.club_id_1 = club.club_id\nmatched contents :\ncompetition.competition_type ( Tournament , Friendly )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nstudent.city_code ( CHI )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nproducts.product_name ( laurel )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.country ( United States , Canada )\nairlines.callsign ( UNITED , STATES )\nairlines.country ( United States , Canada )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\ncourse_authors_and_tutors.author_id ( 1 )\ncourse_authors_and_tutors.gender_mf ( 1 )\nstudents.student_id ( 1 )\nsubjects.subject_id ( 1 )\ncourses.course_id ( 1 )\ncourses.subject_id ( 1 )\nstudent_course_enrolment.registration_id ( 1 )\nstudent_course_enrolment.course_id ( 1 )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_apid ( 10 )\nroutes.src_apid ( 10 )\nroutes.alid ( 10 )\nairports.apid ( 10 )\nairports.elevation ( 10 )\nairports.iata ( TOP )\nairlines.alid ( 10 )\nairlines.iata ( 10 )\nairlines.icao ( TOP )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\ntrip.duration ( 636 )\ntrip.bike_id ( 636 )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\naddresses.city_town ( Feliciaberg )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\nmountain.country ( Morocco )\nphotos.name ( the mountain )",
  "database schema :\ntable item , columns = [ item.i_id ( integer | primary key | comment : item id ) , item.title ( varchar(20) ) ]\ntable review , columns = [ review.a_id ( integer | primary key ) , review.u_id ( integer | comment : user id ) , review.i_id ( integer | comment : item id ) , review.rating ( integer ) , review.rank ( integer ) ]\ntable useracct , columns = [ useracct.u_id ( integer | primary key | comment : user id ) , useracct.name ( varchar(128) ) ]\ntable trust , columns = [ trust.source_u_id ( integer | comment : source user id ) , trust.target_u_id ( integer | comment : target user id ) , trust.trust ( integer ) ]\nforeign keys :\nreview.i_id = item.i_id\nreview.u_id = useracct.u_id\ntrust.target_u_id = useracct.u_id\ntrust.source_u_id = useracct.u_id\nmatched contents :\nitem.i_id ( 5 )\nreview.a_id ( 5 )\nreview.i_id ( 5 )\nreview.rating ( 5 )\nreview.rank ( 5 )\nuseracct.u_id ( 5 )\ntrust.target_u_id ( 5 )",
  "database schema :\ntable storm , columns = [ storm.storm_id ( int | primary key ) , storm.name ( text ) , storm.dates_active ( text ) , storm.max_speed ( int ) , storm.damage_millions_usd ( real ) , storm.number_deaths ( int ) ]\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_code ( text ) , region.region_name ( text ) ]\ntable affected_region , columns = [ affected_region.region_id ( int | primary key ) , affected_region.storm_id ( int | primary key ) , affected_region.number_city_affected ( real ) ]\nforeign keys :\naffected_region.storm_id = storm.storm_id\naffected_region.region_id = region.region_id\nmatched contents :\nstorm.storm_id ( 10 )\nstorm.name ( Two )\nregion.region_id ( 10 )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents :\ndistrict.district_name ( Khanewal District )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_status_code ( Reported )\nproblem_status_codes.problem_status_code ( Reported )\nproblem_status_codes.problem_status_description ( Reported )\nstaff.staff_last_name ( Bosco )",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents :\nmanagement.temporary_acting ( Yes )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\npapers.title ( Binders Unbound )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\ngrapes.grape ( Zinfandel )\nwine.grape ( Zinfandel )\nwine.name ( Zinfandel )\nwine.year ( 2009 )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nstudents.first_name ( Emma )\nstudents.last_name ( Rohan )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_budget_codes.budget_type_code ( ORG )\ndocuments_with_expenses.budget_type_code ( ORG )",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nmember.member_id ( 3 )\nbranch.branch_id ( 3 )\nmembership_register_branch.member_id ( 3 )\npurchase.member_id ( 3 )\npurchase.branch_id ( 3 )",
  "database schema :\ntable storm , columns = [ storm.storm_id ( int | primary key ) , storm.name ( text ) , storm.dates_active ( text ) , storm.max_speed ( int ) , storm.damage_millions_usd ( real ) , storm.number_deaths ( int ) ]\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_code ( text ) , region.region_name ( text ) ]\ntable affected_region , columns = [ affected_region.region_id ( int | primary key ) , affected_region.storm_id ( int | primary key ) , affected_region.number_city_affected ( real ) ]\nforeign keys :\naffected_region.storm_id = storm.storm_id\naffected_region.region_id = region.region_id\nmatched contents :\nregion.region_name ( Afghanistan , Albania )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\ncatalog_contents.catalog_entry_id ( 8 )\ncatalog_contents.catalog_level_number ( 8 )\ncatalog_contents.previous_entry_id ( 8 )\ncatalog_contents.next_entry_id ( 8 )\ncatalog_contents.capacity ( 8 )\ncatalog_contents.length ( 8 )\ncatalog_contents.height ( 8 )\ncatalog_contents.width ( 8 )\ncatalog_contents_additional_attributes.catalog_entry_id ( 8 )\ncatalog_contents_additional_attributes.catalog_level_number ( 8 )",
  "database schema :\ntable train , columns = [ train.id ( int | primary key ) , train.train_number ( int ) , train.name ( text ) , train.origin ( text ) , train.destination ( text ) , train.time ( text ) , train.interval ( text ) ]\ntable station , columns = [ station.id ( int | primary key ) , station.network_name ( text ) , station.services ( text ) , station.local_authority ( text ) ]\ntable route , columns = [ route.train_id ( int | primary key ) , route.station_id ( int | primary key ) ]\ntable weekly_weather , columns = [ weekly_weather.station_id ( int | primary key ) , weekly_weather.day_of_week ( text | primary key ) , weekly_weather.high_temperature ( int ) , weekly_weather.low_temperature ( int ) , weekly_weather.precipitation ( real ) , weekly_weather.wind_speed_mph ( int ) ]\nforeign keys :\nroute.station_id = station.id\nroute.train_id = train.id\nweekly_weather.station_id = station.id\nmatched contents :\ntrain.origin ( Chennai , Guruvayur )\ntrain.destination ( Chennai , Guruvayur )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartments.apt_id ( 1 )\napartments.bathroom_count ( 1 )\napartment_facilities.apt_id ( 1 )\nguests.guest_id ( 1 )\nview_unit_status.apt_id ( 1 )\nview_unit_status.available_yn ( 1 )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nlocations.location_name ( UK Gallery )\nref_attraction_types.attraction_type_description ( gallery )\ntourist_attractions.name ( UK gallery )",
  "database schema :\ntable roles , columns = [ roles.role_code ( varchar(15) | primary key ) , roles.role_description ( varchar(80) ) ]\ntable users , columns = [ users.user_id ( integer | primary key ) , users.role_code ( varchar(15) ) , users.user_name ( varchar(40) ) , users.user_login ( varchar(40) ) , users.password ( varchar(40) ) ]\ntable document_structures , columns = [ document_structures.document_structure_code ( varchar(15) | primary key ) , document_structures.parent_document_structure_code ( varchar(15) ) , document_structures.document_structure_description ( varchar(80) ) ]\ntable functional_areas , columns = [ functional_areas.functional_area_code ( varchar(15) | primary key ) , functional_areas.parent_functional_area_code ( varchar(15) ) , functional_areas.functional_area_description ( varchar(80) ) ]\ntable images , columns = [ images.image_id ( integer | primary key ) , images.image_alt_text ( varchar(80) ) , images.image_name ( varchar(40) ) , images.image_url ( varchar(255) ) ]\ntable documents , columns = [ documents.document_code ( varchar(15) | primary key ) , documents.document_structure_code ( varchar(15) ) , documents.document_type_code ( varchar(15) ) , documents.access_count ( integer ) , documents.document_name ( varchar(80) ) ]\ntable document_functional_areas , columns = [ document_functional_areas.document_code ( varchar(15) ) , document_functional_areas.functional_area_code ( varchar(15) ) ]\ntable document_sections , columns = [ document_sections.section_id ( integer | primary key ) , document_sections.document_code ( varchar(15) ) , document_sections.section_sequence ( integer ) , document_sections.section_code ( varchar(20) ) , document_sections.section_title ( varchar(80) ) ]\ntable document_sections_images , columns = [ document_sections_images.section_id ( integer | primary key ) , document_sections_images.image_id ( integer | primary key ) ]\nforeign keys :\nusers.role_code = roles.role_code\ndocuments.document_structure_code = document_structures.document_structure_code\ndocument_functional_areas.functional_area_code = functional_areas.functional_area_code\ndocument_functional_areas.document_code = documents.document_code\ndocument_sections.document_code = documents.document_code\ndocument_sections_images.image_id = images.image_id\ndocument_sections_images.section_id = document_sections.section_id\nmatched contents :\nimages.image_alt_text ( Name )\ndocuments.document_type_code ( CV )\ndocuments.document_name ( David CV )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents :\nproduct.product_id ( 5 )\nproduct.max_page_size ( A4 )\nstore.store_id ( 5 )\ndistrict.district_id ( 5 )\nstore_product.store_id ( 5 )\nstore_district.store_id ( 5 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nemployees.employee_name ( Ebba )",
  "database schema :\ntable festival_detail , columns = [ festival_detail.festival_id ( int | primary key ) , festival_detail.festival_name ( text ) , festival_detail.chair_name ( text ) , festival_detail.location ( text ) , festival_detail.year ( int ) , festival_detail.num_of_audience ( int ) ]\ntable artwork , columns = [ artwork.artwork_id ( int | primary key ) , artwork.type ( text ) , artwork.name ( text ) ]\ntable nomination , columns = [ nomination.artwork_id ( int | primary key ) , nomination.festival_id ( int | primary key ) , nomination.result ( text ) ]\nforeign keys :\nnomination.festival_id = festival_detail.festival_id\nnomination.artwork_id = artwork.artwork_id\nmatched contents :\nartwork.type ( Program Talent Show )\nnomination.result ( Nominated )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.state_province_county ( Colorado )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents : None",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergy ( Milk , Cat )\nhas_allergy.allergy ( Milk , Cat )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable customer_policies , columns = [ customer_policies.policy_id ( integer | primary key ) , customer_policies.customer_id ( integer ) , customer_policies.policy_type_code ( char(15) ) , customer_policies.start_date ( date ) , customer_policies.end_date ( date ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.policy_id ( integer ) , claims.date_claim_made ( date ) , claims.date_claim_settled ( date ) , claims.amount_claimed ( integer ) , claims.amount_settled ( integer ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.date_claim_made ( date ) , settlements.date_claim_settled ( date ) , settlements.amount_claimed ( integer ) , settlements.amount_settled ( integer ) , settlements.customer_policy_id ( integer ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.settlement_id ( integer ) , payments.payment_method_code ( varchar(255) ) , payments.date_payment_made ( date ) , payments.amount_payment ( integer ) ]\nforeign keys :\ncustomer_policies.customer_id = customers.customer_id\nclaims.policy_id = customer_policies.policy_id\nsettlements.claim_id = claims.claim_id\npayments.settlement_id = settlements.settlement_id\nmatched contents :\ncustomers.customer_id ( 2 )\ncustomer_policies.customer_id ( 2 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.city_code ( BAL )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nfiles.f_id ( 4 )\nsong.f_id ( 4 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents : None",
  "database schema :\ntable festival_detail , columns = [ festival_detail.festival_id ( int | primary key ) , festival_detail.festival_name ( text ) , festival_detail.chair_name ( text ) , festival_detail.location ( text ) , festival_detail.year ( int ) , festival_detail.num_of_audience ( int ) ]\ntable artwork , columns = [ artwork.artwork_id ( int | primary key ) , artwork.type ( text ) , artwork.name ( text ) ]\ntable nomination , columns = [ nomination.artwork_id ( int | primary key ) , nomination.festival_id ( int | primary key ) , nomination.result ( text ) ]\nforeign keys :\nnomination.festival_id = festival_detail.festival_id\nnomination.artwork_id = artwork.artwork_id\nmatched contents :\nfestival_detail.location ( United States )",
  "database schema :\ntable premises , columns = [ premises.premise_id ( integer | primary key ) , premises.premises_type ( varchar(15) ) , premises.premise_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_category ( varchar(15) ) , products.product_name ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_login ( varchar(80) ) , customers.customer_password ( varchar(10) ) ]\ntable mailshot_campaigns , columns = [ mailshot_campaigns.mailshot_id ( integer | primary key ) , mailshot_campaigns.product_category ( varchar(15) ) , mailshot_campaigns.mailshot_name ( varchar(80) ) , mailshot_campaigns.mailshot_start_date ( datetime ) , mailshot_campaigns.mailshot_end_date ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.premise_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type_code ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(15) ) , customer_orders.shipping_method_code ( varchar(15) ) , customer_orders.order_placed_datetime ( datetime ) , customer_orders.order_delivered_datetime ( datetime ) , customer_orders.order_shipping_charges ( varchar(255) ) ]\ntable mailshot_customers , columns = [ mailshot_customers.mailshot_id ( integer ) , mailshot_customers.customer_id ( integer ) , mailshot_customers.outcome_code ( varchar(15) ) , mailshot_customers.mailshot_customer_date ( datetime ) ]\ntable order_items , columns = [ order_items.item_id ( integer ) , order_items.order_item_status_code ( varchar(15) ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.item_status_code ( varchar(15) ) , order_items.item_delivered_datetime ( datetime ) , order_items.item_order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.premise_id = premises.premise_id\ncustomer_orders.customer_id = customers.customer_id\nmailshot_customers.mailshot_id = mailshot_campaigns.mailshot_id\nmailshot_customers.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\nmailshot_customers.outcome_code ( Order )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\ndocument_types.document_description ( Initial Application , Regular )",
  "database schema :\ntable buildings , columns = [ buildings.id ( int | primary key ) , buildings.name ( text ) , buildings.city ( text ) , buildings.height ( int ) , buildings.stories ( int ) , buildings.status ( text ) ]\ntable companies , columns = [ companies.id ( int | primary key ) , companies.name ( text ) , companies.headquarters ( text ) , companies.industry ( text ) , companies.sales_billion ( real ) , companies.profits_billion ( real ) , companies.assets_billion ( real ) , companies.market_value_billion ( text ) ]\ntable office_locations , columns = [ office_locations.building_id ( int | primary key ) , office_locations.company_id ( int | primary key ) , office_locations.move_in_year ( int ) ]\nforeign keys :\noffice_locations.company_id = companies.id\noffice_locations.building_id = buildings.id\nmatched contents :\ncompanies.industry ( Conglomerate , Banking )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nstudent.age ( 20 )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\ntourist_attractions.how_to_get_there ( walk , bus )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nplayer.birth_state ( NY )\nplayer.death_state ( NY )\nplayer.name_last ( Show , Parks )\npark.state ( NY )\ncollege.state ( NY )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nmediatype.name ( AAC audio file )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.last_name ( Peeters )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_product_categories.product_category_code ( Herbs )\nref_product_categories.product_category_description ( Herbs )\nproducts.product_category_code ( Herbs )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.major ( 600 )\nclub.clubname ( Bootup Baltimore )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nreviewer.name ( Brittany Harris )",
  "database schema :\ntable school , columns = [ school.school_id ( int | primary key ) , school.school ( text ) , school.location ( text ) , school.enrollment ( real ) , school.founded ( real ) , school.denomination ( text ) , school.boys_or_girls ( text ) , school.day_or_boarding ( text ) , school.year_entered_competition ( real ) , school.school_colors ( text ) ]\ntable school_details , columns = [ school_details.school_id ( int | primary key ) , school_details.nickname ( text ) , school_details.colors ( text ) , school_details.league ( text ) , school_details.class ( text ) , school_details.division ( text ) ]\ntable school_performance , columns = [ school_performance.school_id ( int | primary key ) , school_performance.school_year ( text | primary key ) , school_performance.class_a ( text ) , school_performance.class_aa ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.team ( text ) , player.age ( int ) , player.position ( text ) , player.school_id ( int ) ]\nforeign keys :\nschool_details.school_id = school.school_id\nschool_performance.school_id = school.school_id\nplayer.school_id = school.school_id\nmatched contents :\nschool.school_id ( 1 )\nschool_details.school_id ( 1 )\nschool_performance.school_id ( 1 )\nplayer.player_id ( 1 )\nplayer.school_id ( 1 )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nartist.country ( UK )\nartist.gender ( Male )\nsong.country ( UK )",
  "database schema :\ntable player_attributes , columns = [ player_attributes.id ( integer | primary key ) , player_attributes.player_fifa_api_id ( integer ) , player_attributes.player_api_id ( integer ) , player_attributes.date ( text ) , player_attributes.overall_rating ( integer ) , player_attributes.potential ( integer ) , player_attributes.preferred_foot ( text ) , player_attributes.attacking_work_rate ( text ) , player_attributes.defensive_work_rate ( text ) , player_attributes.crossing ( integer ) , player_attributes.finishing ( integer ) , player_attributes.heading_accuracy ( integer ) , player_attributes.short_passing ( integer ) , player_attributes.volleys ( integer ) , player_attributes.dribbling ( integer ) , player_attributes.curve ( integer ) , player_attributes.free_kick_accuracy ( integer ) , player_attributes.long_passing ( integer ) , player_attributes.ball_control ( integer ) , player_attributes.acceleration ( integer ) , player_attributes.sprint_speed ( integer ) , player_attributes.agility ( integer ) , player_attributes.reactions ( integer ) , player_attributes.balance ( integer ) , player_attributes.shot_power ( integer ) , player_attributes.jumping ( integer ) , player_attributes.stamina ( integer ) , player_attributes.strength ( integer ) , player_attributes.long_shots ( integer ) , player_attributes.aggression ( integer ) , player_attributes.interceptions ( integer ) , player_attributes.positioning ( integer ) , player_attributes.vision ( integer ) , player_attributes.penalties ( integer ) , player_attributes.marking ( integer ) , player_attributes.standing_tackle ( integer ) , player_attributes.sliding_tackle ( integer ) , player_attributes.gk_diving ( integer ) , player_attributes.gk_handling ( integer ) , player_attributes.gk_kicking ( integer ) , player_attributes.gk_positioning ( integer ) , player_attributes.gk_reflexes ( integer ) ]\ntable player , columns = [ player.id ( integer | primary key ) , player.player_api_id ( integer ) , player.player_name ( text ) , player.player_fifa_api_id ( integer ) , player.birthday ( text ) , player.height ( integer ) , player.weight ( integer ) ]\ntable league , columns = [ league.id ( integer | primary key ) , league.country_id ( integer ) , league.name ( text ) ]\ntable country , columns = [ country.id ( integer | primary key ) , country.name ( text ) ]\ntable team , columns = [ team.id ( integer | primary key ) , team.team_api_id ( integer ) , team.team_fifa_api_id ( integer ) , team.team_long_name ( text ) , team.team_short_name ( text ) ]\ntable team_attributes , columns = [ team_attributes.id ( integer | primary key ) , team_attributes.team_fifa_api_id ( integer ) , team_attributes.team_api_id ( integer ) , team_attributes.date ( text ) , team_attributes.buildupplayspeed ( integer ) , team_attributes.buildupplayspeedclass ( text ) , team_attributes.buildupplaydribbling ( integer ) , team_attributes.buildupplaydribblingclass ( text ) , team_attributes.buildupplaypassing ( integer ) , team_attributes.buildupplaypassingclass ( text ) , team_attributes.buildupplaypositioningclass ( text ) , team_attributes.chancecreationpassing ( integer ) , team_attributes.chancecreationpassingclass ( text ) , team_attributes.chancecreationcrossing ( integer ) , team_attributes.chancecreationcrossingclass ( text ) , team_attributes.chancecreationshooting ( integer ) , team_attributes.chancecreationshootingclass ( text ) , team_attributes.chancecreationpositioningclass ( text ) , team_attributes.defencepressure ( integer ) , team_attributes.defencepressureclass ( text ) , team_attributes.defenceaggression ( integer ) , team_attributes.defenceaggressionclass ( text ) , team_attributes.defenceteamwidth ( integer ) , team_attributes.defenceteamwidthclass ( text ) , team_attributes.defencedefenderlineclass ( text ) ]\nforeign keys :\nplayer_attributes.player_api_id = player.player_api_id\nplayer_attributes.player_fifa_api_id = player.player_fifa_api_id\nleague.country_id = country.id\nteam_attributes.team_api_id = team.team_api_id\nteam_attributes.team_fifa_api_id = team.team_fifa_api_id\nmatched contents : None",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\nphysician.name ( John Dorian )",
  "database schema :\ntable phone , columns = [ phone.name ( text ) , phone.phone_id ( int | primary key ) , phone.memory_in_g ( int ) , phone.carrier ( text ) , phone.price ( real ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.district ( text ) , market.num_of_employees ( int ) , market.num_of_shops ( real ) , market.ranking ( int ) ]\ntable phone_market , columns = [ phone_market.market_id ( int | primary key ) , phone_market.phone_id ( text | primary key ) , phone_market.num_of_stock ( int ) ]\nforeign keys :\nphone_market.phone_id = phone.phone_id\nphone_market.market_id = market.market_id\nmatched contents : None",
  "database schema :\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.address ( text ) , shop.num_of_staff ( text ) , shop.score ( real ) , shop.open_year ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.membership_card ( text ) , member.age ( int ) , member.time_of_purchase ( int ) , member.level_of_membership ( int ) , member.address ( text ) ]\ntable happy_hour , columns = [ happy_hour.hh_id ( int | primary key ) , happy_hour.shop_id ( int | primary key ) , happy_hour.month ( text | primary key ) , happy_hour.num_of_shaff_in_charge ( int ) ]\ntable happy_hour_member , columns = [ happy_hour_member.hh_id ( int | primary key ) , happy_hour_member.member_id ( int | primary key ) , happy_hour_member.total_amount ( real ) ]\nforeign keys :\nhappy_hour.shop_id = shop.shop_id\nhappy_hour_member.member_id = member.member_id\nmatched contents :\nshop.shop_id ( 5 )\nmember.member_id ( 5 )\nmember.level_of_membership ( 5 )\nhappy_hour.hh_id ( 5 )\nhappy_hour.shop_id ( 5 )\nhappy_hour.num_of_shaff_in_charge ( 5 )\nhappy_hour_member.hh_id ( 5 )\nhappy_hour_member.member_id ( 5 )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nstudent.lname ( Kim )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nphone.company_name ( Nokia Corporation )",
  "database schema :\ntable publication , columns = [ publication.publication_id ( int | primary key ) , publication.book_id ( int ) , publication.publisher ( text ) , publication.publication_date ( text ) , publication.price ( real ) ]\ntable book , columns = [ book.book_id ( int | primary key ) , book.title ( text ) , book.issues ( real ) , book.writer ( text ) ]\nforeign keys :\npublication.book_id = book.book_id\nmatched contents :\nbook.writer ( Elaine Lee )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\nemployees.employee_id ( 163 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nvideo_games.gtype ( Collectible card game )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ndegrees.year ( 2004 )\ndiscipline_enrollments.year ( 2004 )\ndiscipline_enrollments.undergraduate ( 600 )\nenrollments.year ( 2004 )\nfaculty.year ( 2004 )",
  "database schema :\ntable third_party_companies , columns = [ third_party_companies.company_id ( integer | primary key ) , third_party_companies.company_type ( varchar(5) ) , third_party_companies.company_name ( varchar(255) ) , third_party_companies.company_address ( varchar(255) ) , third_party_companies.other_company_details ( varchar(255) ) ]\ntable maintenance_contracts , columns = [ maintenance_contracts.maintenance_contract_id ( integer | primary key ) , maintenance_contracts.maintenance_contract_company_id ( integer ) , maintenance_contracts.contract_start_date ( datetime ) , maintenance_contracts.contract_end_date ( datetime ) , maintenance_contracts.other_contract_details ( varchar(255) ) ]\ntable parts , columns = [ parts.part_id ( integer | primary key ) , parts.part_name ( varchar(255) ) , parts.chargeable_yn ( varchar(1) ) , parts.chargeable_amount ( varchar(20) ) , parts.other_part_details ( varchar(255) ) ]\ntable skills , columns = [ skills.skill_id ( integer | primary key ) , skills.skill_code ( varchar(20) ) , skills.skill_description ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_name ( varchar(255) ) , staff.gender ( varchar(1) ) , staff.other_staff_details ( varchar(255) ) ]\ntable assets , columns = [ assets.asset_id ( integer | primary key ) , assets.maintenance_contract_id ( integer ) , assets.supplier_company_id ( integer ) , assets.asset_details ( varchar(255) ) , assets.asset_make ( varchar(20) ) , assets.asset_model ( varchar(20) ) , assets.asset_acquired_date ( datetime ) , assets.asset_disposed_date ( datetime ) , assets.other_asset_details ( varchar(255) ) ]\ntable asset_parts , columns = [ asset_parts.asset_id ( integer ) , asset_parts.part_id ( integer ) ]\ntable maintenance_engineers , columns = [ maintenance_engineers.engineer_id ( integer | primary key ) , maintenance_engineers.company_id ( integer ) , maintenance_engineers.first_name ( varchar(50) ) , maintenance_engineers.last_name ( varchar(50) ) , maintenance_engineers.other_details ( varchar(255) ) ]\ntable engineer_skills , columns = [ engineer_skills.engineer_id ( integer ) , engineer_skills.skill_id ( integer ) ]\ntable fault_log , columns = [ fault_log.fault_log_entry_id ( integer | primary key ) , fault_log.asset_id ( integer ) , fault_log.recorded_by_staff_id ( integer ) , fault_log.fault_log_entry_datetime ( datetime ) , fault_log.fault_description ( varchar(255) ) , fault_log.other_fault_details ( varchar(255) ) ]\ntable engineer_visits , columns = [ engineer_visits.engineer_visit_id ( integer | primary key ) , engineer_visits.contact_staff_id ( integer ) , engineer_visits.engineer_id ( integer ) , engineer_visits.fault_log_entry_id ( integer ) , engineer_visits.fault_status ( varchar(10) ) , engineer_visits.visit_start_datetime ( datetime ) , engineer_visits.visit_end_datetime ( datetime ) , engineer_visits.other_visit_details ( varchar(255) ) ]\ntable part_faults , columns = [ part_faults.part_fault_id ( integer | primary key ) , part_faults.part_id ( integer ) , part_faults.fault_short_name ( varchar(20) ) , part_faults.fault_description ( varchar(255) ) , part_faults.other_fault_details ( varchar(255) ) ]\ntable fault_log_parts , columns = [ fault_log_parts.fault_log_entry_id ( integer ) , fault_log_parts.part_fault_id ( integer ) , fault_log_parts.fault_status ( varchar(10) ) ]\ntable skills_required_to_fix , columns = [ skills_required_to_fix.part_fault_id ( integer ) , skills_required_to_fix.skill_id ( integer ) ]\nforeign keys :\nmaintenance_contracts.maintenance_contract_company_id = third_party_companies.company_id\nassets.supplier_company_id = third_party_companies.company_id\nassets.maintenance_contract_id = maintenance_contracts.maintenance_contract_id\nasset_parts.asset_id = assets.asset_id\nasset_parts.part_id = parts.part_id\nmaintenance_engineers.company_id = third_party_companies.company_id\nengineer_skills.skill_id = skills.skill_id\nengineer_skills.engineer_id = maintenance_engineers.engineer_id\nfault_log.recorded_by_staff_id = staff.staff_id\nfault_log.asset_id = assets.asset_id\nengineer_visits.contact_staff_id = staff.staff_id\nengineer_visits.engineer_id = maintenance_engineers.engineer_id\nengineer_visits.fault_log_entry_id = fault_log.fault_log_entry_id\npart_faults.part_id = parts.part_id\nfault_log_parts.fault_log_entry_id = fault_log.fault_log_entry_id\nfault_log_parts.part_fault_id = part_faults.part_fault_id\nskills_required_to_fix.skill_id = skills.skill_id\nskills_required_to_fix.part_fault_id = part_faults.part_fault_id\nmatched contents :\nthird_party_companies.company_type ( Maintenance Contractor )\nassets.asset_id ( 2 )\nassets.maintenance_contract_id ( 2 )\nassets.supplier_company_id ( 2 )\nasset_parts.asset_id ( 2 )\nasset_parts.part_id ( 2 )\nengineer_skills.engineer_id ( 2 )\nengineer_skills.skill_id ( 2 )\nengineer_visits.engineer_visit_id ( 2 )\nengineer_visits.contact_staff_id ( 2 )\nengineer_visits.fault_log_entry_id ( 2 )",
  "database schema :\ntable club , columns = [ club.club_id ( int | primary key ) , club.name ( text ) , club.region ( text ) , club.start_year ( text ) ]\ntable club_rank , columns = [ club_rank.rank ( real | primary key ) , club_rank.club_id ( int | primary key ) , club_rank.gold ( real ) , club_rank.silver ( real ) , club_rank.bronze ( real ) , club_rank.total ( real ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.name ( text ) , player.position ( text ) , player.club_id ( int ) , player.apps ( real ) , player.tries ( real ) , player.goals ( text ) , player.points ( real ) ]\ntable competition , columns = [ competition.competition_id ( int | primary key ) , competition.year ( real ) , competition.competition_type ( text ) , competition.country ( text ) ]\ntable competition_result , columns = [ competition_result.competition_id ( int | primary key ) , competition_result.club_id_1 ( int | primary key ) , competition_result.club_id_2 ( int | primary key ) , competition_result.score ( text ) ]\nforeign keys :\nclub_rank.club_id = club.club_id\nplayer.club_id = club.club_id\ncompetition_result.competition_id = competition.competition_id\ncompetition_result.club_id_2 = club.club_id\ncompetition_result.club_id_1 = club.club_id\nmatched contents :\nplayer.position ( Right Wing )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nproducts.price ( 120 )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\nproducts_for_hire.product_type_code ( Cutlery )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Comp. Sci. )\ncourse.dept_name ( Comp. Sci. )\ninstructor.dept_name ( Comp. Sci. )\nstudent.dept_name ( Comp. Sci. )",
  "database schema :\ntable works_on , columns = [ works_on.essn ( integer | primary key | comment : employee ssn ) , works_on.pno ( integer | primary key | comment : project number ) , works_on.hours ( real ) ]\ntable employee , columns = [ employee.fname ( text | comment : first name ) , employee.minit ( text ) , employee.lname ( text | comment : last name ) , employee.ssn ( integer | primary key ) , employee.bdate ( text | comment : birth date ) , employee.address ( text ) , employee.sex ( text ) , employee.salary ( integer ) , employee.super_ssn ( integer ) , employee.dno ( integer | comment : department no ) ]\ntable department , columns = [ department.dname ( text | comment : department name ) , department.dnumber ( integer | primary key | comment : department number ) , department.mgr_ssn ( integer | comment : manager ssn ) , department.mgr_start_date ( text | comment : manager start date ) ]\ntable project , columns = [ project.pname ( text | comment : dependent name ) , project.pnumber ( integer | primary key | comment : dependent number ) , project.plocation ( text | comment : dependent location ) , project.dnum ( integer | comment : department number ) ]\ntable dependent , columns = [ dependent.essn ( integer | primary key | comment : employee ssn ) , dependent.dependent_name ( text | primary key ) , dependent.sex ( text ) , dependent.bdate ( text | comment : birth date ) , dependent.relationship ( text ) ]\ntable dept_locations , columns = [ dept_locations.dnumber ( integer | primary key | comment : department number ) , dept_locations.dlocation ( text | primary key | comment : department location ) ]\nforeign keys : None\nmatched contents :\nemployee.salary ( 30000 )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\nfilm.title ( AIRPORT POLLOCK )",
  "database schema :\ntable roles , columns = [ roles.role_code ( varchar(15) | primary key ) , roles.role_description ( varchar(80) ) ]\ntable users , columns = [ users.user_id ( integer | primary key ) , users.role_code ( varchar(15) ) , users.user_name ( varchar(40) ) , users.user_login ( varchar(40) ) , users.password ( varchar(40) ) ]\ntable document_structures , columns = [ document_structures.document_structure_code ( varchar(15) | primary key ) , document_structures.parent_document_structure_code ( varchar(15) ) , document_structures.document_structure_description ( varchar(80) ) ]\ntable functional_areas , columns = [ functional_areas.functional_area_code ( varchar(15) | primary key ) , functional_areas.parent_functional_area_code ( varchar(15) ) , functional_areas.functional_area_description ( varchar(80) ) ]\ntable images , columns = [ images.image_id ( integer | primary key ) , images.image_alt_text ( varchar(80) ) , images.image_name ( varchar(40) ) , images.image_url ( varchar(255) ) ]\ntable documents , columns = [ documents.document_code ( varchar(15) | primary key ) , documents.document_structure_code ( varchar(15) ) , documents.document_type_code ( varchar(15) ) , documents.access_count ( integer ) , documents.document_name ( varchar(80) ) ]\ntable document_functional_areas , columns = [ document_functional_areas.document_code ( varchar(15) ) , document_functional_areas.functional_area_code ( varchar(15) ) ]\ntable document_sections , columns = [ document_sections.section_id ( integer | primary key ) , document_sections.document_code ( varchar(15) ) , document_sections.section_sequence ( integer ) , document_sections.section_code ( varchar(20) ) , document_sections.section_title ( varchar(80) ) ]\ntable document_sections_images , columns = [ document_sections_images.section_id ( integer | primary key ) , document_sections_images.image_id ( integer | primary key ) ]\nforeign keys :\nusers.role_code = roles.role_code\ndocuments.document_structure_code = document_structures.document_structure_code\ndocument_functional_areas.functional_area_code = functional_areas.functional_area_code\ndocument_functional_areas.document_code = documents.document_code\ndocument_sections.document_code = documents.document_code\ndocument_sections_images.image_id = images.image_id\ndocument_sections_images.section_id = document_sections.section_id\nmatched contents :\ndocuments.document_type_code ( CV )\ndocuments.document_name ( David CV )",
  "database schema :\ntable railway , columns = [ railway.railway_id ( int | primary key ) , railway.railway ( text ) , railway.builder ( text ) , railway.built ( text ) , railway.wheels ( text ) , railway.location ( text ) , railway.objectnumber ( text ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.train_num ( text ) , train.name ( text ) , train.from ( text ) , train.arrival ( text ) , train.railway_id ( int ) ]\ntable manager , columns = [ manager.manager_id ( int | primary key ) , manager.name ( text ) , manager.country ( text ) , manager.working_year_starts ( text ) , manager.age ( int ) , manager.level ( int ) ]\ntable railway_manage , columns = [ railway_manage.railway_id ( int | primary key ) , railway_manage.manager_id ( int | primary key ) , railway_manage.from_year ( text ) ]\nforeign keys :\ntrain.railway_id = railway.railway_id\nrailway_manage.railway_id = railway.railway_id\nrailway_manage.manager_id = manager.manager_id\nmatched contents :\ntrain.name ( Andaman Exp )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ncollege.state ( LA )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nref_document_types.document_type_code ( CV )\nref_document_types.document_type_name ( CV )\nall_documents.document_type_code ( CV )\nall_documents.document_name ( Robin CV )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nphotos.name ( game1 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\ncustomers.first_name ( Rylan )\ncustomers.last_name ( Goodwin )\nlessons.lesson_status_code ( Completed )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nactivity.activity_name ( Canoeing , Kayaking )\nfaculty.rank ( Professor )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.city_code ( HOU )",
  "database schema :\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(20) ) , products.product_price ( decimal(19,4) ) , products.product_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(10) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.date_became_customer ( datetime ) ]\ntable regular_orders , columns = [ regular_orders.regular_order_id ( integer | primary key ) , regular_orders.distributer_id ( integer ) ]\ntable regular_order_products , columns = [ regular_order_products.regular_order_id ( integer ) , regular_order_products.product_id ( integer ) ]\ntable actual_orders , columns = [ actual_orders.actual_order_id ( integer | primary key ) , actual_orders.order_status_code ( varchar(10) ) , actual_orders.regular_order_id ( integer ) , actual_orders.actual_order_date ( datetime ) ]\ntable actual_order_products , columns = [ actual_order_products.actual_order_id ( integer ) , actual_order_products.product_id ( integer ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_from ( datetime ) , customer_addresses.address_type ( varchar(10) ) , customer_addresses.date_to ( datetime ) ]\ntable delivery_routes , columns = [ delivery_routes.route_id ( integer | primary key ) , delivery_routes.route_name ( varchar(50) ) , delivery_routes.other_route_details ( varchar(255) ) ]\ntable delivery_route_locations , columns = [ delivery_route_locations.location_code ( varchar(10) | primary key ) , delivery_route_locations.route_id ( integer ) , delivery_route_locations.location_address_id ( integer ) , delivery_route_locations.location_name ( varchar(50) ) ]\ntable trucks , columns = [ trucks.truck_id ( integer | primary key ) , trucks.truck_licence_number ( varchar(20) ) , trucks.truck_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.employee_address_id ( integer ) , employees.employee_name ( varchar(80) ) , employees.employee_phone ( varchar(80) ) ]\ntable order_deliveries , columns = [ order_deliveries.location_code ( varchar(10) ) , order_deliveries.actual_order_id ( integer ) , order_deliveries.delivery_status_code ( varchar(10) ) , order_deliveries.driver_employee_id ( integer ) , order_deliveries.truck_id ( integer ) , order_deliveries.delivery_date ( datetime ) ]\nforeign keys :\nregular_orders.distributer_id = customers.customer_id\nregular_order_products.regular_order_id = regular_orders.regular_order_id\nregular_order_products.product_id = products.product_id\nactual_orders.regular_order_id = regular_orders.regular_order_id\nactual_order_products.actual_order_id = actual_orders.actual_order_id\nactual_order_products.product_id = products.product_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ndelivery_route_locations.route_id = delivery_routes.route_id\ndelivery_route_locations.location_address_id = addresses.address_id\nemployees.employee_address_id = addresses.address_id\norder_deliveries.driver_employee_id = employees.employee_id\norder_deliveries.location_code = delivery_route_locations.location_code\norder_deliveries.actual_order_id = actual_orders.actual_order_id\norder_deliveries.truck_id = trucks.truck_id\nmatched contents : None",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.age ( int ) , people.name ( text ) , people.nationality ( text ) , people.graduation_college ( text ) ]\ntable company , columns = [ company.company_id ( real | primary key ) , company.name ( text ) , company.headquarters ( text ) , company.industry ( text ) , company.sales_in_billion ( real ) , company.profits_in_billion ( real ) , company.assets_in_billion ( real ) , company.market_value_in_billion ( real ) ]\ntable employment , columns = [ employment.company_id ( int | primary key ) , employment.people_id ( int | primary key ) , employment.year_working ( int ) ]\nforeign keys :\nemployment.people_id = people.people_id\nemployment.company_id = company.company_id\nmatched contents :\ncompany.industry ( Oil and gas , Banking )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nsection.year ( 2008 )\nteaches.year ( 2008 )\ntakes.year ( 2008 )",
  "database schema :\ntable school , columns = [ school.school_id ( text | primary key ) , school.school_name ( text ) , school.location ( text ) , school.mascot ( text ) , school.enrollment ( int ) , school.ihsaa_class ( text ) , school.ihsaa_football_class ( text ) , school.county ( text ) ]\ntable budget , columns = [ budget.school_id ( int | primary key ) , budget.year ( int | primary key ) , budget.budgeted ( int ) , budget.total_budget_percent_budgeted ( real ) , budget.invested ( int ) , budget.total_budget_percent_invested ( real ) , budget.budget_invested_percent ( text ) ]\ntable endowment , columns = [ endowment.endowment_id ( int | primary key ) , endowment.school_id ( int ) , endowment.donator_name ( text ) , endowment.amount ( real ) ]\nforeign keys :\nbudget.school_id = school.school_id\nendowment.school_id = school.school_id\nmatched contents :\nbudget.year ( 2002 )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\ncamera_lens.brand ( Olympus , Sigma )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\ndocuments.document_id ( 3 )\ngrants.grant_id ( 3 )\ngrants.organisation_id ( 3 )\norganisations.organisation_id ( 3 )\nproject_outcomes.project_id ( 3 )\nproject_staff.project_id ( 3 )\nprojects.project_id ( 3 )\nprojects.organisation_id ( 3 )\nprojects.project_details ( omnis )\nresearch_staff.staff_id ( 3 )\nresearch_staff.employer_organisation_id ( 3 )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nstudent.age ( 20 )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nenroll.enroll_grade ( C )\nstudent.stu_init ( C )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\nenrollments.year ( 1935 , 1939 )\nenrollments.totalenrollment_ay ( 1939 )",
  "database schema :\ntable manufacturer , columns = [ manufacturer.manufacturer_id ( int | primary key ) , manufacturer.open_year ( real ) , manufacturer.name ( text ) , manufacturer.num_of_factories ( int ) , manufacturer.num_of_shops ( int ) ]\ntable furniture , columns = [ furniture.furniture_id ( int | primary key ) , furniture.name ( text ) , furniture.num_of_component ( int ) , furniture.market_rate ( real ) ]\ntable furniture_manufacte , columns = [ furniture_manufacte.manufacturer_id ( int | primary key ) , furniture_manufacte.furniture_id ( int | primary key ) , furniture_manufacte.price_in_dollar ( real ) ]\nforeign keys :\nfurniture_manufacte.furniture_id = furniture.furniture_id\nfurniture_manufacte.manufacturer_id = manufacturer.manufacturer_id\nmatched contents :\nmanufacturer.manufacturer_id ( 2 )\nmanufacturer.num_of_shops ( 2 )\nfurniture.furniture_id ( 2 )\nfurniture_manufacte.furniture_id ( 2 )",
  "database schema :\ntable company , columns = [ company.company_id ( int | primary key ) , company.rank ( int ) , company.company ( text ) , company.headquarters ( text ) , company.main_industry ( text ) , company.sales_billion ( real ) , company.profits_billion ( real ) , company.assets_billion ( real ) , company.market_value ( real ) ]\ntable gas_station , columns = [ gas_station.station_id ( int | primary key ) , gas_station.open_year ( int ) , gas_station.location ( text ) , gas_station.manager_name ( text ) , gas_station.vice_manager_name ( text ) , gas_station.representative_name ( text ) ]\ntable station_company , columns = [ station_company.station_id ( int | primary key ) , station_company.company_id ( int | primary key ) , station_company.rank_of_the_year ( int ) ]\nforeign keys :\nstation_company.company_id = company.company_id\nstation_company.station_id = gas_station.station_id\nmatched contents :\ngas_station.open_year ( 2000 , 2005 )",
  "database schema :\ntable basketball_match , columns = [ basketball_match.team_id ( int | primary key ) , basketball_match.school_id ( int ) , basketball_match.team_name ( text ) , basketball_match.acc_regular_season ( text ) , basketball_match.acc_percent ( text ) , basketball_match.acc_home ( text ) , basketball_match.acc_road ( text ) , basketball_match.all_games ( text ) , basketball_match.all_games_percent ( int ) , basketball_match.all_home ( text ) , basketball_match.all_road ( text ) , basketball_match.all_neutral ( text ) ]\ntable university , columns = [ university.school_id ( int | primary key ) , university.school ( text ) , university.location ( text ) , university.founded ( real ) , university.affiliation ( text ) , university.enrollment ( real ) , university.nickname ( text ) , university.primary_conference ( text ) ]\nforeign keys :\nbasketball_match.school_id = university.school_id\nmatched contents :\nuniversity.affiliation ( Public )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.age ( int ) , people.name ( text ) , people.nationality ( text ) , people.graduation_college ( text ) ]\ntable company , columns = [ company.company_id ( real | primary key ) , company.name ( text ) , company.headquarters ( text ) , company.industry ( text ) , company.sales_in_billion ( real ) , company.profits_in_billion ( real ) , company.assets_in_billion ( real ) , company.market_value_in_billion ( real ) ]\ntable employment , columns = [ employment.company_id ( int | primary key ) , employment.people_id ( int | primary key ) , employment.year_working ( int ) ]\nforeign keys :\nemployment.people_id = people.people_id\nemployment.company_id = company.company_id\nmatched contents : None",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.game_num ( 1 )\nall_star.gp ( 1 )\nall_star.starting_pos ( 1 )\nappearances.year ( 1885 )\nappearances.g_all ( 1 )\nappearances.g_batting ( 1 )\nappearances.g_c ( 1 )\nappearances.g_1b ( 1 )\nappearances.g_2b ( 1 )\nappearances.g_3b ( 1 )\nappearances.g_cf ( 1 )\nbatting.year ( 1885 )\nbatting_postseason.year ( 1885 )\nfielding.year ( 1885 )\nfielding.inn_outs ( 1885 )\nfielding_outfield.year ( 1885 )\nhome_game.year ( 1885 )\nmanager.year ( 1885 )\npitching.year ( 1885 )\npitching_postseason.year ( 1885 )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.department_id ( 80 )\nemployees.department_id ( 80 )\njob_history.department_id ( 80 )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.title ( text ) , film.studio ( text ) , film.director ( text ) , film.gross_in_dollar ( int ) ]\ntable market , columns = [ market.market_id ( int | primary key ) , market.country ( text ) , market.number_cities ( int ) ]\ntable film_market_estimation , columns = [ film_market_estimation.estimation_id ( int | primary key ) , film_market_estimation.low_estimate ( real ) , film_market_estimation.high_estimate ( real ) , film_market_estimation.film_id ( int ) , film_market_estimation.type ( text ) , film_market_estimation.market_id ( int ) , film_market_estimation.year ( int ) ]\nforeign keys :\nfilm_market_estimation.market_id = market.market_id\nfilm_market_estimation.film_id = film.film_id\nmatched contents :\nfilm.director ( Nicholas Meyer , Walter Hill )",
  "database schema :\ntable workshop , columns = [ workshop.workshop_id ( int | primary key ) , workshop.date ( text ) , workshop.venue ( text ) , workshop.name ( text ) ]\ntable submission , columns = [ submission.submission_id ( int | primary key ) , submission.scores ( real ) , submission.author ( text ) , submission.college ( text ) ]\ntable acceptance , columns = [ acceptance.submission_id ( int | primary key ) , acceptance.workshop_id ( int | primary key ) , acceptance.result ( text ) ]\nforeign keys :\nacceptance.workshop_id = workshop.workshop_id\nacceptance.submission_id = submission.submission_id\nmatched contents : None",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.first_name ( Roberto )\ncustomers.last_name ( Almeida )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\nstudent.major ( 100 )\ndorm.dormid ( 100 )\nhas_amenity.dormid ( 100 )\nlives_in.dormid ( 100 )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartments.apt_id ( 1 )\napartments.bathroom_count ( 1 )\napartment_facilities.apt_id ( 1 )\nguests.guest_id ( 1 )\nview_unit_status.apt_id ( 1 )\nview_unit_status.available_yn ( 0 , 1 )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\ncharacteristics.characteristic_name ( warm )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.city ( Chicago )\ninvoices.billing_city ( Chicago )\ntracks.name ( Money )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\nactor.actor_id ( 3 )\naddress.address_id ( 3 )\naddress.city_id ( 3 )\naddress.postal_code ( 3 )\ncategory.category_id ( 3 )\ncity.city_id ( 3 )\ncity.country_id ( 3 )\ncountry.country_id ( 3 )\ncustomer.customer_id ( 3 )\nfilm.film_id ( 3 )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\ncustomer.first_name ( LINDA )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nfiles.f_id ( 4 )\nsong.f_id ( 4 )\nsong.languages ( english )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nbookings.status_code ( stop )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.address_id ( 5 )\ncustomers.customer_id ( 5 )\ncustomer_addresses.customer_id ( 5 )\ncustomer_addresses.address_id ( 5 )\ncustomer_contact_channels.customer_id ( 5 )\ncustomer_orders.order_id ( 5 )\ncustomer_orders.customer_id ( 5 )\norder_items.order_id ( 5 )\norder_items.order_quantity ( 5 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\ncourse.credits ( 1 )\ncourse.hours ( 1 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nclub.clubname ( Pen and Paper Gaming )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\ndepartment.dept_name ( Accounting )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nmovie.title ( Gone with the Wind )",
  "database schema :\ntable candidate , columns = [ candidate.candidate_id ( int | primary key ) , candidate.people_id ( int ) , candidate.poll_source ( text ) , candidate.date ( text ) , candidate.support_rate ( real ) , candidate.consider_rate ( real ) , candidate.oppose_rate ( real ) , candidate.unsure_rate ( real ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.sex ( text ) , people.name ( text ) , people.date_of_birth ( text ) , people.height ( real ) , people.weight ( real ) ]\nforeign keys :\ncandidate.people_id = people.people_id\nmatched contents : None",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_budget_codes , columns = [ ref_budget_codes.budget_type_code ( char(15) | primary key ) , ref_budget_codes.budget_type_description ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.project_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( char(15) ) , documents.project_id ( integer ) , documents.document_date ( datetime ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable statements , columns = [ statements.statement_id ( integer | primary key ) , statements.statement_details ( varchar(255) ) ]\ntable documents_with_expenses , columns = [ documents_with_expenses.document_id ( integer | primary key ) , documents_with_expenses.budget_type_code ( char(15) ) , documents_with_expenses.document_details ( varchar(255) ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.statement_id ( integer ) , accounts.account_details ( varchar(255) ) ]\nforeign keys :\ndocuments.project_id = projects.project_id\ndocuments.document_type_code = ref_document_types.document_type_code\nstatements.statement_id = documents.document_id\ndocuments_with_expenses.document_id = documents.document_id\ndocuments_with_expenses.budget_type_code = ref_budget_codes.budget_type_code\naccounts.statement_id = statements.statement_id\nmatched contents :\nref_document_types.document_type_code ( CV )\nref_document_types.document_type_name ( Book , CV )\ndocuments.document_type_code ( CV )\ndocuments.document_name ( Noel CV , King Book )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents : None",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergy ( Cat )\nhas_allergy.allergy ( Cat )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\ntrip.duration ( 100 )\nweather.max_humidity ( 100 )\nweather.max_wind_speed_mph ( 100 )\nweather.wind_dir_degrees ( 100 )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_colors.color_description ( red )\ncharacteristics.characteristic_name ( slow )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Statistics )\ncourse.dept_name ( Statistics )\ninstructor.dept_name ( Statistics )\nstudent.dept_name ( Statistics )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.country ( text ) , people.is_male ( text ) , people.age ( int ) ]\ntable church , columns = [ church.church_id ( int | primary key ) , church.name ( text ) , church.organized_by ( text ) , church.open_date ( int ) , church.continuation_of ( text ) ]\ntable wedding , columns = [ wedding.church_id ( int | primary key ) , wedding.male_id ( int | primary key ) , wedding.female_id ( int | primary key ) , wedding.year ( int ) ]\nforeign keys :\nwedding.female_id = people.people_id\nwedding.male_id = people.people_id\nwedding.church_id = church.church_id\nmatched contents :\nchurch.open_date ( 1830 , 1840 )",
  "database schema :\ntable captain , columns = [ captain.captain_id ( int | primary key ) , captain.name ( text ) , captain.ship_id ( int ) , captain.age ( text ) , captain.class ( text ) , captain.rank ( text ) ]\ntable ship , columns = [ ship.ship_id ( int | primary key ) , ship.name ( text ) , ship.type ( text ) , ship.built_year ( real ) , ship.class ( text ) , ship.flag ( text ) ]\nforeign keys :\ncaptain.ship_id = ship.ship_id\nmatched contents :\ncaptain.rank ( Midshipman )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.first_name ( Lucas )\ncustomers.last_name ( Mancini )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairlines.callsign ( CITY )",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents :\nmedicine.fda_approved ( Yes )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nclub.clubname ( Bootup Baltimore )\nmember_of_club.position ( President )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nemployees.employee_name ( Koby )",
  "database schema :\ntable roles , columns = [ roles.role_code ( varchar(15) | primary key ) , roles.role_description ( varchar(80) ) ]\ntable users , columns = [ users.user_id ( integer | primary key ) , users.role_code ( varchar(15) ) , users.user_name ( varchar(40) ) , users.user_login ( varchar(40) ) , users.password ( varchar(40) ) ]\ntable document_structures , columns = [ document_structures.document_structure_code ( varchar(15) | primary key ) , document_structures.parent_document_structure_code ( varchar(15) ) , document_structures.document_structure_description ( varchar(80) ) ]\ntable functional_areas , columns = [ functional_areas.functional_area_code ( varchar(15) | primary key ) , functional_areas.parent_functional_area_code ( varchar(15) ) , functional_areas.functional_area_description ( varchar(80) ) ]\ntable images , columns = [ images.image_id ( integer | primary key ) , images.image_alt_text ( varchar(80) ) , images.image_name ( varchar(40) ) , images.image_url ( varchar(255) ) ]\ntable documents , columns = [ documents.document_code ( varchar(15) | primary key ) , documents.document_structure_code ( varchar(15) ) , documents.document_type_code ( varchar(15) ) , documents.access_count ( integer ) , documents.document_name ( varchar(80) ) ]\ntable document_functional_areas , columns = [ document_functional_areas.document_code ( varchar(15) ) , document_functional_areas.functional_area_code ( varchar(15) ) ]\ntable document_sections , columns = [ document_sections.section_id ( integer | primary key ) , document_sections.document_code ( varchar(15) ) , document_sections.section_sequence ( integer ) , document_sections.section_code ( varchar(20) ) , document_sections.section_title ( varchar(80) ) ]\ntable document_sections_images , columns = [ document_sections_images.section_id ( integer | primary key ) , document_sections_images.image_id ( integer | primary key ) ]\nforeign keys :\nusers.role_code = roles.role_code\ndocuments.document_structure_code = document_structures.document_structure_code\ndocument_functional_areas.functional_area_code = functional_areas.functional_area_code\ndocument_functional_areas.document_code = documents.document_code\ndocument_sections.document_code = documents.document_code\ndocument_sections_images.image_id = images.image_id\ndocument_sections_images.section_id = document_sections.section_id\nmatched contents :\nfunctional_areas.functional_area_description ( Acknowledgement )",
  "database schema :\ntable train , columns = [ train.id ( int | primary key ) , train.train_number ( int ) , train.name ( text ) , train.origin ( text ) , train.destination ( text ) , train.time ( text ) , train.interval ( text ) ]\ntable station , columns = [ station.id ( int | primary key ) , station.network_name ( text ) , station.services ( text ) , station.local_authority ( text ) ]\ntable route , columns = [ route.train_id ( int | primary key ) , route.station_id ( int | primary key ) ]\ntable weekly_weather , columns = [ weekly_weather.station_id ( int | primary key ) , weekly_weather.day_of_week ( text | primary key ) , weekly_weather.high_temperature ( int ) , weekly_weather.low_temperature ( int ) , weekly_weather.precipitation ( real ) , weekly_weather.wind_speed_mph ( int ) ]\nforeign keys :\nroute.station_id = station.id\nroute.train_id = train.id\nweekly_weather.station_id = station.id\nmatched contents :\ntrain.id ( 1 )\nstation.id ( 1 )\nroute.train_id ( 1 )\nroute.station_id ( 1 )\nweekly_weather.station_id ( 1 )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nemployee.name ( John Williams )",
  "database schema :\ntable player_attributes , columns = [ player_attributes.id ( integer | primary key ) , player_attributes.player_fifa_api_id ( integer ) , player_attributes.player_api_id ( integer ) , player_attributes.date ( text ) , player_attributes.overall_rating ( integer ) , player_attributes.potential ( integer ) , player_attributes.preferred_foot ( text ) , player_attributes.attacking_work_rate ( text ) , player_attributes.defensive_work_rate ( text ) , player_attributes.crossing ( integer ) , player_attributes.finishing ( integer ) , player_attributes.heading_accuracy ( integer ) , player_attributes.short_passing ( integer ) , player_attributes.volleys ( integer ) , player_attributes.dribbling ( integer ) , player_attributes.curve ( integer ) , player_attributes.free_kick_accuracy ( integer ) , player_attributes.long_passing ( integer ) , player_attributes.ball_control ( integer ) , player_attributes.acceleration ( integer ) , player_attributes.sprint_speed ( integer ) , player_attributes.agility ( integer ) , player_attributes.reactions ( integer ) , player_attributes.balance ( integer ) , player_attributes.shot_power ( integer ) , player_attributes.jumping ( integer ) , player_attributes.stamina ( integer ) , player_attributes.strength ( integer ) , player_attributes.long_shots ( integer ) , player_attributes.aggression ( integer ) , player_attributes.interceptions ( integer ) , player_attributes.positioning ( integer ) , player_attributes.vision ( integer ) , player_attributes.penalties ( integer ) , player_attributes.marking ( integer ) , player_attributes.standing_tackle ( integer ) , player_attributes.sliding_tackle ( integer ) , player_attributes.gk_diving ( integer ) , player_attributes.gk_handling ( integer ) , player_attributes.gk_kicking ( integer ) , player_attributes.gk_positioning ( integer ) , player_attributes.gk_reflexes ( integer ) ]\ntable player , columns = [ player.id ( integer | primary key ) , player.player_api_id ( integer ) , player.player_name ( text ) , player.player_fifa_api_id ( integer ) , player.birthday ( text ) , player.height ( integer ) , player.weight ( integer ) ]\ntable league , columns = [ league.id ( integer | primary key ) , league.country_id ( integer ) , league.name ( text ) ]\ntable country , columns = [ country.id ( integer | primary key ) , country.name ( text ) ]\ntable team , columns = [ team.id ( integer | primary key ) , team.team_api_id ( integer ) , team.team_fifa_api_id ( integer ) , team.team_long_name ( text ) , team.team_short_name ( text ) ]\ntable team_attributes , columns = [ team_attributes.id ( integer | primary key ) , team_attributes.team_fifa_api_id ( integer ) , team_attributes.team_api_id ( integer ) , team_attributes.date ( text ) , team_attributes.buildupplayspeed ( integer ) , team_attributes.buildupplayspeedclass ( text ) , team_attributes.buildupplaydribbling ( integer ) , team_attributes.buildupplaydribblingclass ( text ) , team_attributes.buildupplaypassing ( integer ) , team_attributes.buildupplaypassingclass ( text ) , team_attributes.buildupplaypositioningclass ( text ) , team_attributes.chancecreationpassing ( integer ) , team_attributes.chancecreationpassingclass ( text ) , team_attributes.chancecreationcrossing ( integer ) , team_attributes.chancecreationcrossingclass ( text ) , team_attributes.chancecreationshooting ( integer ) , team_attributes.chancecreationshootingclass ( text ) , team_attributes.chancecreationpositioningclass ( text ) , team_attributes.defencepressure ( integer ) , team_attributes.defencepressureclass ( text ) , team_attributes.defenceaggression ( integer ) , team_attributes.defenceaggressionclass ( text ) , team_attributes.defenceteamwidth ( integer ) , team_attributes.defenceteamwidthclass ( text ) , team_attributes.defencedefenderlineclass ( text ) ]\nforeign keys :\nplayer_attributes.player_api_id = player.player_api_id\nplayer_attributes.player_fifa_api_id = player.player_fifa_api_id\nleague.country_id = country.id\nteam_attributes.team_api_id = team.team_api_id\nteam_attributes.team_fifa_api_id = team.team_fifa_api_id\nmatched contents :\nplayer_attributes.crossing ( 80 )\nplayer_attributes.dribbling ( 80 )\nplayer_attributes.curve ( 80 )\nplayer_attributes.ball_control ( 80 )\nplayer_attributes.acceleration ( 80 )\nplayer_attributes.agility ( 80 )\nplayer_attributes.balance ( 80 )\nplayer_attributes.aggression ( 80 )\nplayer.id ( 80 )\nplayer.player_fifa_api_id ( 80 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nemployees.country ( Canada )\ncustomers.country ( Canada )\ninvoices.billing_country ( Canada )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\nmountain.id ( 2 )\ncamera_lens.id ( 2 )\nphotos.id ( 2 )\nphotos.mountain_id ( 2 )\nphotos.name ( the mountain )",
  "database schema :\ntable investors , columns = [ investors.investor_id ( integer | primary key ) , investors.investor_details ( varchar(255) ) ]\ntable lots , columns = [ lots.lot_id ( integer | primary key ) , lots.investor_id ( integer ) , lots.lot_details ( varchar(255) ) ]\ntable ref_transaction_types , columns = [ ref_transaction_types.transaction_type_code ( varchar(10) | primary key ) , ref_transaction_types.transaction_type_description ( varchar(80) ) ]\ntable transactions , columns = [ transactions.transaction_id ( integer | primary key ) , transactions.investor_id ( integer ) , transactions.transaction_type_code ( varchar(10) ) , transactions.date_of_transaction ( datetime ) , transactions.amount_of_transaction ( decimal(19,4) ) , transactions.share_count ( varchar(40) ) , transactions.other_details ( varchar(255) ) ]\ntable sales , columns = [ sales.sales_transaction_id ( integer | primary key ) , sales.sales_details ( varchar(255) ) ]\ntable purchases , columns = [ purchases.purchase_transaction_id ( integer ) , purchases.purchase_details ( varchar(255) ) ]\ntable transactions_lots , columns = [ transactions_lots.transaction_id ( integer ) , transactions_lots.lot_id ( integer ) ]\nforeign keys :\nlots.investor_id = investors.investor_id\ntransactions.transaction_type_code = ref_transaction_types.transaction_type_code\ntransactions.investor_id = investors.investor_id\nsales.sales_transaction_id = transactions.transaction_id\npurchases.purchase_transaction_id = transactions.transaction_id\ntransactions_lots.transaction_id = transactions.transaction_id\ntransactions_lots.lot_id = lots.lot_id\nmatched contents :\nref_transaction_types.transaction_type_description ( Purchase )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents :\nstore.type ( Village Store )",
  "database schema :\ntable item , columns = [ item.i_id ( integer | primary key | comment : item id ) , item.title ( varchar(20) ) ]\ntable review , columns = [ review.a_id ( integer | primary key ) , review.u_id ( integer | comment : user id ) , review.i_id ( integer | comment : item id ) , review.rating ( integer ) , review.rank ( integer ) ]\ntable useracct , columns = [ useracct.u_id ( integer | primary key | comment : user id ) , useracct.name ( varchar(128) ) ]\ntable trust , columns = [ trust.source_u_id ( integer | comment : source user id ) , trust.target_u_id ( integer | comment : target user id ) , trust.trust ( integer ) ]\nforeign keys :\nreview.i_id = item.i_id\nreview.u_id = useracct.u_id\ntrust.target_u_id = useracct.u_id\ntrust.source_u_id = useracct.u_id\nmatched contents :\nitem.i_id ( 3 , 5 )\nreview.a_id ( 3 , 5 )\nreview.i_id ( 3 , 5 )\nreview.rating ( 5 )\nreview.rank ( 3 , 5 )\nuseracct.u_id ( 3 , 5 )\ntrust.source_u_id ( 3 )\ntrust.target_u_id ( 3 , 5 )\ntrust.trust ( 3 )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nreviewer.name ( Daniel Lewis )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.winery ( Brander )",
  "database schema :\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.address ( text ) , shop.num_of_staff ( text ) , shop.score ( real ) , shop.open_year ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.membership_card ( text ) , member.age ( int ) , member.time_of_purchase ( int ) , member.level_of_membership ( int ) , member.address ( text ) ]\ntable happy_hour , columns = [ happy_hour.hh_id ( int | primary key ) , happy_hour.shop_id ( int | primary key ) , happy_hour.month ( text | primary key ) , happy_hour.num_of_shaff_in_charge ( int ) ]\ntable happy_hour_member , columns = [ happy_hour_member.hh_id ( int | primary key ) , happy_hour_member.member_id ( int | primary key ) , happy_hour_member.total_amount ( real ) ]\nforeign keys :\nhappy_hour.shop_id = shop.shop_id\nhappy_hour_member.member_id = member.member_id\nmatched contents :\nmember.address ( Waterbury )",
  "database schema :\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.address ( text ) , shop.num_of_staff ( text ) , shop.score ( real ) , shop.open_year ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.membership_card ( text ) , member.age ( int ) , member.time_of_purchase ( int ) , member.level_of_membership ( int ) , member.address ( text ) ]\ntable happy_hour , columns = [ happy_hour.hh_id ( int | primary key ) , happy_hour.shop_id ( int | primary key ) , happy_hour.month ( text | primary key ) , happy_hour.num_of_shaff_in_charge ( int ) ]\ntable happy_hour_member , columns = [ happy_hour_member.hh_id ( int | primary key ) , happy_hour_member.member_id ( int | primary key ) , happy_hour_member.total_amount ( real ) ]\nforeign keys :\nhappy_hour.shop_id = shop.shop_id\nhappy_hour_member.member_id = member.member_id\nmatched contents :\nmember.membership_card ( Black )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\nref_shipping_agents.shipping_agent_name ( USPS )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\ndiscount_coupons.coupon_id ( 3 )\ncustomers.customer_id ( 3 )\ncustomers.coupon_id ( 3 )\nbookings.booking_id ( 3 )\nbookings.customer_id ( 3 )\npayments.payment_id ( 3 )\npayments.booking_id ( 3 )\nproducts_booked.booking_id ( 3 )\nproducts_booked.product_id ( 3 )\nproducts_booked.booked_count ( 3 )",
  "database schema :\ntable city , columns = [ city.city_id ( int | primary key ) , city.city ( text ) , city.hanzi ( text ) , city.hanyu_pinyin ( text ) , city.regional_population ( int ) , city.gdp ( real ) ]\ntable match , columns = [ match.match_id ( int | primary key ) , match.date ( text ) , match.venue ( text ) , match.score ( text ) , match.result ( text ) , match.competition ( text ) ]\ntable temperature , columns = [ temperature.city_id ( int | primary key ) , temperature.jan ( real ) , temperature.feb ( real ) , temperature.mar ( real ) , temperature.apr ( real ) , temperature.jun ( real ) , temperature.jul ( real ) , temperature.aug ( real ) , temperature.sep ( real ) , temperature.oct ( real ) , temperature.nov ( real ) , temperature.dec ( real ) ]\ntable hosting_city , columns = [ hosting_city.year ( int | primary key ) , hosting_city.match_id ( int ) , hosting_city.host_city ( text ) ]\nforeign keys :\ntemperature.city_id = city.city_id\nhosting_city.match_id = match.match_id\nhosting_city.host_city = city.city_id\nmatched contents :\ncity.city ( Shanghai )",
  "database schema :\ntable wrestler , columns = [ wrestler.wrestler_id ( int | primary key ) , wrestler.name ( text ) , wrestler.reign ( text ) , wrestler.days_held ( text ) , wrestler.location ( text ) , wrestler.event ( text ) ]\ntable elimination , columns = [ elimination.elimination_id ( text | primary key ) , elimination.wrestler_id ( text ) , elimination.team ( text ) , elimination.eliminated_by ( text ) , elimination.elimination_move ( text ) , elimination.time ( text ) ]\nforeign keys :\nelimination.wrestler_id = wrestler.wrestler_id\nmatched contents :\nelimination.eliminated_by ( Benjamin , Orton )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.department_id ( 70 , 90 )\nemployees.department_id ( 70 , 90 )\njob_history.department_id ( 90 )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.department_name ( Finance )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nhall_of_fame.category ( Player )",
  "database schema :\ntable roles , columns = [ roles.role_code ( varchar(15) | primary key ) , roles.role_description ( varchar(80) ) ]\ntable users , columns = [ users.user_id ( integer | primary key ) , users.role_code ( varchar(15) ) , users.user_name ( varchar(40) ) , users.user_login ( varchar(40) ) , users.password ( varchar(40) ) ]\ntable document_structures , columns = [ document_structures.document_structure_code ( varchar(15) | primary key ) , document_structures.parent_document_structure_code ( varchar(15) ) , document_structures.document_structure_description ( varchar(80) ) ]\ntable functional_areas , columns = [ functional_areas.functional_area_code ( varchar(15) | primary key ) , functional_areas.parent_functional_area_code ( varchar(15) ) , functional_areas.functional_area_description ( varchar(80) ) ]\ntable images , columns = [ images.image_id ( integer | primary key ) , images.image_alt_text ( varchar(80) ) , images.image_name ( varchar(40) ) , images.image_url ( varchar(255) ) ]\ntable documents , columns = [ documents.document_code ( varchar(15) | primary key ) , documents.document_structure_code ( varchar(15) ) , documents.document_type_code ( varchar(15) ) , documents.access_count ( integer ) , documents.document_name ( varchar(80) ) ]\ntable document_functional_areas , columns = [ document_functional_areas.document_code ( varchar(15) ) , document_functional_areas.functional_area_code ( varchar(15) ) ]\ntable document_sections , columns = [ document_sections.section_id ( integer | primary key ) , document_sections.document_code ( varchar(15) ) , document_sections.section_sequence ( integer ) , document_sections.section_code ( varchar(20) ) , document_sections.section_title ( varchar(80) ) ]\ntable document_sections_images , columns = [ document_sections_images.section_id ( integer | primary key ) , document_sections_images.image_id ( integer | primary key ) ]\nforeign keys :\nusers.role_code = roles.role_code\ndocuments.document_structure_code = document_structures.document_structure_code\ndocument_functional_areas.functional_area_code = functional_areas.functional_area_code\ndocument_functional_areas.document_code = documents.document_code\ndocument_sections.document_code = documents.document_code\ndocument_sections_images.image_id = images.image_id\ndocument_sections_images.section_id = document_sections.section_id\nmatched contents :\nusers.user_id ( 2 )\nimages.image_id ( 2 )\ndocument_sections_images.image_id ( 2 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.city ( Prague )\ninvoices.billing_city ( Prague )",
  "database schema :\ntable repair , columns = [ repair.repair_id ( int | primary key ) , repair.name ( text ) , repair.launch_date ( text ) , repair.notes ( text ) ]\ntable machine , columns = [ machine.machine_id ( int | primary key ) , machine.making_year ( int ) , machine.class ( text ) , machine.team ( text ) , machine.machine_series ( text ) , machine.value_points ( real ) , machine.quality_rank ( int ) ]\ntable technician , columns = [ technician.technician_id ( real | primary key ) , technician.name ( text ) , technician.team ( text ) , technician.starting_year ( real ) , technician.age ( int ) ]\ntable repair_assignment , columns = [ repair_assignment.technician_id ( int | primary key ) , repair_assignment.repair_id ( int | primary key ) , repair_assignment.machine_id ( int | primary key ) ]\nforeign keys :\nrepair_assignment.machine_id = machine.machine_id\nrepair_assignment.repair_id = repair.repair_id\nrepair_assignment.technician_id = technician.technician_id\nmatched contents : None",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\nroom.roomnumber ( 111 )\nstay.room ( 111 )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.lname ( Turon )\nauthors.fname ( Aaron )",
  "database schema :\ntable wrestler , columns = [ wrestler.wrestler_id ( int | primary key ) , wrestler.name ( text ) , wrestler.reign ( text ) , wrestler.days_held ( text ) , wrestler.location ( text ) , wrestler.event ( text ) ]\ntable elimination , columns = [ elimination.elimination_id ( text | primary key ) , elimination.wrestler_id ( text ) , elimination.team ( text ) , elimination.eliminated_by ( text ) , elimination.elimination_move ( text ) , elimination.time ( text ) ]\nforeign keys :\nelimination.wrestler_id = wrestler.wrestler_id\nmatched contents :\nelimination.team ( Team Orton )\nelimination.eliminated_by ( Orton )",
  "database schema :\ntable player , columns = [ player.player_id ( int | primary key ) , player.sponsor_name ( text ) , player.player_name ( text ) , player.gender ( text ) , player.residence ( text ) , player.occupation ( text ) , player.votes ( int ) , player.rank ( text ) ]\ntable club , columns = [ club.club_id ( int | primary key ) , club.club_name ( text ) , club.region ( text ) , club.start_year ( int ) ]\ntable coach , columns = [ coach.coach_id ( int | primary key ) , coach.coach_name ( text | comment : player name ) , coach.gender ( text ) , coach.club_id ( int ) , coach.rank ( int ) ]\ntable player_coach , columns = [ player_coach.player_id ( int | primary key ) , player_coach.coach_id ( int | primary key ) , player_coach.starting_year ( int ) ]\ntable match_result , columns = [ match_result.rank ( int | primary key ) , match_result.club_id ( int | primary key ) , match_result.gold ( int ) , match_result.big_silver ( int ) , match_result.small_silver ( int ) , match_result.bronze ( int ) , match_result.points ( int ) ]\nforeign keys :\ncoach.club_id = club.club_id\nplayer_coach.coach_id = coach.coach_id\nplayer_coach.player_id = player.player_id\nmatch_result.club_id = club.club_id\nmatched contents :\nplayer.occupation ( Researcher )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\nproject_staff.role_code ( researcher )\nstaff_roles.role_code ( researcher )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\narchitect.gender ( female )",
  "database schema :\ntable mission , columns = [ mission.mission_id ( int | primary key ) , mission.ship_id ( int ) , mission.code ( text ) , mission.launched_year ( int ) , mission.location ( text ) , mission.speed_knots ( int ) , mission.fate ( text ) ]\ntable ship , columns = [ ship.ship_id ( int | primary key ) , ship.name ( text ) , ship.type ( text ) , ship.nationality ( text ) , ship.tonnage ( int ) ]\nforeign keys :\nmission.ship_id = ship.ship_id\nmatched contents : None",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\ncountry.country_id ( 3 )\nteam.team_id ( 3 )\nmatch_season.team ( 3 )\nmatch_season.draft_pick_number ( 3 )\nplayer.player_id ( 3 )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\narchitect.id ( 3 )\nbridge.architect_id ( 3 )\nbridge.id ( 3 )\nmill.architect_id ( 3 )\nmill.id ( 3 )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.g_name ( pop )\nartist.preferred_genre ( pop )\nsong.genre_is ( pop )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\norders.order_status ( On Road )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nevent.name ( World Junior )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.name ( Zach )\npersonfriend.name ( Zach )\npersonfriend.friend ( Zach )",
  "database schema :\ntable pilot , columns = [ pilot.pilot_id ( int(11) | primary key ) , pilot.name ( varchar(50) ) , pilot.age ( int(11) ) ]\ntable aircraft , columns = [ aircraft.aircraft_id ( int(11) | primary key ) , aircraft.aircraft ( varchar(50) ) , aircraft.description ( varchar(50) ) , aircraft.max_gross_weight ( varchar(50) ) , aircraft.total_disk_area ( varchar(50) ) , aircraft.max_disk_loading ( varchar(50) ) ]\ntable match , columns = [ match.round ( real | primary key ) , match.location ( text ) , match.country ( text ) , match.date ( text ) , match.fastest_qualifying ( text ) , match.winning_pilot ( text ) , match.winning_aircraft ( text ) ]\ntable airport , columns = [ airport.airport_id ( int | primary key ) , airport.airport_name ( text ) , airport.total_passengers ( real ) , airport.%_change_2007 ( text ) , airport.international_passengers ( real ) , airport.domestic_passengers ( real ) , airport.transit_passengers ( real ) , airport.aircraft_movements ( real ) , airport.freight_metric_tonnes ( real ) ]\ntable airport_aircraft , columns = [ airport_aircraft.id ( int ) , airport_aircraft.airport_id ( int | primary key ) , airport_aircraft.aircraft_id ( int | primary key ) ]\nforeign keys :\nmatch.winning_pilot = pilot.pilot_id\nmatch.winning_aircraft = aircraft.aircraft_id\nairport_aircraft.aircraft_id = aircraft.aircraft_id\nairport_aircraft.airport_id = airport.airport_id\nmatched contents :\nmatch.country ( Australia )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ncustomer.email ( luisg@embraer.com.br )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.year ( 2008 )\nwine.drink ( 2008 )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\naircraft.name ( Boeing 737-800 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ngenre.name ( Rock )\ntrack.name ( Numbers )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents :\nweb_client_accelerator.name ( CACHEbox )\nbrowser.name ( Internet Explorer )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nstudent.city_code ( PIT )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\naircraft.name ( Airbus A340-300 , Boeing 737-800 )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents :\nperson.job ( engineer )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\ntrip.duration ( 200 )\ntrip.bike_id ( 200 )\nweather.wind_dir_degrees ( 200 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nappearances.g_all ( 75 )\nappearances.g_batting ( 75 )\nappearances.g_defense ( 75 )\nappearances.g_c ( 75 )\nappearances.g_1b ( 75 )\nappearances.g_2b ( 75 )\nappearances.g_3b ( 75 )\nappearances.g_lf ( 75 )\nappearances.g_cf ( 75 )\nappearances.g_dh ( 75 )\nbatting.ab ( 220 )\nbatting.h ( 220 )\nfielding.inn_outs ( 220 )\nfielding.po ( 220 )\nfielding.a ( 220 )\nhall_of_fame.category ( Player )\npitching.ipouts ( 220 )\npitching.h ( 220 )\npitching.so ( 220 )\npitching.bfp ( 220 )\npitching.r ( 220 )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents : None",
  "database schema :\ntable station , columns = [ station.station_id ( int | primary key ) , station.name ( text ) , station.annual_entry_exit ( real ) , station.annual_interchanges ( real ) , station.total_passengers ( real ) , station.location ( text ) , station.main_services ( text ) , station.number_of_platforms ( int ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.name ( text ) , train.time ( text ) , train.service ( text ) ]\ntable train_station , columns = [ train_station.train_id ( int | primary key ) , train_station.station_id ( int | primary key ) ]\nforeign keys :\ntrain_station.station_id = station.station_id\ntrain_station.train_id = train.train_id\nmatched contents :\ntrain.name ( Ananthapuri Express , Guruvayur Express )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents : None",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2010 )\nappearances.year ( 2010 )\nbatting.year ( 2010 )\nbatting_postseason.year ( 2010 )\nfielding.year ( 2010 )\nfielding.inn_outs ( 2010 )\nfielding_postseason.year ( 2010 )\nhall_of_fame.yearid ( 2010 )\nhome_game.year ( 2010 )\nmanager.year ( 2010 )\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 80 )\nstatus.station_id ( 80 )\ntrip.duration ( 80 )\ntrip.start_station_id ( 80 )\ntrip.end_station_id ( 80 )\ntrip.bike_id ( 80 )\nweather.max_temperature_f ( 80 )\nweather.mean_temperature_f ( 80 )\nweather.max_humidity ( 80 )\nweather.mean_humidity ( 80 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nstudent.lname ( Smith )\nstudent.fname ( Linda )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(40) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_name ( varchar(40) ) ]\ntable available_policies , columns = [ available_policies.policy_id ( integer | primary key ) , available_policies.policy_type_code ( char(15) ) , available_policies.customer_phone ( varchar(255) ) ]\ntable customers_policies , columns = [ customers_policies.customer_id ( integer | primary key ) , customers_policies.policy_id ( integer | primary key ) , customers_policies.date_opened ( date ) , customers_policies.date_closed ( date ) ]\ntable first_notification_of_loss , columns = [ first_notification_of_loss.fnol_id ( integer | primary key ) , first_notification_of_loss.customer_id ( integer ) , first_notification_of_loss.policy_id ( integer ) , first_notification_of_loss.service_id ( integer ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.fnol_id ( integer ) , claims.effective_date ( date ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.effective_date ( date ) , settlements.settlement_amount ( real ) ]\nforeign keys :\ncustomers_policies.policy_id = available_policies.policy_id\ncustomers_policies.customer_id = customers.customer_id\nfirst_notification_of_loss.customer_id = customers_policies.customer_id\nfirst_notification_of_loss.policy_id = customers_policies.policy_id\nfirst_notification_of_loss.service_id = services.service_id\nclaims.fnol_id = first_notification_of_loss.fnol_id\nsettlements.claim_id = claims.claim_id\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\ndepartment_store_chain.dept_store_chain_name ( South )",
  "database schema :\ntable building , columns = [ building.building_id ( text | primary key ) , building.name ( text ) , building.street_address ( text ) , building.years_as_tallest ( text ) , building.height_feet ( int ) , building.floors ( int ) ]\ntable institution , columns = [ institution.institution_id ( text | primary key ) , institution.institution ( text ) , institution.location ( text ) , institution.founded ( real ) , institution.type ( text ) , institution.enrollment ( int ) , institution.team ( text ) , institution.primary_conference ( text ) , institution.building_id ( text ) ]\ntable protein , columns = [ protein.common_name ( text | primary key ) , protein.protein_name ( text ) , protein.divergence_from_human_lineage ( real ) , protein.accession_number ( text ) , protein.sequence_length ( real ) , protein.sequence_identity_to_human_protein ( text ) , protein.institution_id ( text ) ]\nforeign keys :\ninstitution.building_id = building.building_id\nprotein.institution_id = institution.institution_id\nmatched contents : None",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ngenres.name ( Rock )\nmedia_types.name ( MPEG audio file )\ntracks.name ( Belong )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable restaurant , columns = [ restaurant.resid ( integer | primary key | comment : restaurant id ) , restaurant.resname ( varchar(100) | comment : restaurant name ) , restaurant.address ( varchar(100) ) , restaurant.rating ( integer ) ]\ntable type_of_restaurant , columns = [ type_of_restaurant.resid ( integer | comment : restaurant id ) , type_of_restaurant.restypeid ( integer | comment : restaurant type id ) ]\ntable restaurant_type , columns = [ restaurant_type.restypeid ( integer | primary key | comment : restaurant type id ) , restaurant_type.restypename ( varchar(40) | comment : restaurant type name ) , restaurant_type.restypedescription ( varchar(100) | comment : restaurant type description ) ]\ntable visits_restaurant , columns = [ visits_restaurant.stuid ( integer | comment : student id ) , visits_restaurant.resid ( integer | comment : restaurant id ) , visits_restaurant.time ( timestamp ) , visits_restaurant.spent ( float ) ]\nforeign keys :\ntype_of_restaurant.restypeid = restaurant_type.restypeid\ntype_of_restaurant.resid = restaurant.resid\nvisits_restaurant.resid = restaurant.resid\nvisits_restaurant.stuid = student.stuid\nmatched contents :\nstudent.major ( 600 )",
  "database schema :\ntable premises , columns = [ premises.premise_id ( integer | primary key ) , premises.premises_type ( varchar(15) ) , premises.premise_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_category ( varchar(15) ) , products.product_name ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_login ( varchar(80) ) , customers.customer_password ( varchar(10) ) ]\ntable mailshot_campaigns , columns = [ mailshot_campaigns.mailshot_id ( integer | primary key ) , mailshot_campaigns.product_category ( varchar(15) ) , mailshot_campaigns.mailshot_name ( varchar(80) ) , mailshot_campaigns.mailshot_start_date ( datetime ) , mailshot_campaigns.mailshot_end_date ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.premise_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type_code ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(15) ) , customer_orders.shipping_method_code ( varchar(15) ) , customer_orders.order_placed_datetime ( datetime ) , customer_orders.order_delivered_datetime ( datetime ) , customer_orders.order_shipping_charges ( varchar(255) ) ]\ntable mailshot_customers , columns = [ mailshot_customers.mailshot_id ( integer ) , mailshot_customers.customer_id ( integer ) , mailshot_customers.outcome_code ( varchar(15) ) , mailshot_customers.mailshot_customer_date ( datetime ) ]\ntable order_items , columns = [ order_items.item_id ( integer ) , order_items.order_item_status_code ( varchar(15) ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.item_status_code ( varchar(15) ) , order_items.item_delivered_datetime ( datetime ) , order_items.item_order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.premise_id = premises.premise_id\ncustomer_orders.customer_id = customers.customer_id\nmailshot_customers.mailshot_id = mailshot_campaigns.mailshot_id\nmailshot_customers.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomer_addresses.address_type_code ( Shipping )\ncustomer_orders.order_status_code ( Cancelled , Paid )\nmailshot_customers.outcome_code ( Order )\norder_items.order_item_status_code ( Cancelled , Paid )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nplays_games.hours_played ( 10 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ntrack.name ( Numbers )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\naddresses.state_province_county ( Georgia )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nref_attraction_types.attraction_type_description ( museum )\ntourist_attractions.name ( US museum )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ngenres.name ( Rock )\nmedia_types.name ( MPEG audio file )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_ap ( GO )\nroutes.src_ap ( GO )\nairports.country ( United States , Canada )\nairlines.iata ( GO )\nairlines.callsign ( UNITED , STATES )\nairlines.country ( United States , Canada )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\ncustomer_orders.order_status_code ( Pending , New )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.address_id ( 4 )\ncustomers.customer_id ( 4 )\ncustomer_addresses.customer_id ( 4 )\ncustomer_contact_channels.customer_id ( 4 )\ncustomer_orders.order_id ( 4 )\ncustomer_orders.customer_id ( 4 )",
  "database schema :\ntable buildings , columns = [ buildings.id ( int | primary key ) , buildings.name ( text ) , buildings.city ( text ) , buildings.height ( int ) , buildings.stories ( int ) , buildings.status ( text ) ]\ntable companies , columns = [ companies.id ( int | primary key ) , companies.name ( text ) , companies.headquarters ( text ) , companies.industry ( text ) , companies.sales_billion ( real ) , companies.profits_billion ( real ) , companies.assets_billion ( real ) , companies.market_value_billion ( text ) ]\ntable office_locations , columns = [ office_locations.building_id ( int | primary key ) , office_locations.company_id ( int | primary key ) , office_locations.move_in_year ( int ) ]\nforeign keys :\noffice_locations.company_id = companies.id\noffice_locations.building_id = buildings.id\nmatched contents :\nbuildings.status ( on-hold )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nfaculty.rank ( Instructor )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ntracks.name ( Fast As a Shark )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\nstudent.age ( 20 )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nrooms.decor ( traditional )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.last_name ( Mancini )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nartist.name ( Metallica )\ntrack.composer ( Metallica )",
  "database schema :\ntable company , columns = [ company.company_id ( int | primary key ) , company.rank ( int ) , company.company ( text ) , company.headquarters ( text ) , company.main_industry ( text ) , company.sales_billion ( real ) , company.profits_billion ( real ) , company.assets_billion ( real ) , company.market_value ( real ) ]\ntable gas_station , columns = [ gas_station.station_id ( int | primary key ) , gas_station.open_year ( int ) , gas_station.location ( text ) , gas_station.manager_name ( text ) , gas_station.vice_manager_name ( text ) , gas_station.representative_name ( text ) ]\ntable station_company , columns = [ station_company.station_id ( int | primary key ) , station_company.company_id ( int | primary key ) , station_company.rank_of_the_year ( int ) ]\nforeign keys :\nstation_company.company_id = company.company_id\nstation_company.station_id = gas_station.station_id\nmatched contents :\ncompany.main_industry ( Banking )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\nmountain.range ( Aberdare Range )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.cases ( 2000 )\nwine.drink ( 2010 )",
  "database schema :\ntable company , columns = [ company.company_id ( int | primary key ) , company.rank ( int ) , company.company ( text ) , company.headquarters ( text ) , company.main_industry ( text ) , company.sales_billion ( real ) , company.profits_billion ( real ) , company.assets_billion ( real ) , company.market_value ( real ) ]\ntable gas_station , columns = [ gas_station.station_id ( int | primary key ) , gas_station.open_year ( int ) , gas_station.location ( text ) , gas_station.manager_name ( text ) , gas_station.vice_manager_name ( text ) , gas_station.representative_name ( text ) ]\ntable station_company , columns = [ station_company.station_id ( int | primary key ) , station_company.company_id ( int | primary key ) , station_company.rank_of_the_year ( int ) ]\nforeign keys :\nstation_company.company_id = company.company_id\nstation_company.station_id = gas_station.station_id\nmatched contents : None",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomers.customer_name ( Tillman Ernser )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\ncustomers.first_name ( Ray )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\ndepartment.school_code ( BUS )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents : None",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\nplayer.ycard ( yes )\ntryout.ppos ( striker )\ntryout.decision ( yes )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_details ( varchar(255) ) ]\ntable policies , columns = [ policies.policy_id ( integer | primary key ) , policies.customer_id ( integer ) , policies.policy_type_code ( char(15) ) , policies.start_date ( datetime ) , policies.end_date ( datetime ) ]\ntable claim_headers , columns = [ claim_headers.claim_header_id ( integer | primary key ) , claim_headers.claim_status_code ( char(15) ) , claim_headers.claim_type_code ( char(15) ) , claim_headers.policy_id ( integer ) , claim_headers.date_of_claim ( datetime ) , claim_headers.date_of_settlement ( datetime ) , claim_headers.amount_claimed ( decimal(20,4) ) , claim_headers.amount_piad ( decimal(20,4) ) ]\ntable claims_documents , columns = [ claims_documents.claim_id ( integer | primary key ) , claims_documents.document_type_code ( char(15) | primary key ) , claims_documents.created_by_staff_id ( integer ) , claims_documents.created_date ( integer ) ]\ntable claims_processing_stages , columns = [ claims_processing_stages.claim_stage_id ( integer | primary key ) , claims_processing_stages.next_claim_stage_id ( integer ) , claims_processing_stages.claim_status_name ( varchar(255) ) , claims_processing_stages.claim_status_description ( varchar(255) ) ]\ntable claims_processing , columns = [ claims_processing.claim_processing_id ( integer | primary key ) , claims_processing.claim_id ( integer ) , claims_processing.claim_outcome_code ( char(15) ) , claims_processing.claim_stage_id ( integer ) , claims_processing.staff_id ( integer ) ]\nforeign keys :\npolicies.customer_id = customers.customer_id\nclaim_headers.policy_id = policies.policy_id\nclaims_documents.created_by_staff_id = staff.staff_id\nclaims_documents.claim_id = claim_headers.claim_header_id\nclaims_processing.staff_id = staff.staff_id\nclaims_processing.claim_id = claim_headers.claim_header_id\nmatched contents :\ncustomers.customer_details ( Dayana Robel )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents : None",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nmember.member_id ( 6 )\nmember.level ( 6 )\nbranch.branch_id ( 6 )\nbranch.membership_amount ( 6 )\nmembership_register_branch.member_id ( 6 )\nmembership_register_branch.branch_id ( 6 )\npurchase.member_id ( 6 )\npurchase.branch_id ( 6 )",
  "database schema :\ntable member , columns = [ member.member_id ( text | primary key ) , member.name ( text ) , member.nationality ( text ) , member.role ( text ) ]\ntable performance , columns = [ performance.performance_id ( real | primary key ) , performance.date ( text ) , performance.host ( text ) , performance.location ( text ) , performance.attendance ( int ) ]\ntable member_attendance , columns = [ member_attendance.member_id ( int | primary key ) , member_attendance.performance_id ( int | primary key ) , member_attendance.num_of_pieces ( int ) ]\nforeign keys :\nmember_attendance.performance_id = performance.performance_id\nmember_attendance.member_id = member.member_id\nmatched contents :\nmember.role ( Violin )",
  "database schema :\ntable premises , columns = [ premises.premise_id ( integer | primary key ) , premises.premises_type ( varchar(15) ) , premises.premise_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_category ( varchar(15) ) , products.product_name ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_login ( varchar(80) ) , customers.customer_password ( varchar(10) ) ]\ntable mailshot_campaigns , columns = [ mailshot_campaigns.mailshot_id ( integer | primary key ) , mailshot_campaigns.product_category ( varchar(15) ) , mailshot_campaigns.mailshot_name ( varchar(80) ) , mailshot_campaigns.mailshot_start_date ( datetime ) , mailshot_campaigns.mailshot_end_date ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.premise_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type_code ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(15) ) , customer_orders.shipping_method_code ( varchar(15) ) , customer_orders.order_placed_datetime ( datetime ) , customer_orders.order_delivered_datetime ( datetime ) , customer_orders.order_shipping_charges ( varchar(255) ) ]\ntable mailshot_customers , columns = [ mailshot_customers.mailshot_id ( integer ) , mailshot_customers.customer_id ( integer ) , mailshot_customers.outcome_code ( varchar(15) ) , mailshot_customers.mailshot_customer_date ( datetime ) ]\ntable order_items , columns = [ order_items.item_id ( integer ) , order_items.order_item_status_code ( varchar(15) ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.item_status_code ( varchar(15) ) , order_items.item_delivered_datetime ( datetime ) , order_items.item_order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.premise_id = premises.premise_id\ncustomer_orders.customer_id = customers.customer_id\nmailshot_customers.mailshot_id = mailshot_campaigns.mailshot_id\nmailshot_customers.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents : None",
  "database schema :\ntable mission , columns = [ mission.mission_id ( int | primary key ) , mission.ship_id ( int ) , mission.code ( text ) , mission.launched_year ( int ) , mission.location ( text ) , mission.speed_knots ( int ) , mission.fate ( text ) ]\ntable ship , columns = [ ship.ship_id ( int | primary key ) , ship.name ( text ) , ship.type ( text ) , ship.nationality ( text ) , ship.tonnage ( int ) ]\nforeign keys :\nmission.ship_id = ship.ship_id\nmatched contents :\nship.nationality ( United States )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.no ( 90 )\nwine.price ( 90 )\nwine.score ( 90 )\nwine.cases ( 90 )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nstudent.fname ( Lisa )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nclassroom.building ( Lamberton )\ndepartment.building ( Lamberton )\nsection.building ( Lamberton )\nstudent.tot_cred ( 50 )\ntime_slot.end_min ( 50 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.lname ( Kim )\nstudent.fname ( Tracy )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents : None",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\ndepartment.dept_name ( History )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ncollege.state ( FL )",
  "database schema :\ntable person , columns = [ person.name ( varchar(20) | primary key ) , person.age ( integer ) , person.city ( text ) , person.gender ( text ) , person.job ( text ) ]\ntable personfriend , columns = [ personfriend.name ( varchar(20) ) , personfriend.friend ( varchar(20) ) , personfriend.year ( integer ) ]\nforeign keys :\npersonfriend.friend = person.name\npersonfriend.name = person.name\nmatched contents : None",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\ncatalog_contents_additional_attributes.attribute_value ( 0 )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nproducts.product_name ( catnip )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\ndepartments.department_id ( 10 )\nemployees.department_id ( 10 )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\nsection.semester ( Spring )\nsection.year ( 2010 )\nteaches.semester ( Spring )\nteaches.year ( 2010 )\ntakes.semester ( Spring )\ntakes.year ( 2010 )",
  "database schema :\ntable customer_master_index , columns = [ customer_master_index.master_customer_id ( integer | primary key ) , customer_master_index.cmi_details ( varchar(255) ) ]\ntable cmi_cross_references , columns = [ cmi_cross_references.cmi_cross_ref_id ( integer | primary key | comment : cmi cross reference id ) , cmi_cross_references.master_customer_id ( integer ) , cmi_cross_references.source_system_code ( char(15) ) ]\ntable council_tax , columns = [ council_tax.council_tax_id ( integer | primary key ) , council_tax.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable business_rates , columns = [ business_rates.business_rates_id ( integer | primary key ) , business_rates.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable benefits_overpayments , columns = [ benefits_overpayments.council_tax_id ( integer | primary key ) , benefits_overpayments.cmi_cross_ref_id ( integer ) ]\ntable parking_fines , columns = [ parking_fines.council_tax_id ( integer | primary key ) , parking_fines.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable rent_arrears , columns = [ rent_arrears.council_tax_id ( integer | primary key ) , rent_arrears.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable electoral_register , columns = [ electoral_register.electoral_register_id ( integer | primary key ) , electoral_register.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\nforeign keys :\ncmi_cross_references.master_customer_id = customer_master_index.master_customer_id\ncouncil_tax.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbusiness_rates.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbenefits_overpayments.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nparking_fines.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nrent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nelectoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nmatched contents :\ncmi_cross_references.source_system_code ( Business )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(50) ) , customers.customer_middle_initial ( varchar(1) ) , customers.customer_last_name ( varchar(50) ) , customers.gender ( varchar(1) ) , customers.email_address ( varchar(255) ) , customers.login_name ( varchar(80) ) , customers.login_password ( varchar(20) ) , customers.phone_number ( varchar(255) ) , customers.town_city ( varchar(50) ) , customers.state_county_province ( varchar(50) ) , customers.country ( varchar(50) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.order_id ( integer ) , invoices.invoice_date ( datetime ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.date_account_opened ( datetime ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable product_categories , columns = [ product_categories.production_type_code ( varchar(15) | primary key ) , product_categories.product_type_description ( varchar(80) ) , product_categories.vat_rating ( decimal(19,4) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.production_type_code ( varchar(15) ) , products.unit_price ( decimal(19,4) ) , products.product_name ( varchar(80) ) , products.product_color ( varchar(20) ) , products.product_size ( varchar(20) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.invoice_number ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( decimal(19,4) ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.product_quantity ( varchar(50) ) , order_items.other_order_item_details ( varchar(255) ) ]\ntable invoice_line_items , columns = [ invoice_line_items.order_item_id ( integer ) , invoice_line_items.invoice_number ( integer ) , invoice_line_items.product_id ( integer ) , invoice_line_items.product_title ( varchar(80) ) , invoice_line_items.product_quantity ( varchar(50) ) , invoice_line_items.product_price ( decimal(19,4) ) , invoice_line_items.derived_product_cost ( decimal(19,4) ) , invoice_line_items.derived_vat_payable ( decimal(19,4) ) , invoice_line_items.derived_total_cost ( decimal(19,4) ) ]\nforeign keys :\norders.customer_id = customers.customer_id\ninvoices.order_id = orders.order_id\naccounts.customer_id = customers.customer_id\nproducts.production_type_code = product_categories.production_type_code\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.invoice_number = invoices.invoice_number\norder_items.order_id = orders.order_id\norder_items.product_id = products.product_id\ninvoice_line_items.product_id = products.product_id\ninvoice_line_items.invoice_number = invoices.invoice_number\ninvoice_line_items.order_item_id = order_items.order_item_id\nmatched contents :\ncustomers.customer_id ( 4 )\ninvoices.invoice_number ( 4 )\ninvoices.order_id ( 4 )\naccounts.account_id ( 4 )\nfinancial_transactions.transaction_id ( 4 )\nfinancial_transactions.account_id ( 4 )\norder_items.order_item_id ( 4 )\norder_items.order_id ( 4 )\ninvoice_line_items.order_item_id ( 4 )\ninvoice_line_items.product_quantity ( 4 )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\ncustomers_cards.card_type_code ( Credit )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable ref_document_status , columns = [ ref_document_status.document_status_code ( char(15) | primary key ) , ref_document_status.document_status_description ( varchar(255) ) ]\ntable ref_shipping_agents , columns = [ ref_shipping_agents.shipping_agent_code ( char(15) | primary key ) , ref_shipping_agents.shipping_agent_name ( varchar(255) ) , ref_shipping_agents.shipping_agent_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_status_code ( char(15) ) , documents.document_type_code ( char(15) ) , documents.shipping_agent_code ( char(15) ) , documents.receipt_date ( datetime ) , documents.receipt_number ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.other_details ( varchar(255) ) ]\ntable document_drafts , columns = [ document_drafts.document_id ( integer | primary key ) , document_drafts.draft_number ( integer | primary key ) , document_drafts.draft_details ( varchar(255) ) ]\ntable draft_copies , columns = [ draft_copies.document_id ( integer | primary key ) , draft_copies.draft_number ( integer | primary key ) , draft_copies.copy_number ( integer | primary key ) ]\ntable circulation_history , columns = [ circulation_history.document_id ( integer | primary key ) , circulation_history.draft_number ( integer | primary key ) , circulation_history.copy_number ( integer | primary key ) , circulation_history.employee_id ( integer | primary key ) ]\ntable documents_mailed , columns = [ documents_mailed.document_id ( integer | primary key ) , documents_mailed.mailed_to_address_id ( integer | primary key ) , documents_mailed.mailing_date ( datetime ) ]\nforeign keys :\ndocuments.shipping_agent_code = ref_shipping_agents.shipping_agent_code\ndocuments.document_status_code = ref_document_status.document_status_code\ndocuments.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_drafts.document_id = documents.document_id\ndraft_copies.document_id = document_drafts.document_id\ndraft_copies.draft_number = document_drafts.draft_number\ncirculation_history.employee_id = employees.employee_id\ncirculation_history.document_id = draft_copies.document_id\ncirculation_history.draft_number = draft_copies.draft_number\ncirculation_history.copy_number = draft_copies.copy_number\ndocuments_mailed.mailed_to_address_id = addresses.address_id\ndocuments_mailed.document_id = documents.document_id\nmatched contents :\naddresses.address_id ( 7 )\ndocuments.document_id ( 7 )\nemployees.employee_id ( 7 )\ndocument_drafts.document_id ( 7 )\ndocuments_mailed.document_id ( 7 )\ndocuments_mailed.mailed_to_address_id ( 7 )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.city ( San Francisco )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable customer_policies , columns = [ customer_policies.policy_id ( integer | primary key ) , customer_policies.customer_id ( integer ) , customer_policies.policy_type_code ( char(15) ) , customer_policies.start_date ( date ) , customer_policies.end_date ( date ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.policy_id ( integer ) , claims.date_claim_made ( date ) , claims.date_claim_settled ( date ) , claims.amount_claimed ( integer ) , claims.amount_settled ( integer ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.date_claim_made ( date ) , settlements.date_claim_settled ( date ) , settlements.amount_claimed ( integer ) , settlements.amount_settled ( integer ) , settlements.customer_policy_id ( integer ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.settlement_id ( integer ) , payments.payment_method_code ( varchar(255) ) , payments.date_payment_made ( date ) , payments.amount_payment ( integer ) ]\nforeign keys :\ncustomer_policies.customer_id = customers.customer_id\nclaims.policy_id = customer_policies.policy_id\nsettlements.claim_id = claims.claim_id\npayments.settlement_id = settlements.settlement_id\nmatched contents :\npayments.payment_method_code ( Visa )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2010 , 2001 )\nappearances.year ( 2010 , 2001 )\nbatting.year ( 2010 , 2001 )\nbatting_postseason.year ( 2010 , 2001 )\nfielding.year ( 2010 , 2001 )\nfielding.inn_outs ( 2010 , 2001 )\nfielding_postseason.year ( 2010 , 2001 )\nhall_of_fame.yearid ( 2010 , 2001 )\nhall_of_fame.category ( Player )\nhome_game.year ( 2010 , 2001 )\nmanager.year ( 2010 , 2001 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.game_num ( 2 )\nall_star.starting_pos ( 2 )\nappearances.g_all ( 2 )\nappearances.g_batting ( 2 )\nappearances.g_defense ( 2 )\nappearances.g_c ( 2 )\nappearances.g_1b ( 2 )\nappearances.g_2b ( 2 )\nappearances.g_3b ( 2 )\nappearances.g_cf ( 2 )\nplayer.name_last ( Parks )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ncustomer.postalcode ( 70174 )\ninvoice.billingpostalcode ( 70174 )",
  "database schema :\ntable investors , columns = [ investors.investor_id ( integer | primary key ) , investors.investor_details ( varchar(255) ) ]\ntable lots , columns = [ lots.lot_id ( integer | primary key ) , lots.investor_id ( integer ) , lots.lot_details ( varchar(255) ) ]\ntable ref_transaction_types , columns = [ ref_transaction_types.transaction_type_code ( varchar(10) | primary key ) , ref_transaction_types.transaction_type_description ( varchar(80) ) ]\ntable transactions , columns = [ transactions.transaction_id ( integer | primary key ) , transactions.investor_id ( integer ) , transactions.transaction_type_code ( varchar(10) ) , transactions.date_of_transaction ( datetime ) , transactions.amount_of_transaction ( decimal(19,4) ) , transactions.share_count ( varchar(40) ) , transactions.other_details ( varchar(255) ) ]\ntable sales , columns = [ sales.sales_transaction_id ( integer | primary key ) , sales.sales_details ( varchar(255) ) ]\ntable purchases , columns = [ purchases.purchase_transaction_id ( integer ) , purchases.purchase_details ( varchar(255) ) ]\ntable transactions_lots , columns = [ transactions_lots.transaction_id ( integer ) , transactions_lots.lot_id ( integer ) ]\nforeign keys :\nlots.investor_id = investors.investor_id\ntransactions.transaction_type_code = ref_transaction_types.transaction_type_code\ntransactions.investor_id = investors.investor_id\nsales.sales_transaction_id = transactions.transaction_id\npurchases.purchase_transaction_id = transactions.transaction_id\ntransactions_lots.transaction_id = transactions.transaction_id\ntransactions_lots.lot_id = lots.lot_id\nmatched contents :\ninvestors.investor_id ( 3 )\nlots.lot_id ( 3 )\ntransactions.transaction_id ( 3 )\ntransactions.investor_id ( 3 )\nsales.sales_transaction_id ( 3 )\npurchases.purchase_transaction_id ( 3 )\ntransactions_lots.transaction_id ( 3 )\ntransactions_lots.lot_id ( 3 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(40) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_name ( varchar(40) ) ]\ntable available_policies , columns = [ available_policies.policy_id ( integer | primary key ) , available_policies.policy_type_code ( char(15) ) , available_policies.customer_phone ( varchar(255) ) ]\ntable customers_policies , columns = [ customers_policies.customer_id ( integer | primary key ) , customers_policies.policy_id ( integer | primary key ) , customers_policies.date_opened ( date ) , customers_policies.date_closed ( date ) ]\ntable first_notification_of_loss , columns = [ first_notification_of_loss.fnol_id ( integer | primary key ) , first_notification_of_loss.customer_id ( integer ) , first_notification_of_loss.policy_id ( integer ) , first_notification_of_loss.service_id ( integer ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.fnol_id ( integer ) , claims.effective_date ( date ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.effective_date ( date ) , settlements.settlement_amount ( real ) ]\nforeign keys :\ncustomers_policies.policy_id = available_policies.policy_id\ncustomers_policies.customer_id = customers.customer_id\nfirst_notification_of_loss.customer_id = customers_policies.customer_id\nfirst_notification_of_loss.policy_id = customers_policies.policy_id\nfirst_notification_of_loss.service_id = services.service_id\nclaims.fnol_id = first_notification_of_loss.fnol_id\nsettlements.claim_id = claims.claim_id\nmatched contents :\navailable_policies.policy_type_code ( Life Insurance )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\nregions.region_id ( 2 )\ncountries.region_id ( 2 )",
  "database schema :\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.gender ( varchar(1) ) , staff.first_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.email_address ( varchar(255) ) , staff.phone_number ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_type_code ( varchar(20) ) , customers.address_line_1 ( varchar(80) ) , customers.address_line_2 ( varchar(80) ) , customers.town_city ( varchar(80) ) , customers.state ( varchar(80) ) , customers.email_address ( varchar(255) ) , customers.phone_number ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.product_category_code ( varchar(20) ) , products.date_product_first_available ( datetime ) , products.date_product_discontinued ( datetime ) , products.product_name ( varchar(80) ) , products.product_description ( varchar(255) ) , products.product_price ( decimal(19,4) ) ]\ntable complaints , columns = [ complaints.complaint_id ( integer ) , complaints.product_id ( integer ) , complaints.customer_id ( integer ) , complaints.complaint_outcome_code ( varchar(20) ) , complaints.complaint_status_code ( varchar(20) ) , complaints.complaint_type_code ( varchar(20) ) , complaints.date_complaint_raised ( datetime ) , complaints.date_complaint_closed ( datetime ) , complaints.staff_id ( integer ) ]\nforeign keys :\ncomplaints.customer_id = customers.customer_id\ncomplaints.product_id = products.product_id\ncomplaints.staff_id = staff.staff_id\nmatched contents :\ncomplaints.complaint_id ( 5 )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\nemployees.first_name ( Clara )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\ncustomers.customer_first_name ( Aniyah )\ncustomers.customer_last_name ( Feest )",
  "database schema :\ntable investors , columns = [ investors.investor_id ( integer | primary key ) , investors.investor_details ( varchar(255) ) ]\ntable lots , columns = [ lots.lot_id ( integer | primary key ) , lots.investor_id ( integer ) , lots.lot_details ( varchar(255) ) ]\ntable ref_transaction_types , columns = [ ref_transaction_types.transaction_type_code ( varchar(10) | primary key ) , ref_transaction_types.transaction_type_description ( varchar(80) ) ]\ntable transactions , columns = [ transactions.transaction_id ( integer | primary key ) , transactions.investor_id ( integer ) , transactions.transaction_type_code ( varchar(10) ) , transactions.date_of_transaction ( datetime ) , transactions.amount_of_transaction ( decimal(19,4) ) , transactions.share_count ( varchar(40) ) , transactions.other_details ( varchar(255) ) ]\ntable sales , columns = [ sales.sales_transaction_id ( integer | primary key ) , sales.sales_details ( varchar(255) ) ]\ntable purchases , columns = [ purchases.purchase_transaction_id ( integer ) , purchases.purchase_details ( varchar(255) ) ]\ntable transactions_lots , columns = [ transactions_lots.transaction_id ( integer ) , transactions_lots.lot_id ( integer ) ]\nforeign keys :\nlots.investor_id = investors.investor_id\ntransactions.transaction_type_code = ref_transaction_types.transaction_type_code\ntransactions.investor_id = investors.investor_id\nsales.sales_transaction_id = transactions.transaction_id\npurchases.purchase_transaction_id = transactions.transaction_id\ntransactions_lots.transaction_id = transactions.transaction_id\ntransactions_lots.lot_id = lots.lot_id\nmatched contents :\nref_transaction_types.transaction_type_code ( SALE )\nref_transaction_types.transaction_type_description ( Sale )\ntransactions.transaction_type_code ( SALE )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ncustomer.country ( Germany )\ninvoice.billingcountry ( Germany )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nref_hotel_star_ratings.star_rating_code ( 3 )\nref_attraction_types.attraction_type_code ( 3 )\nhotels.star_rating_code ( 3 )\ntourist_attractions.attraction_type_code ( 3 )",
  "database schema :\ntable city , columns = [ city.city_id ( int | primary key ) , city.official_name ( text ) , city.status ( text ) , city.area_km_2 ( real ) , city.population ( real ) , city.census_ranking ( text ) ]\ntable farm , columns = [ farm.farm_id ( int | primary key ) , farm.year ( int ) , farm.total_horses ( real ) , farm.working_horses ( real ) , farm.total_cattle ( real ) , farm.oxen ( real ) , farm.bulls ( real ) , farm.cows ( real ) , farm.pigs ( real ) , farm.sheep_and_goats ( real ) ]\ntable farm_competition , columns = [ farm_competition.competition_id ( int | primary key ) , farm_competition.year ( int ) , farm_competition.theme ( text ) , farm_competition.host_city_id ( int ) , farm_competition.hosts ( text ) ]\ntable competition_record , columns = [ competition_record.competition_id ( int | primary key ) , competition_record.farm_id ( int | primary key ) , competition_record.rank ( int ) ]\nforeign keys :\nfarm_competition.host_city_id = city.city_id\ncompetition_record.farm_id = farm.farm_id\ncompetition_record.competition_id = farm_competition.competition_id\nmatched contents :\ncity.status ( Village )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(80) ) , addresses.line_2 ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( char(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable people , columns = [ people.person_id ( integer | primary key ) , people.first_name ( varchar(255) ) , people.middle_name ( varchar(255) ) , people.last_name ( varchar(255) ) , people.cell_mobile_number ( varchar(40) ) , people.email_address ( varchar(40) ) , people.login_name ( varchar(40) ) , people.password ( varchar(40) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.student_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( varchar(100) | primary key ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable people_addresses , columns = [ people_addresses.person_address_id ( integer | primary key ) , people_addresses.person_id ( integer ) , people_addresses.address_id ( integer ) , people_addresses.date_from ( datetime ) , people_addresses.date_to ( datetime ) ]\ntable student_course_registrations , columns = [ student_course_registrations.student_id ( integer | primary key ) , student_course_registrations.course_id ( integer | primary key ) , student_course_registrations.registration_date ( datetime ) ]\ntable student_course_attendance , columns = [ student_course_attendance.student_id ( integer | primary key ) , student_course_attendance.course_id ( integer | primary key ) , student_course_attendance.date_of_attendance ( datetime ) ]\ntable candidates , columns = [ candidates.candidate_id ( integer | primary key ) , candidates.candidate_details ( varchar(255) ) ]\ntable candidate_assessments , columns = [ candidate_assessments.candidate_id ( integer | primary key ) , candidate_assessments.qualification ( char(15) | primary key ) , candidate_assessments.assessment_date ( datetime ) , candidate_assessments.asessment_outcome_code ( char(15) ) ]\nforeign keys :\nstudents.student_id = people.person_id\npeople_addresses.address_id = addresses.address_id\npeople_addresses.person_id = people.person_id\nstudent_course_registrations.course_id = courses.course_id\nstudent_course_registrations.student_id = students.student_id\nstudent_course_attendance.student_id = student_course_registrations.student_id\nstudent_course_attendance.course_id = student_course_registrations.course_id\ncandidates.candidate_id = people.person_id\ncandidate_assessments.candidate_id = candidates.candidate_id\nmatched contents :\ncourses.course_name ( English )\ncourses.course_description ( English )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nref_payment_methods.payment_method_code ( MasterCard )\ninvoices.payment_method_code ( MasterCard )",
  "database schema :\ntable songs , columns = [ songs.songid ( integer | primary key ) , songs.title ( text ) ]\ntable albums , columns = [ albums.aid ( integer | primary key ) , albums.title ( text ) , albums.year ( integer ) , albums.label ( text ) , albums.type ( text ) ]\ntable band , columns = [ band.id ( integer | primary key ) , band.firstname ( text ) , band.lastname ( text ) ]\ntable instruments , columns = [ instruments.songid ( integer | primary key ) , instruments.bandmateid ( integer | primary key ) , instruments.instrument ( text | primary key ) ]\ntable performance , columns = [ performance.songid ( integer | primary key ) , performance.bandmate ( integer | primary key ) , performance.stageposition ( text ) ]\ntable tracklists , columns = [ tracklists.albumid ( integer | primary key ) , tracklists.position ( integer | primary key ) , tracklists.songid ( integer ) ]\ntable vocals , columns = [ vocals.songid ( integer | primary key ) , vocals.bandmate ( integer | primary key ) , vocals.type ( text ) ]\nforeign keys :\ninstruments.bandmateid = band.id\ninstruments.songid = songs.songid\nperformance.bandmate = band.id\nperformance.songid = songs.songid\ntracklists.albumid = albums.aid\ntracklists.songid = songs.songid\nvocals.bandmate = band.id\nvocals.songid = songs.songid\nmatched contents : None",
  "database schema :\ntable department , columns = [ department.department_id ( int | primary key ) , department.name ( text ) , department.creation ( text ) , department.ranking ( int ) , department.budget_in_billions ( real ) , department.num_employees ( real ) ]\ntable head , columns = [ head.head_id ( int | primary key ) , head.name ( text ) , head.born_state ( text ) , head.age ( real ) ]\ntable management , columns = [ management.department_id ( int | primary key ) , management.head_id ( int | primary key ) , management.temporary_acting ( text ) ]\nforeign keys :\nmanagement.head_id = head.head_id\nmanagement.department_id = department.department_id\nmatched contents :\ndepartment.name ( State )\nhead.born_state ( California )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nartist.name ( Metallica )\ntrack.name ( Numbers )\ntrack.composer ( Metallica )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nplaylists.name ( Movies , Music )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_bookings.booking_status_code ( Provisional , Confirmed )",
  "database schema :\ntable publication , columns = [ publication.publication_id ( int | primary key ) , publication.book_id ( int ) , publication.publisher ( text ) , publication.publication_date ( text ) , publication.price ( real ) ]\ntable book , columns = [ book.book_id ( int | primary key ) , book.title ( text ) , book.issues ( real ) , book.writer ( text ) ]\nforeign keys :\npublication.book_id = book.book_id\nmatched contents : None",
  "database schema :\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_name ( text ) , region.date ( text ) , region.label ( text ) , region.format ( text ) , region.catalogue ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.minister ( text ) , party.took_office ( text ) , party.left_office ( text ) , party.region_id ( int ) , party.party_name ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.member_name ( text ) , member.party_id ( text ) , member.in_office ( text ) ]\ntable party_events , columns = [ party_events.event_id ( int | primary key ) , party_events.event_name ( text ) , party_events.party_id ( int ) , party_events.member_in_charge_id ( int ) ]\nforeign keys :\nparty.region_id = region.region_id\nmember.party_id = party.party_id\nparty_events.member_in_charge_id = member.member_id\nparty_events.party_id = party.party_id\nmatched contents :\nparty.party_name ( Progress Party )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2009 )\nappearances.year ( 2009 )\nbatting.year ( 2009 )\nbatting_postseason.year ( 2009 )\nfielding.year ( 2009 )\nfielding.inn_outs ( 2009 )\nfielding_postseason.year ( 2009 )\nhall_of_fame.yearid ( 2009 )\nhome_game.year ( 2009 )\nmanager.year ( 2009 )\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Count , Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable gymnast , columns = [ gymnast.gymnast_id ( int | primary key ) , gymnast.floor_exercise_points ( real ) , gymnast.pommel_horse_points ( real ) , gymnast.rings_points ( real ) , gymnast.vault_points ( real ) , gymnast.parallel_bars_points ( real ) , gymnast.horizontal_bar_points ( real ) , gymnast.total_points ( real ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.age ( real ) , people.height ( real ) , people.hometown ( text ) ]\nforeign keys :\ngymnast.gymnast_id = people.people_id\nmatched contents :\npeople.hometown ( Santo Domingo )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nflight.origin ( Los Angeles )\nflight.destination ( Los Angeles )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nrecord.result ( Win , Loss )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(80) ) , addresses.line_2 ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( char(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable people , columns = [ people.person_id ( integer | primary key ) , people.first_name ( varchar(255) ) , people.middle_name ( varchar(255) ) , people.last_name ( varchar(255) ) , people.cell_mobile_number ( varchar(40) ) , people.email_address ( varchar(40) ) , people.login_name ( varchar(40) ) , people.password ( varchar(40) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.student_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( varchar(100) | primary key ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable people_addresses , columns = [ people_addresses.person_address_id ( integer | primary key ) , people_addresses.person_id ( integer ) , people_addresses.address_id ( integer ) , people_addresses.date_from ( datetime ) , people_addresses.date_to ( datetime ) ]\ntable student_course_registrations , columns = [ student_course_registrations.student_id ( integer | primary key ) , student_course_registrations.course_id ( integer | primary key ) , student_course_registrations.registration_date ( datetime ) ]\ntable student_course_attendance , columns = [ student_course_attendance.student_id ( integer | primary key ) , student_course_attendance.course_id ( integer | primary key ) , student_course_attendance.date_of_attendance ( datetime ) ]\ntable candidates , columns = [ candidates.candidate_id ( integer | primary key ) , candidates.candidate_details ( varchar(255) ) ]\ntable candidate_assessments , columns = [ candidate_assessments.candidate_id ( integer | primary key ) , candidate_assessments.qualification ( char(15) | primary key ) , candidate_assessments.assessment_date ( datetime ) , candidate_assessments.asessment_outcome_code ( char(15) ) ]\nforeign keys :\nstudents.student_id = people.person_id\npeople_addresses.address_id = addresses.address_id\npeople_addresses.person_id = people.person_id\nstudent_course_registrations.course_id = courses.course_id\nstudent_course_registrations.student_id = students.student_id\nstudent_course_attendance.student_id = student_course_registrations.student_id\nstudent_course_attendance.course_id = student_course_registrations.course_id\ncandidates.candidate_id = people.person_id\ncandidate_assessments.candidate_id = candidates.candidate_id\nmatched contents :\npeople.person_id ( 121 )\nstudents.student_id ( 121 )\npeople_addresses.person_id ( 121 )\nstudent_course_registrations.student_id ( 121 )\nstudent_course_attendance.student_id ( 121 )\ncandidates.candidate_id ( 121 )\ncandidate_assessments.candidate_id ( 121 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_details ( varchar(255) ) ]\ntable policies , columns = [ policies.policy_id ( integer | primary key ) , policies.customer_id ( integer ) , policies.policy_type_code ( char(15) ) , policies.start_date ( datetime ) , policies.end_date ( datetime ) ]\ntable claim_headers , columns = [ claim_headers.claim_header_id ( integer | primary key ) , claim_headers.claim_status_code ( char(15) ) , claim_headers.claim_type_code ( char(15) ) , claim_headers.policy_id ( integer ) , claim_headers.date_of_claim ( datetime ) , claim_headers.date_of_settlement ( datetime ) , claim_headers.amount_claimed ( decimal(20,4) ) , claim_headers.amount_piad ( decimal(20,4) ) ]\ntable claims_documents , columns = [ claims_documents.claim_id ( integer | primary key ) , claims_documents.document_type_code ( char(15) | primary key ) , claims_documents.created_by_staff_id ( integer ) , claims_documents.created_date ( integer ) ]\ntable claims_processing_stages , columns = [ claims_processing_stages.claim_stage_id ( integer | primary key ) , claims_processing_stages.next_claim_stage_id ( integer ) , claims_processing_stages.claim_status_name ( varchar(255) ) , claims_processing_stages.claim_status_description ( varchar(255) ) ]\ntable claims_processing , columns = [ claims_processing.claim_processing_id ( integer | primary key ) , claims_processing.claim_id ( integer ) , claims_processing.claim_outcome_code ( char(15) ) , claims_processing.claim_stage_id ( integer ) , claims_processing.staff_id ( integer ) ]\nforeign keys :\npolicies.customer_id = customers.customer_id\nclaim_headers.policy_id = policies.policy_id\nclaims_documents.created_by_staff_id = staff.staff_id\nclaims_documents.claim_id = claim_headers.claim_header_id\nclaims_processing.staff_id = staff.staff_id\nclaims_processing.claim_id = claim_headers.claim_header_id\nmatched contents :\nclaims_processing_stages.claim_status_name ( Open )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nallergy_type.allergytype ( animal )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.game_num ( 2 )\nall_star.starting_pos ( 2 , 4 )\nappearances.g_all ( 2 , 4 )\nappearances.g_batting ( 2 , 4 )\nappearances.g_defense ( 2 , 4 )\nappearances.g_c ( 2 , 4 )\nappearances.g_1b ( 2 , 4 )\nappearances.g_2b ( 2 , 4 )\nappearances.g_3b ( 2 , 4 )\nappearances.g_cf ( 2 , 4 )\nappearances.g_dh ( 4 )\nplayer.name_last ( Parks )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nrooms.bedtype ( King )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nclub.clublocation ( HHH )",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents :\nmedicine.name ( Amisulpride )\nmedicine_enzyme_interaction.interaction_type ( inhibitor )",
  "database schema :\ntable roller_coaster , columns = [ roller_coaster.roller_coaster_id ( int | primary key ) , roller_coaster.name ( text ) , roller_coaster.park ( text ) , roller_coaster.country_id ( int ) , roller_coaster.length ( real ) , roller_coaster.height ( real ) , roller_coaster.speed ( text ) , roller_coaster.opened ( text ) , roller_coaster.status ( text ) ]\ntable country , columns = [ country.country_id ( int | primary key ) , country.name ( text ) , country.population ( int ) , country.area ( int ) , country.languages ( text ) ]\nforeign keys :\nroller_coaster.country_id = country.country_id\nmatched contents :\ncountry.languages ( German )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents : None",
  "database schema :\ntable accounts , columns = [ accounts.custid ( bigint | primary key | comment : customer id ) , accounts.name ( varchar(64) ) ]\ntable savings , columns = [ savings.custid ( bigint | primary key | comment : customer id ) , savings.balance ( float ) ]\ntable checking , columns = [ checking.custid ( bigint | primary key | comment : customer id ) , checking.balance ( float ) ]\nforeign keys :\nsavings.custid = accounts.custid\nchecking.custid = accounts.custid\nmatched contents :\naccounts.custid ( 3 )\nsavings.custid ( 3 )\nchecking.custid ( 3 )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents : None",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nroles.role_code ( MG )\nemployees.role_code ( MG )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\naddresses.address_id ( 2 , 4 )\nstaff.staff_id ( 2 , 4 )\nstaff.staff_address_id ( 2 , 4 )\ncustomers.customer_id ( 2 , 4 )\ncustomers.customer_address_id ( 2 )\ncustomer_payments.customer_id ( 2 , 4 )\nlessons.lesson_id ( 2 , 4 )\nlessons.customer_id ( 2 )\nlessons.staff_id ( 4 )\nlessons.vehicle_id ( 2 )\nlessons.lesson_time ( 2 , 4 )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nrating.stars ( 4 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(80) ) , addresses.line_2 ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( char(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable people , columns = [ people.person_id ( integer | primary key ) , people.first_name ( varchar(255) ) , people.middle_name ( varchar(255) ) , people.last_name ( varchar(255) ) , people.cell_mobile_number ( varchar(40) ) , people.email_address ( varchar(40) ) , people.login_name ( varchar(40) ) , people.password ( varchar(40) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.student_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( varchar(100) | primary key ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable people_addresses , columns = [ people_addresses.person_address_id ( integer | primary key ) , people_addresses.person_id ( integer ) , people_addresses.address_id ( integer ) , people_addresses.date_from ( datetime ) , people_addresses.date_to ( datetime ) ]\ntable student_course_registrations , columns = [ student_course_registrations.student_id ( integer | primary key ) , student_course_registrations.course_id ( integer | primary key ) , student_course_registrations.registration_date ( datetime ) ]\ntable student_course_attendance , columns = [ student_course_attendance.student_id ( integer | primary key ) , student_course_attendance.course_id ( integer | primary key ) , student_course_attendance.date_of_attendance ( datetime ) ]\ntable candidates , columns = [ candidates.candidate_id ( integer | primary key ) , candidates.candidate_details ( varchar(255) ) ]\ntable candidate_assessments , columns = [ candidate_assessments.candidate_id ( integer | primary key ) , candidate_assessments.qualification ( char(15) | primary key ) , candidate_assessments.assessment_date ( datetime ) , candidate_assessments.asessment_outcome_code ( char(15) ) ]\nforeign keys :\nstudents.student_id = people.person_id\npeople_addresses.address_id = addresses.address_id\npeople_addresses.person_id = people.person_id\nstudent_course_registrations.course_id = courses.course_id\nstudent_course_registrations.student_id = students.student_id\nstudent_course_attendance.student_id = student_course_registrations.student_id\nstudent_course_attendance.course_id = student_course_registrations.course_id\ncandidates.candidate_id = people.person_id\ncandidate_assessments.candidate_id = candidates.candidate_id\nmatched contents :\ncandidate_assessments.asessment_outcome_code ( Pass )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nstudent.fname ( Mark )\nfaculty.lname ( Giuliano )\nfaculty.fname ( Mark )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\ncamera_lens.brand ( Sigma )\nphotos.name ( the mountain )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nfaculty.rank ( Instructor )\ncourse.cname ( COMPUTER LITERACY )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(50) ) , customers.customer_middle_initial ( varchar(1) ) , customers.customer_last_name ( varchar(50) ) , customers.gender ( varchar(1) ) , customers.email_address ( varchar(255) ) , customers.login_name ( varchar(80) ) , customers.login_password ( varchar(20) ) , customers.phone_number ( varchar(255) ) , customers.town_city ( varchar(50) ) , customers.state_county_province ( varchar(50) ) , customers.country ( varchar(50) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.order_id ( integer ) , invoices.invoice_date ( datetime ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.date_account_opened ( datetime ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable product_categories , columns = [ product_categories.production_type_code ( varchar(15) | primary key ) , product_categories.product_type_description ( varchar(80) ) , product_categories.vat_rating ( decimal(19,4) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.production_type_code ( varchar(15) ) , products.unit_price ( decimal(19,4) ) , products.product_name ( varchar(80) ) , products.product_color ( varchar(20) ) , products.product_size ( varchar(20) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.invoice_number ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( decimal(19,4) ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.product_quantity ( varchar(50) ) , order_items.other_order_item_details ( varchar(255) ) ]\ntable invoice_line_items , columns = [ invoice_line_items.order_item_id ( integer ) , invoice_line_items.invoice_number ( integer ) , invoice_line_items.product_id ( integer ) , invoice_line_items.product_title ( varchar(80) ) , invoice_line_items.product_quantity ( varchar(50) ) , invoice_line_items.product_price ( decimal(19,4) ) , invoice_line_items.derived_product_cost ( decimal(19,4) ) , invoice_line_items.derived_vat_payable ( decimal(19,4) ) , invoice_line_items.derived_total_cost ( decimal(19,4) ) ]\nforeign keys :\norders.customer_id = customers.customer_id\ninvoices.order_id = orders.order_id\naccounts.customer_id = customers.customer_id\nproducts.production_type_code = product_categories.production_type_code\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.invoice_number = invoices.invoice_number\norder_items.order_id = orders.order_id\norder_items.product_id = products.product_id\ninvoice_line_items.product_id = products.product_id\ninvoice_line_items.invoice_number = invoices.invoice_number\ninvoice_line_items.order_item_id = order_items.order_item_id\nmatched contents : None",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\ncircuits.circuitid ( 30 )\ndrivers.driverid ( 30 )\ndrivers.driverref ( driver )\ndrivers.number ( 30 )\ndrivers.surname ( Driver )\nconstructors.constructorid ( 30 )\nconstructorstandings.constructorstandingsid ( 30 )\nconstructorstandings.raceid ( 30 )\nconstructorstandings.constructorid ( 30 )\nconstructorresults.constructorresultsid ( 30 )\nconstructorresults.raceid ( 30 )\nconstructorresults.constructorid ( 30 )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\nelection.committee ( Economic Matters , Appropriations )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nproducts.product_name ( photo , film )\nservices.product_name ( photo , film )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartments.apt_id ( 2 )\napartments.bathroom_count ( 2 )\napartment_facilities.apt_id ( 2 )\nguests.guest_id ( 2 )\napartment_bookings.apt_id ( 2 )\napartment_bookings.guest_id ( 2 )\nview_unit_status.apt_id ( 2 )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\nattribute_definitions.attribute_id ( 3 )\ncatalogs.catalog_id ( 3 , 5 )\ncatalog_contents.catalog_entry_id ( 3 , 5 )\ncatalog_contents.parent_entry_id ( 3 , 5 )\ncatalog_contents.previous_entry_id ( 3 , 5 )\ncatalog_contents.next_entry_id ( 3 )\ncatalog_contents.capacity ( 5 )\ncatalog_contents.length ( 3 , 5 )\ncatalog_contents.height ( 3 , 5 )\ncatalog_contents.width ( 3 , 5 )\ncatalog_contents_additional_attributes.catalog_entry_id ( 5 )\ncatalog_contents_additional_attributes.attribute_id ( 3 )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\ntrip.zip_code ( 94002 )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\nstudents.family_name ( Jaskolski , Langosh )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ngenre.name ( Jazz )\ntrack.name ( Belong )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nref_incident_type.incident_type_code ( VIOLENCE )\nref_incident_type.incident_type_description ( Violence )\nbehavior_incident.incident_type_code ( VIOLENCE )",
  "database schema :\ntable county_public_safety , columns = [ county_public_safety.county_id ( int | primary key ) , county_public_safety.name ( text ) , county_public_safety.population ( int ) , county_public_safety.police_officers ( int ) , county_public_safety.residents_per_officer ( int ) , county_public_safety.case_burden ( int ) , county_public_safety.crime_rate ( real ) , county_public_safety.police_force ( text ) , county_public_safety.location ( text ) ]\ntable city , columns = [ city.city_id ( int | primary key ) , city.county_id ( int ) , city.name ( text ) , city.white ( real ) , city.black ( real ) , city.amerindian ( real ) , city.asian ( real ) , city.multiracial ( real ) , city.hispanic ( real ) ]\nforeign keys :\ncity.county_id = county_public_safety.county_id\nmatched contents : None",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\npapers.title ( Nameless, Painless )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\ncustomers.customer_name ( Harold )",
  "database schema :\ntable circuits , columns = [ circuits.circuitid ( integer | primary key ) , circuits.circuitref ( text | comment : circuit reference ) , circuits.name ( text ) , circuits.location ( text ) , circuits.country ( text ) , circuits.lat ( real | comment : latitude ) , circuits.lng ( real | comment : longitude ) , circuits.alt ( text | comment : altitude ) , circuits.url ( text ) ]\ntable races , columns = [ races.raceid ( integer | primary key ) , races.year ( integer ) , races.round ( integer ) , races.circuitid ( integer ) , races.name ( text ) , races.date ( text ) , races.time ( text ) , races.url ( text ) ]\ntable drivers , columns = [ drivers.driverid ( integer | primary key ) , drivers.driverref ( text | comment : driver reference ) , drivers.number ( text ) , drivers.code ( text ) , drivers.forename ( text ) , drivers.surname ( text ) , drivers.dob ( text ) , drivers.nationality ( text ) , drivers.url ( text ) ]\ntable status , columns = [ status.statusid ( integer | primary key ) , status.status ( text ) ]\ntable seasons , columns = [ seasons.year ( integer | primary key ) , seasons.url ( text ) ]\ntable constructors , columns = [ constructors.constructorid ( integer | primary key ) , constructors.constructorref ( text | comment : constructor reference ) , constructors.name ( text ) , constructors.nationality ( text ) , constructors.url ( text ) ]\ntable constructorstandings , columns = [ constructorstandings.constructorstandingsid ( integer | primary key ) , constructorstandings.raceid ( integer ) , constructorstandings.constructorid ( integer ) , constructorstandings.points ( real ) , constructorstandings.position ( integer ) , constructorstandings.positiontext ( text ) , constructorstandings.wins ( integer ) ]\ntable results , columns = [ results.resultid ( integer | primary key ) , results.raceid ( integer ) , results.driverid ( integer ) , results.constructorid ( integer ) , results.number ( integer ) , results.grid ( integer ) , results.position ( text ) , results.positiontext ( text ) , results.positionorder ( integer ) , results.points ( real ) , results.laps ( text ) , results.time ( text ) , results.milliseconds ( text ) , results.fastestlap ( text ) , results.rank ( text ) , results.fastestlaptime ( text ) , results.fastestlapspeed ( text ) , results.statusid ( integer ) ]\ntable driverstandings , columns = [ driverstandings.driverstandingsid ( integer | primary key ) , driverstandings.raceid ( integer ) , driverstandings.driverid ( integer ) , driverstandings.points ( real ) , driverstandings.position ( integer ) , driverstandings.positiontext ( text ) , driverstandings.wins ( integer ) ]\ntable constructorresults , columns = [ constructorresults.constructorresultsid ( integer | primary key ) , constructorresults.raceid ( integer ) , constructorresults.constructorid ( integer ) , constructorresults.points ( real ) , constructorresults.status ( text ) ]\ntable qualifying , columns = [ qualifying.qualifyid ( integer | primary key ) , qualifying.raceid ( integer ) , qualifying.driverid ( integer ) , qualifying.constructorid ( integer ) , qualifying.number ( integer ) , qualifying.position ( integer ) , qualifying.q1 ( text ) , qualifying.q2 ( text ) , qualifying.q3 ( text ) ]\ntable pitstops , columns = [ pitstops.raceid ( integer | primary key ) , pitstops.driverid ( integer | primary key ) , pitstops.stop ( integer | primary key ) , pitstops.lap ( integer ) , pitstops.time ( text ) , pitstops.duration ( text ) , pitstops.milliseconds ( integer ) ]\ntable laptimes , columns = [ laptimes.raceid ( integer | primary key ) , laptimes.driverid ( integer | primary key ) , laptimes.lap ( integer | primary key ) , laptimes.position ( integer ) , laptimes.time ( text ) , laptimes.milliseconds ( integer ) ]\nforeign keys :\nraces.circuitid = circuits.circuitid\nconstructorstandings.raceid = races.raceid\nconstructorstandings.constructorid = constructors.constructorid\nresults.driverid = drivers.driverid\nresults.raceid = races.raceid\nresults.constructorid = constructors.constructorid\ndriverstandings.driverid = drivers.driverid\ndriverstandings.raceid = races.raceid\nconstructorresults.raceid = races.raceid\nconstructorresults.constructorid = constructors.constructorid\nqualifying.driverid = drivers.driverid\nqualifying.raceid = races.raceid\nqualifying.constructorid = constructors.constructorid\npitstops.driverid = drivers.driverid\npitstops.raceid = races.raceid\nlaptimes.driverid = drivers.driverid\nlaptimes.raceid = races.raceid\nmatched contents :\nraces.year ( 2017 )\nseasons.year ( 2017 )\nresults.resultid ( 2017 )\nconstructorresults.constructorresultsid ( 2017 )\nqualifying.qualifyid ( 2017 )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.country ( text ) , people.is_male ( text ) , people.age ( int ) ]\ntable church , columns = [ church.church_id ( int | primary key ) , church.name ( text ) , church.organized_by ( text ) , church.open_date ( int ) , church.continuation_of ( text ) ]\ntable wedding , columns = [ wedding.church_id ( int | primary key ) , wedding.male_id ( int | primary key ) , wedding.female_id ( int | primary key ) , wedding.year ( int ) ]\nforeign keys :\nwedding.female_id = people.people_id\nwedding.male_id = people.people_id\nwedding.church_id = church.church_id\nmatched contents :\nwedding.year ( 2015 )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\naddresses.address_id ( 10 )\ncustomers.customer_id ( 10 )\nproducts.product_id ( 10 )\ncustomer_addresses.customer_id ( 10 )\ncustomer_addresses.address_id ( 10 )\ncustomer_orders.order_id ( 10 )\ncustomer_orders.customer_id ( 10 )\ndepartment_stores.dept_store_id ( 10 )\norder_items.order_item_id ( 10 )\norder_items.product_id ( 10 )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nscreen_mode.type ( Graphics )\nphone.company_name ( Nokia Corporation )",
  "database schema :\ntable item , columns = [ item.i_id ( integer | primary key | comment : item id ) , item.title ( varchar(20) ) ]\ntable review , columns = [ review.a_id ( integer | primary key ) , review.u_id ( integer | comment : user id ) , review.i_id ( integer | comment : item id ) , review.rating ( integer ) , review.rank ( integer ) ]\ntable useracct , columns = [ useracct.u_id ( integer | primary key | comment : user id ) , useracct.name ( varchar(128) ) ]\ntable trust , columns = [ trust.source_u_id ( integer | comment : source user id ) , trust.target_u_id ( integer | comment : target user id ) , trust.trust ( integer ) ]\nforeign keys :\nreview.i_id = item.i_id\nreview.u_id = useracct.u_id\ntrust.target_u_id = useracct.u_id\ntrust.source_u_id = useracct.u_id\nmatched contents :\nitem.i_id ( 5 )\nreview.a_id ( 5 )\nreview.i_id ( 5 )\nreview.rating ( 5 )\nreview.rank ( 5 )\nuseracct.u_id ( 5 )\ntrust.target_u_id ( 5 )\ntrust.trust ( 8 )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nswimmer.id ( 2 )\nstadium.id ( 2 )\nevent.id ( 2 )\nevent.stadium_id ( 2 )\nrecord.id ( 2 )\nrecord.swimmer_id ( 2 )\nrecord.event_id ( 2 )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents :\nmill.location ( Donceel )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\naddresses.address_id ( 2 )\ndepartment_store_chain.dept_store_chain_id ( 2 )\ncustomers.customer_id ( 2 )\ncustomer_addresses.customer_id ( 2 )\ncustomer_addresses.address_id ( 2 )\ncustomer_orders.order_id ( 2 )\ndepartment_stores.dept_store_id ( 2 )\ndepartment_stores.dept_store_chain_id ( 2 )\ndepartments.department_id ( 2 )\norder_items.order_item_id ( 2 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nalbum.albumid ( 20 )\nalbum.artistid ( 20 )\nartist.artistid ( 20 )\ncustomer.customerid ( 20 )\ngenre.genreid ( 20 )\ninvoice.invoiceid ( 20 )\ninvoice.customerid ( 20 )\ninvoiceline.invoicelineid ( 20 )\ninvoiceline.invoiceid ( 20 )\ninvoiceline.trackid ( 20 )\ntrack.name ( Please )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nref_product_categories.product_category_code ( Seeds )\nref_product_categories.product_category_description ( Seeds )\nproducts.product_category_code ( Seeds )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomer_orders.order_status ( Cancelled )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\nfaculty.building ( NEB )\ndepartment.building ( NEB )",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_buildings.building_short_name ( Columbus Square )\napartment_buildings.building_full_name ( Columbus Square )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\ninst.country ( USA )\nauthors.lname ( Turon )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nweather.max_sea_level_pressure_inches ( 30.3 )\nweather.mean_sea_level_pressure_inches ( 30.3 )\nweather.min_sea_level_pressure_inches ( 30.3 )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nmanufacturers.headquarter ( Beijing , Tokyo )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.name ( text ) , artist.country ( text ) , artist.year_join ( int ) , artist.age ( int ) ]\ntable exhibition , columns = [ exhibition.exhibition_id ( int | primary key ) , exhibition.year ( int ) , exhibition.theme ( text ) , exhibition.artist_id ( int ) , exhibition.ticket_price ( real ) ]\ntable exhibition_record , columns = [ exhibition_record.exhibition_id ( int | primary key ) , exhibition_record.date ( text | primary key ) , exhibition_record.attendance ( int ) ]\nforeign keys :\nexhibition.artist_id = artist.artist_id\nexhibition_record.exhibition_id = exhibition.exhibition_id\nmatched contents :\nartist.country ( United States )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_details ( varchar(255) ) ]\ntable policies , columns = [ policies.policy_id ( integer | primary key ) , policies.customer_id ( integer ) , policies.policy_type_code ( char(15) ) , policies.start_date ( datetime ) , policies.end_date ( datetime ) ]\ntable claim_headers , columns = [ claim_headers.claim_header_id ( integer | primary key ) , claim_headers.claim_status_code ( char(15) ) , claim_headers.claim_type_code ( char(15) ) , claim_headers.policy_id ( integer ) , claim_headers.date_of_claim ( datetime ) , claim_headers.date_of_settlement ( datetime ) , claim_headers.amount_claimed ( decimal(20,4) ) , claim_headers.amount_piad ( decimal(20,4) ) ]\ntable claims_documents , columns = [ claims_documents.claim_id ( integer | primary key ) , claims_documents.document_type_code ( char(15) | primary key ) , claims_documents.created_by_staff_id ( integer ) , claims_documents.created_date ( integer ) ]\ntable claims_processing_stages , columns = [ claims_processing_stages.claim_stage_id ( integer | primary key ) , claims_processing_stages.next_claim_stage_id ( integer ) , claims_processing_stages.claim_status_name ( varchar(255) ) , claims_processing_stages.claim_status_description ( varchar(255) ) ]\ntable claims_processing , columns = [ claims_processing.claim_processing_id ( integer | primary key ) , claims_processing.claim_id ( integer ) , claims_processing.claim_outcome_code ( char(15) ) , claims_processing.claim_stage_id ( integer ) , claims_processing.staff_id ( integer ) ]\nforeign keys :\npolicies.customer_id = customers.customer_id\nclaim_headers.policy_id = policies.policy_id\nclaims_documents.created_by_staff_id = staff.staff_id\nclaims_documents.claim_id = claim_headers.claim_header_id\nclaims_processing.staff_id = staff.staff_id\nclaims_processing.claim_id = claim_headers.claim_header_id\nmatched contents :\nclaims_documents.document_type_code ( Document )",
  "database schema :\ntable college , columns = [ college.college_id ( int | primary key ) , college.name ( text ) , college.leader_name ( text ) , college.college_location ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.country ( text ) , member.college_id ( int ) ]\ntable round , columns = [ round.round_id ( int | primary key ) , round.member_id ( int | primary key ) , round.decoration_theme ( text ) , round.rank_in_round ( int ) ]\nforeign keys :\nmember.college_id = college.college_id\nround.member_id = member.member_id\nmatched contents :\nmember.country ( Canada )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.campus ( San Jose State University )\ncampuses.location ( San Jose )\ncsu_fees.year ( 1996 )\ndegrees.year ( 1996 )\nenrollments.year ( 1996 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.town_city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( varchar(15) ) , services.service_name ( varchar(80) ) , services.service_descriptio ( varchar(255) ) ]\ntable forms , columns = [ forms.form_id ( integer | primary key ) , forms.form_type_code ( varchar(15) ) , forms.service_id ( integer ) , forms.form_number ( varchar(50) ) , forms.form_name ( varchar(80) ) , forms.form_description ( varchar(255) ) ]\ntable individuals , columns = [ individuals.individual_id ( integer | primary key ) , individuals.individual_first_name ( varchar(80) ) , individuals.individual_middle_name ( varchar(80) ) , individuals.inidividual_phone ( varchar(80) ) , individuals.individual_email ( varchar(80) ) , individuals.individual_address ( varchar(255) ) , individuals.individual_last_name ( varchar(80) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.date_formed ( datetime ) , organizations.organization_name ( varchar(255) ) , organizations.uk_vat_number ( varchar(20) ) ]\ntable parties , columns = [ parties.party_id ( integer | primary key ) , parties.payment_method_code ( varchar(15) ) , parties.party_phone ( varchar(80) ) , parties.party_email ( varchar(80) ) ]\ntable organization_contact_individuals , columns = [ organization_contact_individuals.individual_id ( integer | primary key ) , organization_contact_individuals.organization_id ( integer | primary key ) , organization_contact_individuals.date_contact_from ( datetime ) , organization_contact_individuals.date_contact_to ( datetime ) ]\ntable party_addresses , columns = [ party_addresses.party_id ( integer | primary key ) , party_addresses.address_id ( integer | primary key ) , party_addresses.date_address_from ( datetime ) , party_addresses.address_type_code ( varchar(15) ) , party_addresses.date_address_to ( datetime ) ]\ntable party_forms , columns = [ party_forms.party_id ( integer | primary key ) , party_forms.form_id ( integer | primary key ) , party_forms.date_completion_started ( datetime ) , party_forms.form_status_code ( varchar(15) ) , party_forms.date_fully_completed ( datetime ) ]\ntable party_services , columns = [ party_services.booking_id ( integer ) , party_services.customer_id ( integer ) , party_services.service_id ( integer ) , party_services.service_datetime ( datetime ) , party_services.booking_made_date ( datetime ) ]\nforeign keys :\nforms.service_id = services.service_id\norganization_contact_individuals.individual_id = individuals.individual_id\norganization_contact_individuals.organization_id = organizations.organization_id\nparty_addresses.party_id = parties.party_id\nparty_addresses.address_id = addresses.address_id\nparty_forms.form_id = forms.form_id\nparty_forms.party_id = parties.party_id\nparty_services.customer_id = parties.party_id\nparty_services.service_id = services.service_id\nmatched contents :\nparties.party_email ( enrico09@example.com )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(40) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_name ( varchar(40) ) ]\ntable available_policies , columns = [ available_policies.policy_id ( integer | primary key ) , available_policies.policy_type_code ( char(15) ) , available_policies.customer_phone ( varchar(255) ) ]\ntable customers_policies , columns = [ customers_policies.customer_id ( integer | primary key ) , customers_policies.policy_id ( integer | primary key ) , customers_policies.date_opened ( date ) , customers_policies.date_closed ( date ) ]\ntable first_notification_of_loss , columns = [ first_notification_of_loss.fnol_id ( integer | primary key ) , first_notification_of_loss.customer_id ( integer ) , first_notification_of_loss.policy_id ( integer ) , first_notification_of_loss.service_id ( integer ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.fnol_id ( integer ) , claims.effective_date ( date ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.effective_date ( date ) , settlements.settlement_amount ( real ) ]\nforeign keys :\ncustomers_policies.policy_id = available_policies.policy_id\ncustomers_policies.customer_id = customers.customer_id\nfirst_notification_of_loss.customer_id = customers_policies.customer_id\nfirst_notification_of_loss.policy_id = customers_policies.policy_id\nfirst_notification_of_loss.service_id = services.service_id\nclaims.fnol_id = first_notification_of_loss.fnol_id\nsettlements.claim_id = claims.claim_id\nmatched contents :\nservices.service_name ( Upgrade a policy , Close a policy )",
  "database schema :\ntable follows , columns = [ follows.f1 ( int(11) | primary key | comment : user id ) , follows.f2 ( int(11) | primary key | comment : follower id ) ]\ntable tweets , columns = [ tweets.id ( bigint(20) | primary key ) , tweets.uid ( int(11) | comment : user id ) , tweets.text ( char(140) ) , tweets.createdate ( datetime ) ]\ntable user_profiles , columns = [ user_profiles.uid ( int(11) | primary key ) , user_profiles.name ( varchar(255) ) , user_profiles.email ( varchar(255) ) , user_profiles.partitionid ( int(11) ) , user_profiles.followers ( int(11) ) ]\nforeign keys :\nfollows.f2 = user_profiles.uid\nfollows.f1 = user_profiles.uid\ntweets.uid = user_profiles.uid\nmatched contents :\nuser_profiles.name ( Mary )",
  "database schema :\ntable flight , columns = [ flight.flno ( number(4,0) | primary key | comment : flight number ) , flight.origin ( varchar2(20) ) , flight.destination ( varchar2(20) ) , flight.distance ( number(6,0) ) , flight.departure_date ( date ) , flight.arrival_date ( date ) , flight.price ( number(7,2) ) , flight.aid ( number(9,0) | comment : airline id ) ]\ntable aircraft , columns = [ aircraft.aid ( number(9,0) | primary key | comment : airline id ) , aircraft.name ( varchar2(30) ) , aircraft.distance ( number(6,0) ) ]\ntable employee , columns = [ employee.eid ( number(9,0) | primary key | comment : employee id ) , employee.name ( varchar2(30) ) , employee.salary ( number(10,2) ) ]\ntable certificate , columns = [ certificate.eid ( number(9,0) | primary key | comment : employee id ) , certificate.aid ( number(9,0) | primary key | comment : airline id ) ]\nforeign keys :\nflight.aid = aircraft.aid\ncertificate.aid = aircraft.aid\ncertificate.eid = employee.eid\nmatched contents :\nflight.aid ( 3 )\naircraft.aid ( 3 )\ncertificate.aid ( 3 )",
  "database schema :\ntable wrestler , columns = [ wrestler.wrestler_id ( int | primary key ) , wrestler.name ( text ) , wrestler.reign ( text ) , wrestler.days_held ( text ) , wrestler.location ( text ) , wrestler.event ( text ) ]\ntable elimination , columns = [ elimination.elimination_id ( text | primary key ) , elimination.wrestler_id ( text ) , elimination.team ( text ) , elimination.eliminated_by ( text ) , elimination.elimination_move ( text ) , elimination.time ( text ) ]\nforeign keys :\nelimination.wrestler_id = wrestler.wrestler_id\nmatched contents :\nelimination.eliminated_by ( Punk , Orton )",
  "database schema :\ntable airport , columns = [ airport.id ( int | primary key ) , airport.city ( text ) , airport.country ( text ) , airport.iata ( text ) , airport.icao ( text ) , airport.name ( text ) ]\ntable operate_company , columns = [ operate_company.id ( int | primary key ) , operate_company.name ( text ) , operate_company.type ( text ) , operate_company.principal_activities ( text ) , operate_company.incorporated_in ( text ) , operate_company.group_equity_shareholding ( real ) ]\ntable flight , columns = [ flight.id ( int | primary key ) , flight.vehicle_flight_number ( text ) , flight.date ( text ) , flight.pilot ( text ) , flight.velocity ( real ) , flight.altitude ( real ) , flight.airport_id ( int ) , flight.company_id ( int ) ]\nforeign keys :\nflight.company_id = operate_company.id\nflight.airport_id = airport.id\nmatched contents :\nflight.pilot ( Thompson )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nrooms.beds ( 2 )\nrooms.maxoccupancy ( 2 )\nreservations.adults ( 2 )\nreservations.kids ( 2 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.town_city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( varchar(15) ) , services.service_name ( varchar(80) ) , services.service_descriptio ( varchar(255) ) ]\ntable forms , columns = [ forms.form_id ( integer | primary key ) , forms.form_type_code ( varchar(15) ) , forms.service_id ( integer ) , forms.form_number ( varchar(50) ) , forms.form_name ( varchar(80) ) , forms.form_description ( varchar(255) ) ]\ntable individuals , columns = [ individuals.individual_id ( integer | primary key ) , individuals.individual_first_name ( varchar(80) ) , individuals.individual_middle_name ( varchar(80) ) , individuals.inidividual_phone ( varchar(80) ) , individuals.individual_email ( varchar(80) ) , individuals.individual_address ( varchar(255) ) , individuals.individual_last_name ( varchar(80) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.date_formed ( datetime ) , organizations.organization_name ( varchar(255) ) , organizations.uk_vat_number ( varchar(20) ) ]\ntable parties , columns = [ parties.party_id ( integer | primary key ) , parties.payment_method_code ( varchar(15) ) , parties.party_phone ( varchar(80) ) , parties.party_email ( varchar(80) ) ]\ntable organization_contact_individuals , columns = [ organization_contact_individuals.individual_id ( integer | primary key ) , organization_contact_individuals.organization_id ( integer | primary key ) , organization_contact_individuals.date_contact_from ( datetime ) , organization_contact_individuals.date_contact_to ( datetime ) ]\ntable party_addresses , columns = [ party_addresses.party_id ( integer | primary key ) , party_addresses.address_id ( integer | primary key ) , party_addresses.date_address_from ( datetime ) , party_addresses.address_type_code ( varchar(15) ) , party_addresses.date_address_to ( datetime ) ]\ntable party_forms , columns = [ party_forms.party_id ( integer | primary key ) , party_forms.form_id ( integer | primary key ) , party_forms.date_completion_started ( datetime ) , party_forms.form_status_code ( varchar(15) ) , party_forms.date_fully_completed ( datetime ) ]\ntable party_services , columns = [ party_services.booking_id ( integer ) , party_services.customer_id ( integer ) , party_services.service_id ( integer ) , party_services.service_datetime ( datetime ) , party_services.booking_made_date ( datetime ) ]\nforeign keys :\nforms.service_id = services.service_id\norganization_contact_individuals.individual_id = individuals.individual_id\norganization_contact_individuals.organization_id = organizations.organization_id\nparty_addresses.party_id = parties.party_id\nparty_addresses.address_id = addresses.address_id\nparty_forms.form_id = forms.form_id\nparty_forms.party_id = parties.party_id\nparty_services.customer_id = parties.party_id\nparty_services.service_id = services.service_id\nmatched contents :\norganizations.organization_name ( Labour Party )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( Los Angeles )\ncampuses.county ( Los Angeles )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nalbums.title ( Balls to the Wall )\ntracks.name ( Balls to the Wall )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nrooms.bedtype ( King , Queen )\nreservations.firstname ( QUEEN )",
  "database schema :\ntable manufacturers , columns = [ manufacturers.code ( integer | primary key ) , manufacturers.name ( varchar(255) ) , manufacturers.headquarter ( varchar(255) ) , manufacturers.founder ( varchar(255) ) , manufacturers.revenue ( real ) ]\ntable products , columns = [ products.code ( integer | primary key ) , products.name ( varchar(255) ) , products.price ( decimal ) , products.manufacturer ( integer ) ]\nforeign keys :\nproducts.manufacturer = manufacturers.code\nmatched contents :\nproducts.price ( 180 )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\nauthors.lname ( Ueno )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.country ( text ) , people.is_male ( text ) , people.age ( int ) ]\ntable church , columns = [ church.church_id ( int | primary key ) , church.name ( text ) , church.organized_by ( text ) , church.open_date ( int ) , church.continuation_of ( text ) ]\ntable wedding , columns = [ wedding.church_id ( int | primary key ) , wedding.male_id ( int | primary key ) , wedding.female_id ( int | primary key ) , wedding.year ( int ) ]\nforeign keys :\nwedding.female_id = people.people_id\nwedding.male_id = people.people_id\nwedding.church_id = church.church_id\nmatched contents :\npeople.age ( 30 , 25 )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents :\nbrowser.name ( Opera )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\ngenre.rating ( 8 )\nsong.rating ( 8 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable voting_record , columns = [ voting_record.stuid ( integer | comment : student id ) , voting_record.registration_date ( varchar(12) ) , voting_record.election_cycle ( varchar(12) ) , voting_record.president_vote ( integer ) , voting_record.vice_president_vote ( integer ) , voting_record.secretary_vote ( integer ) , voting_record.treasurer_vote ( integer ) , voting_record.class_president_vote ( integer ) , voting_record.class_senator_vote ( integer ) ]\nforeign keys :\nvoting_record.class_senator_vote = student.stuid\nvoting_record.class_president_vote = student.stuid\nvoting_record.treasurer_vote = student.stuid\nvoting_record.secretary_vote = student.stuid\nvoting_record.vice_president_vote = student.stuid\nvoting_record.president_vote = student.stuid\nvoting_record.stuid = student.stuid\nmatched contents :\nvoting_record.registration_date ( 08/30/2015 , 08/30/2012 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nvideo_games.gname ( Call of Destiny )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ndiscipline_enrollments.undergraduate ( 200 )\nenrollments.year ( 1956 )\nenrollments.fte_ay ( 400 )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nappearances.year ( 1885 )\nbatting.year ( 1885 )\nbatting_postseason.year ( 1885 )\nfielding.year ( 1885 )\nfielding.inn_outs ( 1885 )\nfielding_outfield.year ( 1885 )\nhome_game.year ( 1885 )\nmanager.year ( 1885 )\npitching.year ( 1885 )\npitching_postseason.year ( 1885 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(40) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_name ( varchar(40) ) ]\ntable available_policies , columns = [ available_policies.policy_id ( integer | primary key ) , available_policies.policy_type_code ( char(15) ) , available_policies.customer_phone ( varchar(255) ) ]\ntable customers_policies , columns = [ customers_policies.customer_id ( integer | primary key ) , customers_policies.policy_id ( integer | primary key ) , customers_policies.date_opened ( date ) , customers_policies.date_closed ( date ) ]\ntable first_notification_of_loss , columns = [ first_notification_of_loss.fnol_id ( integer | primary key ) , first_notification_of_loss.customer_id ( integer ) , first_notification_of_loss.policy_id ( integer ) , first_notification_of_loss.service_id ( integer ) ]\ntable claims , columns = [ claims.claim_id ( integer | primary key ) , claims.fnol_id ( integer ) , claims.effective_date ( date ) ]\ntable settlements , columns = [ settlements.settlement_id ( integer | primary key ) , settlements.claim_id ( integer ) , settlements.effective_date ( date ) , settlements.settlement_amount ( real ) ]\nforeign keys :\ncustomers_policies.policy_id = available_policies.policy_id\ncustomers_policies.customer_id = customers.customer_id\nfirst_notification_of_loss.customer_id = customers_policies.customer_id\nfirst_notification_of_loss.policy_id = customers_policies.policy_id\nfirst_notification_of_loss.service_id = services.service_id\nclaims.fnol_id = first_notification_of_loss.fnol_id\nsettlements.claim_id = claims.claim_id\nmatched contents :\nservices.service_id ( 4 )\nfirst_notification_of_loss.service_id ( 4 )",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\nparty.party ( Democratic , Liberal )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\njobs.job_id ( PU_MAN )\nemployees.job_id ( PU_MAN )",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nbranch.city ( London )",
  "database schema :\ntable inst , columns = [ inst.instid ( integer | primary key | comment : institution id ) , inst.name ( text ) , inst.country ( text ) ]\ntable authors , columns = [ authors.authid ( integer | primary key | comment : author id ) , authors.lname ( text | comment : last name ) , authors.fname ( text | comment : first name ) ]\ntable papers , columns = [ papers.paperid ( integer | primary key ) , papers.title ( text ) ]\ntable authorship , columns = [ authorship.authid ( integer | primary key | comment : author id ) , authorship.instid ( integer | primary key | comment : institution id ) , authorship.paperid ( integer | primary key ) , authorship.authorder ( integer | comment : author count ) ]\nforeign keys :\nauthorship.paperid = papers.paperid\nauthorship.instid = inst.instid\nauthorship.authid = authors.authid\nmatched contents :\ninst.country ( Japan )\nauthors.lname ( Ohori )",
  "database schema :\ntable school , columns = [ school.school_id ( text | primary key ) , school.school_name ( text ) , school.location ( text ) , school.mascot ( text ) , school.enrollment ( int ) , school.ihsaa_class ( text ) , school.ihsaa_football_class ( text ) , school.county ( text ) ]\ntable budget , columns = [ budget.school_id ( int | primary key ) , budget.year ( int | primary key ) , budget.budgeted ( int ) , budget.total_budget_percent_budgeted ( real ) , budget.invested ( int ) , budget.total_budget_percent_invested ( real ) , budget.budget_invested_percent ( text ) ]\ntable endowment , columns = [ endowment.endowment_id ( int | primary key ) , endowment.school_id ( int ) , endowment.donator_name ( text ) , endowment.amount ( real ) ]\nforeign keys :\nbudget.school_id = school.school_id\nendowment.school_id = school.school_id\nmatched contents : None",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.classroom ( 107 )\nteachers.classroom ( 107 )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nscreen_mode.type ( Text )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\ntrack.name ( Please )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nstudent.lname ( Davis )\nstudent.fname ( Steven )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nteachers.last_name ( Schuster )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_log_id ( 10 )\nproblem_log.assigned_to_staff_id ( 10 )\nproblem_log.problem_id ( 10 )\nproduct.product_id ( 10 )\nstaff.staff_id ( 10 )\nproblems.problem_id ( 10 )\nproblems.reported_by_staff_id ( 10 )",
  "database schema :\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.address ( text ) , shop.num_of_staff ( text ) , shop.score ( real ) , shop.open_year ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.membership_card ( text ) , member.age ( int ) , member.time_of_purchase ( int ) , member.level_of_membership ( int ) , member.address ( text ) ]\ntable happy_hour , columns = [ happy_hour.hh_id ( int | primary key ) , happy_hour.shop_id ( int | primary key ) , happy_hour.month ( text | primary key ) , happy_hour.num_of_shaff_in_charge ( int ) ]\ntable happy_hour_member , columns = [ happy_hour_member.hh_id ( int | primary key ) , happy_hour_member.member_id ( int | primary key ) , happy_hour_member.total_amount ( real ) ]\nforeign keys :\nhappy_hour.shop_id = shop.shop_id\nhappy_hour_member.member_id = member.member_id\nmatched contents :\nhappy_hour.month ( May )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\nproducts.product_type_code ( Clothes )",
  "database schema :\ntable storm , columns = [ storm.storm_id ( int | primary key ) , storm.name ( text ) , storm.dates_active ( text ) , storm.max_speed ( int ) , storm.damage_millions_usd ( real ) , storm.number_deaths ( int ) ]\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_code ( text ) , region.region_name ( text ) ]\ntable affected_region , columns = [ affected_region.region_id ( int | primary key ) , affected_region.storm_id ( int | primary key ) , affected_region.number_city_affected ( real ) ]\nforeign keys :\naffected_region.storm_id = storm.storm_id\naffected_region.region_id = region.region_id\nmatched contents : None",
  "database schema :\ntable apartment_buildings , columns = [ apartment_buildings.building_id ( integer | primary key ) , apartment_buildings.building_short_name ( char(15) ) , apartment_buildings.building_full_name ( varchar(80) ) , apartment_buildings.building_description ( varchar(255) ) , apartment_buildings.building_address ( varchar(255) ) , apartment_buildings.building_manager ( varchar(50) ) , apartment_buildings.building_phone ( varchar(80) ) ]\ntable apartments , columns = [ apartments.apt_id ( integer | primary key | comment : apartment id ) , apartments.building_id ( integer ) , apartments.apt_type_code ( char(15) | comment : apartment type code ) , apartments.apt_number ( char(10) | comment : apartment number ) , apartments.bathroom_count ( integer ) , apartments.bedroom_count ( integer ) , apartments.room_count ( char(5) ) ]\ntable apartment_facilities , columns = [ apartment_facilities.apt_id ( integer | primary key | comment : apartment id ) , apartment_facilities.facility_code ( char(15) | primary key ) ]\ntable guests , columns = [ guests.guest_id ( integer | primary key ) , guests.gender_code ( char(1) ) , guests.guest_first_name ( varchar(80) ) , guests.guest_last_name ( varchar(80) ) , guests.date_of_birth ( datetime ) ]\ntable apartment_bookings , columns = [ apartment_bookings.apt_booking_id ( integer | primary key | comment : apartment booking id ) , apartment_bookings.apt_id ( integer | comment : apartment id ) , apartment_bookings.guest_id ( integer ) , apartment_bookings.booking_status_code ( char(15) ) , apartment_bookings.booking_start_date ( datetime ) , apartment_bookings.booking_end_date ( datetime ) ]\ntable view_unit_status , columns = [ view_unit_status.apt_id ( integer | comment : apartment id ) , view_unit_status.apt_booking_id ( integer | comment : apartment booking id ) , view_unit_status.status_date ( datetime | primary key ) , view_unit_status.available_yn ( bit | comment : available yes or no ) ]\nforeign keys :\napartments.building_id = apartment_buildings.building_id\napartment_facilities.apt_id = apartments.apt_id\napartment_bookings.guest_id = guests.guest_id\napartment_bookings.apt_id = apartments.apt_id\nview_unit_status.apt_booking_id = apartment_bookings.apt_booking_id\nview_unit_status.apt_id = apartments.apt_id\nmatched contents :\napartment_buildings.building_description ( Duplex )\napartments.apt_type_code ( Duplex )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nmusical.award ( Drama Desk Award , Tony Award )\nmusical.result ( Nominated )",
  "database schema :\ntable bank , columns = [ bank.branch_id ( int | primary key ) , bank.bname ( varchar(20) ) , bank.no_of_customers ( int ) , bank.city ( varchar(10) ) , bank.state ( varchar(20) ) ]\ntable customer , columns = [ customer.cust_id ( varchar(3) | primary key | comment : customer id ) , customer.cust_name ( varchar(20) | comment : customer name ) , customer.acc_type ( char(1) | comment : account type ) , customer.acc_bal ( int | comment : account balance ) , customer.no_of_loans ( int | comment : number of loans ) , customer.credit_score ( int ) , customer.branch_id ( int ) , customer.state ( varchar(20) ) ]\ntable loan , columns = [ loan.loan_id ( varchar(3) | primary key ) , loan.loan_type ( varchar(15) ) , loan.cust_id ( varchar(3) | comment : customer id ) , loan.branch_id ( varchar(3) ) , loan.amount ( int ) ]\nforeign keys :\ncustomer.branch_id = bank.branch_id\nloan.cust_id = customer.cust_id\nloan.branch_id = bank.branch_id\nmatched contents : None",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 2000 )\nappearances.year ( 2000 )\nbatting.year ( 2000 )\nbatting_postseason.year ( 2000 )\nfielding.year ( 2000 )\nfielding.inn_outs ( 2000 )\nfielding_postseason.year ( 2000 )\nhall_of_fame.yearid ( 2000 )\nhall_of_fame.category ( Player )\nhome_game.year ( 2000 )\nhome_game.attendance ( 2000 )\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( char(15) ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) ]\ntable parties , columns = [ parties.party_id ( integer | primary key ) , parties.party_details ( varchar(255) ) ]\ntable assets , columns = [ assets.asset_id ( integer | primary key ) , assets.other_details ( varchar(255) ) ]\ntable channels , columns = [ channels.channel_id ( integer | primary key ) , channels.other_details ( varchar(255) ) ]\ntable finances , columns = [ finances.finance_id ( integer | primary key ) , finances.other_details ( varchar(255) ) ]\ntable events , columns = [ events.event_id ( integer | primary key ) , events.address_id ( integer ) , events.channel_id ( integer ) , events.event_type_code ( char(15) ) , events.finance_id ( integer ) , events.location_id ( integer ) ]\ntable products_in_events , columns = [ products_in_events.product_in_event_id ( integer | primary key ) , products_in_events.event_id ( integer ) , products_in_events.product_id ( integer ) ]\ntable parties_in_events , columns = [ parties_in_events.party_id ( integer | primary key ) , parties_in_events.event_id ( integer | primary key ) , parties_in_events.role_code ( char(15) ) ]\ntable agreements , columns = [ agreements.document_id ( integer | primary key ) , agreements.event_id ( integer ) ]\ntable assets_in_events , columns = [ assets_in_events.asset_id ( integer | primary key ) , assets_in_events.event_id ( integer | primary key ) ]\nforeign keys :\nevents.finance_id = finances.finance_id\nevents.address_id = addresses.address_id\nevents.location_id = locations.location_id\nproducts_in_events.product_id = products.product_id\nproducts_in_events.event_id = events.event_id\nparties_in_events.event_id = events.event_id\nparties_in_events.party_id = parties.party_id\nagreements.event_id = events.event_id\nassets_in_events.event_id = events.event_id\nassets_in_events.event_id = events.event_id\nmatched contents :\nproducts.product_name ( Trading Policy B )",
  "database schema :\ntable film , columns = [ film.film_id ( int | primary key ) , film.rank_in_series ( int ) , film.number_in_season ( int ) , film.title ( text ) , film.directed_by ( text ) , film.original_air_date ( text ) , film.production_code ( text ) ]\ntable cinema , columns = [ cinema.cinema_id ( int | primary key ) , cinema.name ( text ) , cinema.openning_year ( int ) , cinema.capacity ( int ) , cinema.location ( text ) ]\ntable schedule , columns = [ schedule.cinema_id ( int | primary key ) , schedule.film_id ( int | primary key ) , schedule.date ( text ) , schedule.show_times_per_day ( int ) , schedule.price ( float ) ]\nforeign keys :\nschedule.cinema_id = cinema.cinema_id\nschedule.film_id = film.film_id\nmatched contents :\ncinema.openning_year ( 2010 )",
  "database schema :\ntable rooms , columns = [ rooms.roomid ( text | primary key ) , rooms.roomname ( text ) , rooms.beds ( integer ) , rooms.bedtype ( text ) , rooms.maxoccupancy ( integer ) , rooms.baseprice ( integer ) , rooms.decor ( text ) ]\ntable reservations , columns = [ reservations.code ( integer | primary key ) , reservations.room ( text ) , reservations.checkin ( text ) , reservations.checkout ( text ) , reservations.rate ( real ) , reservations.lastname ( text ) , reservations.firstname ( text ) , reservations.adults ( integer ) , reservations.kids ( integer ) ]\nforeign keys :\nreservations.room = rooms.roomid\nmatched contents :\nreservations.lastname ( TRACHSEL )\nreservations.firstname ( DAMIEN )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_name ( varchar(80) ) , customers.customer_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.invoice_date ( datetime ) , invoices.invoice_details ( varchar(255) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.order_status ( varchar(10) ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(80) ) , products.product_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.product_id ( integer ) , order_items.order_id ( integer ) , order_items.order_item_status ( varchar(10) ) , order_items.order_item_details ( varchar(255) ) ]\ntable shipments , columns = [ shipments.shipment_id ( integer | primary key ) , shipments.order_id ( integer ) , shipments.invoice_number ( integer ) , shipments.shipment_tracking_number ( varchar(80) ) , shipments.shipment_date ( datetime ) , shipments.other_shipment_details ( varchar(255) ) ]\ntable shipment_items , columns = [ shipment_items.shipment_id ( integer ) , shipment_items.order_item_id ( integer ) ]\nforeign keys :\norders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = orders.order_id\nshipments.invoice_number = invoices.invoice_number\nshipments.order_id = orders.order_id\nshipment_items.shipment_id = shipments.shipment_id\nshipment_items.order_item_id = order_items.order_item_id\nmatched contents :\ncustomers.customer_id ( 10 )\ninvoices.invoice_number ( 10 )\norders.order_id ( 10 )\norders.customer_id ( 10 )\nproducts.product_id ( 10 )\norder_items.order_item_id ( 10 )\norder_items.order_id ( 10 )\nshipments.invoice_number ( 10 )\nshipment_items.shipment_id ( 10 )\nshipment_items.order_item_id ( 10 )",
  "database schema :\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) ]\ntable participants , columns = [ participants.participant_id ( integer | primary key ) , participants.participant_type_code ( char(15) ) , participants.participant_details ( varchar(255) ) ]\ntable events , columns = [ events.event_id ( integer | primary key ) , events.service_id ( integer ) , events.event_details ( varchar(255) ) ]\ntable participants_in_events , columns = [ participants_in_events.event_id ( integer | primary key ) , participants_in_events.participant_id ( integer | primary key ) ]\nforeign keys :\nevents.service_id = services.service_id\nparticipants_in_events.event_id = events.event_id\nparticipants_in_events.participant_id = participants.participant_id\nmatched contents :\nparticipants.participant_type_code ( Participant )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\norganisation_types.organisation_type_description ( Sponsor )",
  "database schema :\ntable discount_coupons , columns = [ discount_coupons.coupon_id ( integer | primary key ) , discount_coupons.date_issued ( datetime ) , discount_coupons.coupon_amount ( decimal(19,4) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.coupon_id ( integer ) , customers.good_or_bad_customer ( varchar(4) ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.gender_mf ( varchar(1) | comment : gender ) , customers.date_became_customer ( datetime ) , customers.date_last_hire ( datetime ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.booking_status_code ( varchar(10) ) , bookings.returned_damaged_yn ( varchar(40) | comment : returned damaged yes or no ) , bookings.booking_start_date ( datetime ) , bookings.booking_end_date ( datetime ) , bookings.count_hired ( varchar(40) ) , bookings.amount_payable ( decimal(19,4) ) , bookings.amount_of_discount ( decimal(19,4) ) , bookings.amount_outstanding ( decimal(19,4) ) , bookings.amount_of_refund ( decimal(19,4) ) ]\ntable products_for_hire , columns = [ products_for_hire.product_id ( integer | primary key ) , products_for_hire.product_type_code ( varchar(15) ) , products_for_hire.daily_hire_cost ( decimal(19,4) ) , products_for_hire.product_name ( varchar(80) ) , products_for_hire.product_description ( varchar(255) ) ]\ntable payments , columns = [ payments.payment_id ( integer | primary key ) , payments.booking_id ( integer ) , payments.customer_id ( integer ) , payments.payment_type_code ( varchar(15) ) , payments.amount_paid_in_full_yn ( varchar(1) ) , payments.payment_date ( datetime ) , payments.amount_due ( decimal(19,4) ) , payments.amount_paid ( decimal(19,4) ) ]\ntable products_booked , columns = [ products_booked.booking_id ( integer | primary key ) , products_booked.product_id ( integer | primary key ) , products_booked.returned_yn ( varchar(1) | comment : returned yes or no ) , products_booked.returned_late_yn ( varchar(1) | comment : returned late yes or no ) , products_booked.booked_count ( integer ) , products_booked.booked_amount ( float ) ]\ntable view_product_availability , columns = [ view_product_availability.product_id ( integer ) , view_product_availability.booking_id ( integer ) , view_product_availability.status_date ( datetime | primary key ) , view_product_availability.available_yn ( varchar(1) | comment : available yes or no ) ]\nforeign keys :\ncustomers.coupon_id = discount_coupons.coupon_id\nbookings.customer_id = customers.customer_id\npayments.customer_id = customers.customer_id\npayments.booking_id = bookings.booking_id\nproducts_booked.product_id = products_for_hire.product_id\nproducts_booked.booking_id = bookings.booking_id\nview_product_availability.product_id = products_for_hire.product_id\nview_product_availability.booking_id = bookings.booking_id\nmatched contents :\ndiscount_coupons.coupon_id ( 1 )\ncustomers.customer_id ( 1 )\ncustomers.coupon_id ( 1 )\ncustomers.gender_mf ( 1 )\nbookings.booking_id ( 1 )\nbookings.returned_damaged_yn ( 1 )\npayments.payment_id ( 1 )\npayments.booking_id ( 1 )\npayments.customer_id ( 1 )\npayments.amount_paid_in_full_yn ( 1 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\nartists.name ( Billy Cobham )\ntracks.name ( Release )\ntracks.composer ( Billy Cobham )",
  "database schema :\ntable school , columns = [ school.school_id ( int | primary key ) , school.school ( text ) , school.location ( text ) , school.enrollment ( real ) , school.founded ( real ) , school.denomination ( text ) , school.boys_or_girls ( text ) , school.day_or_boarding ( text ) , school.year_entered_competition ( real ) , school.school_colors ( text ) ]\ntable school_details , columns = [ school_details.school_id ( int | primary key ) , school_details.nickname ( text ) , school_details.colors ( text ) , school_details.league ( text ) , school_details.class ( text ) , school_details.division ( text ) ]\ntable school_performance , columns = [ school_performance.school_id ( int | primary key ) , school_performance.school_year ( text | primary key ) , school_performance.class_a ( text ) , school_performance.class_aa ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.team ( text ) , player.age ( int ) , player.position ( text ) , player.school_id ( int ) ]\nforeign keys :\nschool_details.school_id = school.school_id\nschool_performance.school_id = school.school_id\nplayer.school_id = school.school_id\nmatched contents :\nschool.school_id ( 1 )\nschool_details.school_id ( 1 )\nschool_details.division ( Division 1 )\nschool_performance.school_id ( 1 )\nplayer.player_id ( 1 )\nplayer.school_id ( 1 )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\ncustomers.customer_first_name ( Blanche )\ncustomers.customer_last_name ( Huels )\ncustomers_cards.card_type_code ( Credit )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\ngrapes.id ( 3 )\ngrapes.color ( White )\nappellations.no ( 3 )\nwine.no ( 3 )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents :\ndocument_types.document_description ( Regular )",
  "database schema :\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_name ( varchar(20) ) , products.product_price ( decimal(19,4) ) , products.product_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(10) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.date_became_customer ( datetime ) ]\ntable regular_orders , columns = [ regular_orders.regular_order_id ( integer | primary key ) , regular_orders.distributer_id ( integer ) ]\ntable regular_order_products , columns = [ regular_order_products.regular_order_id ( integer ) , regular_order_products.product_id ( integer ) ]\ntable actual_orders , columns = [ actual_orders.actual_order_id ( integer | primary key ) , actual_orders.order_status_code ( varchar(10) ) , actual_orders.regular_order_id ( integer ) , actual_orders.actual_order_date ( datetime ) ]\ntable actual_order_products , columns = [ actual_order_products.actual_order_id ( integer ) , actual_order_products.product_id ( integer ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_from ( datetime ) , customer_addresses.address_type ( varchar(10) ) , customer_addresses.date_to ( datetime ) ]\ntable delivery_routes , columns = [ delivery_routes.route_id ( integer | primary key ) , delivery_routes.route_name ( varchar(50) ) , delivery_routes.other_route_details ( varchar(255) ) ]\ntable delivery_route_locations , columns = [ delivery_route_locations.location_code ( varchar(10) | primary key ) , delivery_route_locations.route_id ( integer ) , delivery_route_locations.location_address_id ( integer ) , delivery_route_locations.location_name ( varchar(50) ) ]\ntable trucks , columns = [ trucks.truck_id ( integer | primary key ) , trucks.truck_licence_number ( varchar(20) ) , trucks.truck_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.employee_address_id ( integer ) , employees.employee_name ( varchar(80) ) , employees.employee_phone ( varchar(80) ) ]\ntable order_deliveries , columns = [ order_deliveries.location_code ( varchar(10) ) , order_deliveries.actual_order_id ( integer ) , order_deliveries.delivery_status_code ( varchar(10) ) , order_deliveries.driver_employee_id ( integer ) , order_deliveries.truck_id ( integer ) , order_deliveries.delivery_date ( datetime ) ]\nforeign keys :\nregular_orders.distributer_id = customers.customer_id\nregular_order_products.regular_order_id = regular_orders.regular_order_id\nregular_order_products.product_id = products.product_id\nactual_orders.regular_order_id = regular_orders.regular_order_id\nactual_order_products.actual_order_id = actual_orders.actual_order_id\nactual_order_products.product_id = products.product_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ndelivery_route_locations.route_id = delivery_routes.route_id\ndelivery_route_locations.location_address_id = addresses.address_id\nemployees.employee_address_id = addresses.address_id\norder_deliveries.driver_employee_id = employees.employee_id\norder_deliveries.location_code = delivery_route_locations.location_code\norder_deliveries.actual_order_id = actual_orders.actual_order_id\norder_deliveries.truck_id = trucks.truck_id\nmatched contents :\naddresses.state_province_county ( California )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nairports.city ( Goroka )\nairlines.callsign ( CITY )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nmusical.nominee ( Bob Fosse )",
  "database schema :\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.home_games ( int ) , stadium.average_attendance ( real ) , stadium.total_attendance ( real ) , stadium.capacity_percentage ( real ) ]\ntable game , columns = [ game.stadium_id ( int ) , game.id ( int | primary key ) , game.season ( int ) , game.date ( text ) , game.home_team ( text ) , game.away_team ( text ) , game.score ( text ) , game.competition ( text ) ]\ntable injury_accident , columns = [ injury_accident.game_id ( int ) , injury_accident.id ( int | primary key ) , injury_accident.player ( text ) , injury_accident.injury ( text ) , injury_accident.number_of_matches ( text ) , injury_accident.source ( text ) ]\nforeign keys :\ngame.stadium_id = stadium.id\ninjury_accident.game_id = game.id\nmatched contents :\ninjury_accident.player ( Walter Samuel )",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nclass.crs_code ( ACCT-211 )\ncourse.crs_code ( ACCT-211 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\nstaff.first_name ( Ludie )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.city ( Mountain View )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\naccounts.account_name ( 162 )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nphone.screen_mode ( 3 )",
  "database schema :\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(20) ) , customers.customer_last_name ( varchar(20) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email ( varchar(255) ) , customers.other_customer_details ( varchar(255) ) ]\ntable customers_cards , columns = [ customers_cards.card_id ( integer | primary key ) , customers_cards.customer_id ( integer ) , customers_cards.card_type_code ( varchar(15) ) , customers_cards.card_number ( varchar(80) ) , customers_cards.date_valid_from ( datetime ) , customers_cards.date_valid_to ( datetime ) , customers_cards.other_card_details ( varchar(255) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.previous_transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.card_id ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( double ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\nforeign keys :\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.card_id = customers_cards.card_id\nmatched contents :\naccounts.account_id ( 5 )\ncustomers.customer_id ( 5 )\ncustomers_cards.card_id ( 5 )\ncustomers_cards.customer_id ( 5 )\nfinancial_transactions.transaction_id ( 5 )\nfinancial_transactions.account_id ( 5 )\nfinancial_transactions.card_id ( 5 )",
  "database schema :\ntable ref_characteristic_types , columns = [ ref_characteristic_types.characteristic_type_code ( varchar(15) | primary key ) , ref_characteristic_types.characteristic_type_description ( varchar(80) ) ]\ntable ref_colors , columns = [ ref_colors.color_code ( varchar(15) | primary key ) , ref_colors.color_description ( varchar(80) ) ]\ntable ref_product_categories , columns = [ ref_product_categories.product_category_code ( varchar(15) | primary key ) , ref_product_categories.product_category_description ( varchar(80) ) , ref_product_categories.unit_of_measure ( varchar(20) ) ]\ntable characteristics , columns = [ characteristics.characteristic_id ( integer | primary key ) , characteristics.characteristic_type_code ( varchar(15) ) , characteristics.characteristic_data_type ( varchar(10) ) , characteristics.characteristic_name ( varchar(80) ) , characteristics.other_characteristic_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.color_code ( varchar(15) ) , products.product_category_code ( varchar(15) ) , products.product_name ( varchar(80) ) , products.typical_buying_price ( varchar(20) ) , products.typical_selling_price ( varchar(20) ) , products.product_description ( varchar(255) ) , products.other_product_details ( varchar(255) ) ]\ntable product_characteristics , columns = [ product_characteristics.product_id ( integer ) , product_characteristics.characteristic_id ( integer ) , product_characteristics.product_characteristic_value ( varchar(50) ) ]\nforeign keys :\ncharacteristics.characteristic_type_code = ref_characteristic_types.characteristic_type_code\nproducts.color_code = ref_colors.color_code\nproducts.product_category_code = ref_product_categories.product_category_code\nproduct_characteristics.product_id = products.product_id\nproduct_characteristics.characteristic_id = characteristics.characteristic_id\nmatched contents :\nproducts.product_name ( cumin )",
  "database schema :\ntable follows , columns = [ follows.f1 ( int(11) | primary key | comment : user id ) , follows.f2 ( int(11) | primary key | comment : follower id ) ]\ntable tweets , columns = [ tweets.id ( bigint(20) | primary key ) , tweets.uid ( int(11) | comment : user id ) , tweets.text ( char(140) ) , tweets.createdate ( datetime ) ]\ntable user_profiles , columns = [ user_profiles.uid ( int(11) | primary key ) , user_profiles.name ( varchar(255) ) , user_profiles.email ( varchar(255) ) , user_profiles.partitionid ( int(11) ) , user_profiles.followers ( int(11) ) ]\nforeign keys :\nfollows.f2 = user_profiles.uid\nfollows.f1 = user_profiles.uid\ntweets.uid = user_profiles.uid\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\naddresses.address_id ( 1 )\nstaff.staff_id ( 1 )\nstaff.staff_address_id ( 1 )\nvehicles.vehicle_id ( 1 )\nvehicles.vehicle_details ( Car )\ncustomers.customer_id ( 1 )\ncustomers.customer_address_id ( 1 )\ncustomer_payments.customer_id ( 1 )\nlessons.lesson_id ( 1 )\nlessons.staff_id ( 1 )\nlessons.vehicle_id ( 1 )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 70 )\nstatus.station_id ( 70 )\ntrip.duration ( 100 , 70 )\ntrip.start_station_id ( 70 )\ntrip.end_station_id ( 70 )\nweather.max_temperature_f ( 70 )\nweather.mean_temperature_f ( 70 )\nweather.max_humidity ( 100 , 70 )\nweather.mean_humidity ( 70 )\nweather.min_humidity ( 70 )\nweather.max_wind_speed_mph ( 100 )\nweather.wind_dir_degrees ( 100 )",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.location ( Long Beach )\ncampuses.year ( 2002 )\ndegrees.year ( 2002 )\nenrollments.year ( 2002 )\nfaculty.year ( 2002 )",
  "database schema :\ntable premises , columns = [ premises.premise_id ( integer | primary key ) , premises.premises_type ( varchar(15) ) , premises.premise_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_category ( varchar(15) ) , products.product_name ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_login ( varchar(80) ) , customers.customer_password ( varchar(10) ) ]\ntable mailshot_campaigns , columns = [ mailshot_campaigns.mailshot_id ( integer | primary key ) , mailshot_campaigns.product_category ( varchar(15) ) , mailshot_campaigns.mailshot_name ( varchar(80) ) , mailshot_campaigns.mailshot_start_date ( datetime ) , mailshot_campaigns.mailshot_end_date ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.premise_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type_code ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(15) ) , customer_orders.shipping_method_code ( varchar(15) ) , customer_orders.order_placed_datetime ( datetime ) , customer_orders.order_delivered_datetime ( datetime ) , customer_orders.order_shipping_charges ( varchar(255) ) ]\ntable mailshot_customers , columns = [ mailshot_customers.mailshot_id ( integer ) , mailshot_customers.customer_id ( integer ) , mailshot_customers.outcome_code ( varchar(15) ) , mailshot_customers.mailshot_customer_date ( datetime ) ]\ntable order_items , columns = [ order_items.item_id ( integer ) , order_items.order_item_status_code ( varchar(15) ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.item_status_code ( varchar(15) ) , order_items.item_delivered_datetime ( datetime ) , order_items.item_order_quantity ( varchar(80) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.premise_id = premises.premise_id\ncustomer_orders.customer_id = customers.customer_id\nmailshot_customers.mailshot_id = mailshot_campaigns.mailshot_id\nmailshot_customers.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomer_addresses.address_type_code ( Shipping )\ncustomer_orders.order_status_code ( Paid )\ncustomer_orders.shipping_method_code ( FedEx )\nmailshot_customers.outcome_code ( Order )\norder_items.order_item_status_code ( Paid )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\nplayer.pname ( Charles )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.country ( text ) , people.is_male ( text ) , people.age ( int ) ]\ntable church , columns = [ church.church_id ( int | primary key ) , church.name ( text ) , church.organized_by ( text ) , church.open_date ( int ) , church.continuation_of ( text ) ]\ntable wedding , columns = [ wedding.church_id ( int | primary key ) , wedding.male_id ( int | primary key ) , wedding.female_id ( int | primary key ) , wedding.year ( int ) ]\nforeign keys :\nwedding.female_id = people.people_id\nwedding.male_id = people.people_id\nwedding.church_id = church.church_id\nmatched contents :\npeople.country ( Canada )\nwedding.year ( 2016 )",
  "database schema :\ntable people , columns = [ people.people_id ( int | primary key ) , people.name ( text ) , people.country ( text ) , people.is_male ( text ) , people.age ( int ) ]\ntable church , columns = [ church.church_id ( int | primary key ) , church.name ( text ) , church.organized_by ( text ) , church.open_date ( int ) , church.continuation_of ( text ) ]\ntable wedding , columns = [ wedding.church_id ( int | primary key ) , wedding.male_id ( int | primary key ) , wedding.female_id ( int | primary key ) , wedding.year ( int ) ]\nforeign keys :\nwedding.female_id = people.people_id\nwedding.male_id = people.people_id\nwedding.church_id = church.church_id\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\ncustomers.customer_status_code ( Good Customer )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\nstudent.city_code ( HKG )",
  "database schema :\ntable club , columns = [ club.club_id ( int | primary key ) , club.name ( text ) , club.region ( text ) , club.start_year ( text ) ]\ntable club_rank , columns = [ club_rank.rank ( real | primary key ) , club_rank.club_id ( int | primary key ) , club_rank.gold ( real ) , club_rank.silver ( real ) , club_rank.bronze ( real ) , club_rank.total ( real ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.name ( text ) , player.position ( text ) , player.club_id ( int ) , player.apps ( real ) , player.tries ( real ) , player.goals ( text ) , player.points ( real ) ]\ntable competition , columns = [ competition.competition_id ( int | primary key ) , competition.year ( real ) , competition.competition_type ( text ) , competition.country ( text ) ]\ntable competition_result , columns = [ competition_result.competition_id ( int | primary key ) , competition_result.club_id_1 ( int | primary key ) , competition_result.club_id_2 ( int | primary key ) , competition_result.score ( text ) ]\nforeign keys :\nclub_rank.club_id = club.club_id\nplayer.club_id = club.club_id\ncompetition_result.competition_id = competition.competition_id\ncompetition_result.club_id_2 = club.club_id\ncompetition_result.club_id_1 = club.club_id\nmatched contents :\nclub.club_id ( 5 )\nclub_rank.club_id ( 5 )\nplayer.player_id ( 5 )\nplayer.club_id ( 5 )\ncompetition.competition_id ( 5 )\ncompetition_result.competition_id ( 5 )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\ntrip.zip_code ( 94103 )",
  "database schema :\ntable aircraft , columns = [ aircraft.aircraft_id ( int | primary key ) , aircraft.order_year ( int ) , aircraft.manufacturer ( text ) , aircraft.model ( text ) , aircraft.fleet_series ( text ) , aircraft.powertrain ( text ) , aircraft.fuel_propulsion ( text ) ]\ntable pilot , columns = [ pilot.pilot_id ( int | primary key ) , pilot.pilot_name ( text ) , pilot.rank ( int ) , pilot.age ( int ) , pilot.nationality ( text ) , pilot.position ( text ) , pilot.join_year ( int ) , pilot.team ( text ) ]\ntable pilot_record , columns = [ pilot_record.record_id ( int ) , pilot_record.pilot_id ( int | primary key ) , pilot_record.aircraft_id ( int | primary key ) , pilot_record.date ( text | primary key ) ]\nforeign keys :\npilot_record.aircraft_id = aircraft.aircraft_id\npilot_record.pilot_id = pilot.pilot_id\nmatched contents : None",
  "database schema :\ntable campuses , columns = [ campuses.id ( integer | primary key ) , campuses.campus ( text ) , campuses.location ( text ) , campuses.county ( text ) , campuses.year ( integer ) ]\ntable csu_fees , columns = [ csu_fees.campus ( integer | primary key ) , csu_fees.year ( integer ) , csu_fees.campusfee ( integer ) ]\ntable degrees , columns = [ degrees.year ( integer | primary key ) , degrees.campus ( integer | primary key ) , degrees.degrees ( integer ) ]\ntable discipline_enrollments , columns = [ discipline_enrollments.campus ( integer | primary key ) , discipline_enrollments.discipline ( integer | primary key ) , discipline_enrollments.year ( integer ) , discipline_enrollments.undergraduate ( integer ) , discipline_enrollments.graduate ( integer ) ]\ntable enrollments , columns = [ enrollments.campus ( integer | primary key ) , enrollments.year ( integer | primary key ) , enrollments.totalenrollment_ay ( integer ) , enrollments.fte_ay ( integer ) ]\ntable faculty , columns = [ faculty.campus ( integer ) , faculty.year ( integer ) , faculty.faculty ( real ) ]\nforeign keys :\ncsu_fees.campus = campuses.id\ndegrees.campus = campuses.id\ndiscipline_enrollments.campus = campuses.id\nenrollments.campus = campuses.id\nfaculty.campus = campuses.id\nmatched contents :\ncampuses.year ( 1958 )\nenrollments.year ( 1958 )\nenrollments.totalenrollment_ay ( 1958 )",
  "database schema :\ntable storm , columns = [ storm.storm_id ( int | primary key ) , storm.name ( text ) , storm.dates_active ( text ) , storm.max_speed ( int ) , storm.damage_millions_usd ( real ) , storm.number_deaths ( int ) ]\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_code ( text ) , region.region_name ( text ) ]\ntable affected_region , columns = [ affected_region.region_id ( int | primary key ) , affected_region.storm_id ( int | primary key ) , affected_region.number_city_affected ( real ) ]\nforeign keys :\naffected_region.storm_id = storm.storm_id\naffected_region.region_id = region.region_id\nmatched contents :\nstorm.name ( Two )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\ncatalogs.catalog_id ( 5 )\ncatalog_contents.catalog_entry_id ( 10 , 5 )\ncatalog_contents.parent_entry_id ( 5 )\ncatalog_contents.previous_entry_id ( 5 )\ncatalog_contents.capacity ( 5 )\ncatalog_contents.length ( 5 )\ncatalog_contents.height ( 5 )\ncatalog_contents.width ( 5 )\ncatalog_contents_additional_attributes.catalog_entry_id ( 5 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\ncustomer_orders.order_status ( Delivered )",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents : None",
  "database schema :\ntable class , columns = [ class.class_code ( varchar(5) | primary key ) , class.crs_code ( varchar(10) | comment : course code ) , class.class_section ( varchar(2) ) , class.class_time ( varchar(20) ) , class.class_room ( varchar(8) ) , class.prof_num ( int | comment : professor employee number ) ]\ntable course , columns = [ course.crs_code ( varchar(10) | primary key | comment : course code ) , course.dept_code ( varchar(10) | comment : department code ) , course.crs_description ( varchar(35) | comment : course description ) , course.crs_credit ( float(8) | comment : course credit ) ]\ntable department , columns = [ department.dept_code ( varchar(10) | primary key | comment : department code ) , department.dept_name ( varchar(30) | comment : department name ) , department.school_code ( varchar(8) ) , department.emp_num ( int | comment : employee number ) , department.dept_address ( varchar(20) | comment : department address ) , department.dept_extension ( varchar(4) | comment : department extension ) ]\ntable employee , columns = [ employee.emp_num ( int | primary key | comment : employee number ) , employee.emp_lname ( varchar(15) | comment : employee last name ) , employee.emp_fname ( varchar(12) | comment : employee first name ) , employee.emp_initial ( varchar(1) | comment : employee initial ) , employee.emp_jobcode ( varchar(5) | comment : employee job code ) , employee.emp_hiredate ( datetime | comment : employee hire date ) , employee.emp_dob ( datetime | comment : employee date of birth ) ]\ntable enroll , columns = [ enroll.class_code ( varchar(5) ) , enroll.stu_num ( int | comment : student number ) , enroll.enroll_grade ( varchar(50) ) ]\ntable professor , columns = [ professor.emp_num ( int | comment : employee number ) , professor.dept_code ( varchar(10) | comment : department code ) , professor.prof_office ( varchar(50) | comment : professor office ) , professor.prof_extension ( varchar(4) | comment : professor extension ) , professor.prof_high_degree ( varchar(5) | comment : professor high degree ) ]\ntable student , columns = [ student.stu_num ( int | primary key | comment : student num ) , student.stu_lname ( varchar(15) | comment : student last name ) , student.stu_fname ( varchar(15) | comment : student first name ) , student.stu_init ( varchar(1) | comment : student init ) , student.stu_dob ( datetime | comment : student date of birth ) , student.stu_hrs ( int | comment : student class hours took ) , student.stu_class ( varchar(2) | comment : student class ) , student.stu_gpa ( float(8) | comment : student gpa ) , student.stu_transfer ( numeric | comment : student transfer ) , student.dept_code ( varchar(18) | comment : department code ) , student.stu_phone ( varchar(4) | comment : student phone ) , student.prof_num ( int | comment : professor number ) ]\nforeign keys :\nclass.prof_num = employee.emp_num\nclass.crs_code = course.crs_code\ncourse.dept_code = department.dept_code\ndepartment.emp_num = employee.emp_num\nenroll.stu_num = student.stu_num\nenroll.class_code = class.class_code\nprofessor.dept_code = department.dept_code\nprofessor.emp_num = employee.emp_num\nstudent.dept_code = department.dept_code\nmatched contents :\nemployee.emp_lname ( Smithson )\nstudent.stu_lname ( Smithson )",
  "database schema :\ntable roles , columns = [ roles.role_code ( varchar(15) | primary key ) , roles.role_description ( varchar(80) ) ]\ntable users , columns = [ users.user_id ( integer | primary key ) , users.role_code ( varchar(15) ) , users.user_name ( varchar(40) ) , users.user_login ( varchar(40) ) , users.password ( varchar(40) ) ]\ntable document_structures , columns = [ document_structures.document_structure_code ( varchar(15) | primary key ) , document_structures.parent_document_structure_code ( varchar(15) ) , document_structures.document_structure_description ( varchar(80) ) ]\ntable functional_areas , columns = [ functional_areas.functional_area_code ( varchar(15) | primary key ) , functional_areas.parent_functional_area_code ( varchar(15) ) , functional_areas.functional_area_description ( varchar(80) ) ]\ntable images , columns = [ images.image_id ( integer | primary key ) , images.image_alt_text ( varchar(80) ) , images.image_name ( varchar(40) ) , images.image_url ( varchar(255) ) ]\ntable documents , columns = [ documents.document_code ( varchar(15) | primary key ) , documents.document_structure_code ( varchar(15) ) , documents.document_type_code ( varchar(15) ) , documents.access_count ( integer ) , documents.document_name ( varchar(80) ) ]\ntable document_functional_areas , columns = [ document_functional_areas.document_code ( varchar(15) ) , document_functional_areas.functional_area_code ( varchar(15) ) ]\ntable document_sections , columns = [ document_sections.section_id ( integer | primary key ) , document_sections.document_code ( varchar(15) ) , document_sections.section_sequence ( integer ) , document_sections.section_code ( varchar(20) ) , document_sections.section_title ( varchar(80) ) ]\ntable document_sections_images , columns = [ document_sections_images.section_id ( integer | primary key ) , document_sections_images.image_id ( integer | primary key ) ]\nforeign keys :\nusers.role_code = roles.role_code\ndocuments.document_structure_code = document_structures.document_structure_code\ndocument_functional_areas.functional_area_code = functional_areas.functional_area_code\ndocument_functional_areas.document_code = documents.document_code\ndocument_sections.document_code = documents.document_code\ndocument_sections_images.image_id = images.image_id\ndocument_sections_images.section_id = document_sections.section_id\nmatched contents : None",
  "database schema :\ntable county , columns = [ county.county_id ( int | primary key ) , county.county_name ( text ) , county.population ( real ) , county.zip_code ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.year ( real ) , party.party ( text ) , party.governor ( text ) , party.lieutenant_governor ( text ) , party.comptroller ( text ) , party.attorney_general ( text ) , party.us_senate ( text ) ]\ntable election , columns = [ election.election_id ( int | primary key ) , election.counties_represented ( text ) , election.district ( int ) , election.delegate ( text ) , election.party ( int ) , election.first_elected ( real ) , election.committee ( text ) ]\nforeign keys :\nelection.district = county.county_id\nelection.party = party.party_id\nmatched contents :\ncounty.county_id ( 1 , 2 )\nparty.party_id ( 1 , 2 )\nelection.election_id ( 1 , 2 )\nelection.district ( 1 , 2 )\nelection.party ( 1 , 2 )",
  "database schema :\ntable race , columns = [ race.race_id ( int | primary key ) , race.name ( text ) , race.class ( text ) , race.date ( text ) , race.track_id ( text ) ]\ntable track , columns = [ track.track_id ( int | primary key ) , track.name ( text ) , track.location ( text ) , track.seating ( real ) , track.year_opened ( real ) ]\nforeign keys :\nrace.track_id = track.track_id\nmatched contents :\nrace.class ( GT )",
  "database schema :\ntable storm , columns = [ storm.storm_id ( int | primary key ) , storm.name ( text ) , storm.dates_active ( text ) , storm.max_speed ( int ) , storm.damage_millions_usd ( real ) , storm.number_deaths ( int ) ]\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_code ( text ) , region.region_name ( text ) ]\ntable affected_region , columns = [ affected_region.region_id ( int | primary key ) , affected_region.storm_id ( int | primary key ) , affected_region.number_city_affected ( real ) ]\nforeign keys :\naffected_region.storm_id = storm.storm_id\naffected_region.region_id = region.region_id\nmatched contents :\nstorm.storm_id ( 1 )\nregion.region_id ( 1 )\naffected_region.region_id ( 1 )\naffected_region.storm_id ( 1 )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ncustomers.city ( Chicago )\ninvoices.billing_city ( Chicago )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_ap ( PER )\nroutes.src_ap ( PER )\nairports.country ( United States )\nairports.iata ( PER )\nairlines.icao ( PER )\nairlines.callsign ( UNITED , STATES , CITY )\nairlines.country ( United States )",
  "database schema :\ntable attribute_definitions , columns = [ attribute_definitions.attribute_id ( integer | primary key ) , attribute_definitions.attribute_name ( varchar(30) ) , attribute_definitions.attribute_data_type ( varchar(10) ) ]\ntable catalogs , columns = [ catalogs.catalog_id ( integer | primary key ) , catalogs.catalog_name ( varchar(50) ) , catalogs.catalog_publisher ( varchar(80) ) , catalogs.date_of_publication ( datetime ) , catalogs.date_of_latest_revision ( datetime ) ]\ntable catalog_structure , columns = [ catalog_structure.catalog_level_number ( integer | primary key ) , catalog_structure.catalog_id ( integer ) , catalog_structure.catalog_level_name ( varchar(50) ) ]\ntable catalog_contents , columns = [ catalog_contents.catalog_entry_id ( integer | primary key ) , catalog_contents.catalog_level_number ( integer ) , catalog_contents.parent_entry_id ( integer ) , catalog_contents.previous_entry_id ( integer ) , catalog_contents.next_entry_id ( integer ) , catalog_contents.catalog_entry_name ( varchar(80) ) , catalog_contents.product_stock_number ( varchar(50) ) , catalog_contents.price_in_dollars ( double ) , catalog_contents.price_in_euros ( double ) , catalog_contents.price_in_pounds ( double ) , catalog_contents.capacity ( varchar(20) ) , catalog_contents.length ( varchar(20) ) , catalog_contents.height ( varchar(20) ) , catalog_contents.width ( varchar(20) ) ]\ntable catalog_contents_additional_attributes , columns = [ catalog_contents_additional_attributes.catalog_entry_id ( integer ) , catalog_contents_additional_attributes.catalog_level_number ( integer ) , catalog_contents_additional_attributes.attribute_id ( integer ) , catalog_contents_additional_attributes.attribute_value ( varchar(255) ) ]\nforeign keys :\ncatalog_structure.catalog_id = catalogs.catalog_id\ncatalog_contents.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_level_number = catalog_structure.catalog_level_number\ncatalog_contents_additional_attributes.catalog_entry_id = catalog_contents.catalog_entry_id\nmatched contents :\nattribute_definitions.attribute_id ( 2 )\ncatalogs.catalog_id ( 2 )\ncatalog_structure.catalog_id ( 2 )\ncatalog_structure.catalog_level_name ( Product )\ncatalog_contents.catalog_entry_id ( 2 )\ncatalog_contents.height ( 2 )\ncatalog_contents_additional_attributes.catalog_entry_id ( 2 )\ncatalog_contents_additional_attributes.attribute_id ( 2 )",
  "database schema :\ntable artist , columns = [ artist.artist_id ( int | primary key ) , artist.name ( text ) , artist.country ( text ) , artist.year_join ( int ) , artist.age ( int ) ]\ntable exhibition , columns = [ exhibition.exhibition_id ( int | primary key ) , exhibition.year ( int ) , exhibition.theme ( text ) , exhibition.artist_id ( int ) , exhibition.ticket_price ( real ) ]\ntable exhibition_record , columns = [ exhibition_record.exhibition_id ( int | primary key ) , exhibition_record.date ( text | primary key ) , exhibition_record.attendance ( int ) ]\nforeign keys :\nexhibition.artist_id = artist.artist_id\nexhibition_record.exhibition_id = exhibition.exhibition_id\nmatched contents :\nexhibition.year ( 2005 )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\ncustomers.first_name ( Carole )",
  "database schema :\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.gender ( varchar(1) ) , staff.first_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.email_address ( varchar(255) ) , staff.phone_number ( varchar(80) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_type_code ( varchar(20) ) , customers.address_line_1 ( varchar(80) ) , customers.address_line_2 ( varchar(80) ) , customers.town_city ( varchar(80) ) , customers.state ( varchar(80) ) , customers.email_address ( varchar(255) ) , customers.phone_number ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.product_category_code ( varchar(20) ) , products.date_product_first_available ( datetime ) , products.date_product_discontinued ( datetime ) , products.product_name ( varchar(80) ) , products.product_description ( varchar(255) ) , products.product_price ( decimal(19,4) ) ]\ntable complaints , columns = [ complaints.complaint_id ( integer ) , complaints.product_id ( integer ) , complaints.customer_id ( integer ) , complaints.complaint_outcome_code ( varchar(20) ) , complaints.complaint_status_code ( varchar(20) ) , complaints.complaint_type_code ( varchar(20) ) , complaints.date_complaint_raised ( datetime ) , complaints.date_complaint_closed ( datetime ) , complaints.staff_id ( integer ) ]\nforeign keys :\ncomplaints.customer_id = customers.customer_id\ncomplaints.product_id = products.product_id\ncomplaints.staff_id = staff.staff_id\nmatched contents :\ncomplaints.complaint_type_code ( Product Failure )",
  "database schema :\ntable actor , columns = [ actor.actor_id ( smallint unsigned | primary key ) , actor.first_name ( varchar(45) ) , actor.last_name ( varchar(45) ) , actor.last_update ( timestamp ) ]\ntable address , columns = [ address.address_id ( smallint unsigned | primary key ) , address.address ( varchar(50) ) , address.address2 ( varchar(50) ) , address.district ( varchar(20) ) , address.city_id ( smallint unsigned ) , address.postal_code ( varchar(10) ) , address.phone ( varchar(20) ) , address.last_update ( timestamp ) ]\ntable category , columns = [ category.category_id ( tinyint unsigned | primary key ) , category.name ( varchar(25) ) , category.last_update ( timestamp ) ]\ntable city , columns = [ city.city_id ( smallint unsigned | primary key ) , city.city ( varchar(50) ) , city.country_id ( smallint unsigned ) , city.last_update ( timestamp ) ]\ntable country , columns = [ country.country_id ( smallint unsigned | primary key ) , country.country ( varchar(50) ) , country.last_update ( timestamp ) ]\ntable customer , columns = [ customer.customer_id ( smallint unsigned | primary key ) , customer.store_id ( tinyint unsigned ) , customer.first_name ( varchar(45) ) , customer.last_name ( varchar(45) ) , customer.email ( varchar(50) ) , customer.address_id ( smallint unsigned ) , customer.active ( boolean ) , customer.create_date ( datetime ) , customer.last_update ( timestamp ) ]\ntable film , columns = [ film.film_id ( smallint unsigned | primary key ) , film.title ( varchar(255) ) , film.description ( text ) , film.release_year ( year ) , film.language_id ( tinyint unsigned ) , film.original_language_id ( tinyint unsigned ) , film.rental_duration ( tinyint unsigned ) , film.rental_rate ( decimal(4,2) ) , film.length ( smallint unsigned ) , film.replacement_cost ( decimal(5,2) ) , film.rating (  ) , film.special_features (  ) , film.last_update ( timestamp ) ]\ntable film_actor , columns = [ film_actor.actor_id ( smallint unsigned | primary key ) , film_actor.film_id ( smallint unsigned | primary key ) , film_actor.last_update ( timestamp ) ]\ntable film_category , columns = [ film_category.film_id ( smallint unsigned | primary key ) , film_category.category_id ( tinyint unsigned | primary key ) , film_category.last_update ( timestamp ) ]\ntable film_text , columns = [ film_text.film_id ( smallint | primary key ) , film_text.title ( varchar(255) ) , film_text.description ( text ) ]\ntable inventory , columns = [ inventory.inventory_id ( mediumint unsigned | primary key ) , inventory.film_id ( smallint unsigned ) , inventory.store_id ( tinyint unsigned ) , inventory.last_update ( timestamp ) ]\ntable language , columns = [ language.language_id ( tinyint unsigned | primary key ) , language.name ( char(20) ) , language.last_update ( timestamp ) ]\ntable payment , columns = [ payment.payment_id ( smallint unsigned | primary key ) , payment.customer_id ( smallint unsigned ) , payment.staff_id ( tinyint unsigned ) , payment.rental_id ( int ) , payment.amount ( decimal(5,2) ) , payment.payment_date ( datetime ) , payment.last_update ( timestamp ) ]\ntable rental , columns = [ rental.rental_id ( int | primary key ) , rental.rental_date ( datetime ) , rental.inventory_id ( mediumint unsigned ) , rental.customer_id ( smallint unsigned ) , rental.return_date ( datetime ) , rental.staff_id ( tinyint unsigned ) , rental.last_update ( timestamp ) ]\ntable staff , columns = [ staff.staff_id ( tinyint unsigned | primary key ) , staff.first_name ( varchar(45) ) , staff.last_name ( varchar(45) ) , staff.address_id ( smallint unsigned ) , staff.picture ( blob ) , staff.email ( varchar(50) ) , staff.store_id ( tinyint unsigned ) , staff.active ( boolean ) , staff.username ( varchar(16) ) , staff.password ( varchar(40) ) , staff.last_update ( timestamp ) ]\ntable store , columns = [ store.store_id ( tinyint unsigned | primary key ) , store.manager_staff_id ( tinyint unsigned ) , store.address_id ( smallint unsigned ) , store.last_update ( timestamp ) ]\nforeign keys :\naddress.city_id = city.city_id\ncity.country_id = country.country_id\ncustomer.store_id = store.store_id\ncustomer.address_id = address.address_id\nfilm.original_language_id = language.language_id\nfilm.language_id = language.language_id\nfilm_actor.film_id = film.film_id\nfilm_actor.actor_id = actor.actor_id\nfilm_category.category_id = category.category_id\nfilm_category.film_id = film.film_id\ninventory.film_id = film.film_id\ninventory.store_id = store.store_id\npayment.staff_id = staff.staff_id\npayment.customer_id = customer.customer_id\npayment.rental_id = rental.rental_id\nrental.customer_id = customer.customer_id\nrental.inventory_id = inventory.inventory_id\nrental.staff_id = staff.staff_id\nstaff.address_id = address.address_id\nstore.address_id = address.address_id\nstore.manager_staff_id = staff.staff_id\nmatched contents :\nactor.actor_id ( 3 )\naddress.address_id ( 3 )\naddress.city_id ( 3 )\naddress.postal_code ( 3 )\ncategory.category_id ( 3 )\ncity.city_id ( 3 )\ncity.country_id ( 3 )\ncountry.country_id ( 3 )\ncustomer.customer_id ( 3 )\nfilm.film_id ( 3 )\nfilm.rental_rate ( 0.99 )\npayment.amount ( 0.99 )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\nmountain.id ( 15 )",
  "database schema :\ntable routes , columns = [ routes.rid ( integer | primary key | comment : route id ) , routes.dst_apid ( integer | comment : destination airport id ) , routes.dst_ap ( varchar(4) | comment : destination airport ) , routes.src_apid ( bigint | comment : source airport id ) , routes.src_ap ( varchar(4) | comment : source airport ) , routes.alid ( bigint | comment : airline id ) , routes.airline ( varchar(4) ) , routes.codeshare ( text ) ]\ntable airports , columns = [ airports.apid ( integer | primary key | comment : airport id ) , airports.name ( text ) , airports.city ( text ) , airports.country ( text ) , airports.x ( real ) , airports.y ( real ) , airports.elevation ( bigint ) , airports.iata ( character varchar(3) ) , airports.icao ( character varchar(4) ) ]\ntable airlines , columns = [ airlines.alid ( integer | primary key | comment : airline id ) , airlines.name ( text ) , airlines.iata ( varchar(2) ) , airlines.icao ( varchar(3) ) , airlines.callsign ( text ) , airlines.country ( text ) , airlines.active ( varchar(2) ) ]\nforeign keys :\nroutes.alid = airlines.alid\nroutes.src_apid = airports.apid\nroutes.dst_apid = airports.apid\nmatched contents :\nroutes.dst_apid ( 10 )\nroutes.src_apid ( 10 )\nroutes.alid ( 10 )\nairports.apid ( 10 )\nairports.elevation ( 10 )\nairports.iata ( TOP )\nairlines.alid ( 10 )\nairlines.iata ( 10 )\nairlines.icao ( IDS , TOP )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_details ( varchar(255) ) ]\ntable policies , columns = [ policies.policy_id ( integer | primary key ) , policies.customer_id ( integer ) , policies.policy_type_code ( char(15) ) , policies.start_date ( datetime ) , policies.end_date ( datetime ) ]\ntable claim_headers , columns = [ claim_headers.claim_header_id ( integer | primary key ) , claim_headers.claim_status_code ( char(15) ) , claim_headers.claim_type_code ( char(15) ) , claim_headers.policy_id ( integer ) , claim_headers.date_of_claim ( datetime ) , claim_headers.date_of_settlement ( datetime ) , claim_headers.amount_claimed ( decimal(20,4) ) , claim_headers.amount_piad ( decimal(20,4) ) ]\ntable claims_documents , columns = [ claims_documents.claim_id ( integer | primary key ) , claims_documents.document_type_code ( char(15) | primary key ) , claims_documents.created_by_staff_id ( integer ) , claims_documents.created_date ( integer ) ]\ntable claims_processing_stages , columns = [ claims_processing_stages.claim_stage_id ( integer | primary key ) , claims_processing_stages.next_claim_stage_id ( integer ) , claims_processing_stages.claim_status_name ( varchar(255) ) , claims_processing_stages.claim_status_description ( varchar(255) ) ]\ntable claims_processing , columns = [ claims_processing.claim_processing_id ( integer | primary key ) , claims_processing.claim_id ( integer ) , claims_processing.claim_outcome_code ( char(15) ) , claims_processing.claim_stage_id ( integer ) , claims_processing.staff_id ( integer ) ]\nforeign keys :\npolicies.customer_id = customers.customer_id\nclaim_headers.policy_id = policies.policy_id\nclaims_documents.created_by_staff_id = staff.staff_id\nclaims_documents.claim_id = claim_headers.claim_header_id\nclaims_processing.staff_id = staff.staff_id\nclaims_processing.claim_id = claim_headers.claim_header_id\nmatched contents :\npolicies.policy_type_code ( Deputy )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\nregions.region_id ( 3 )\ncountries.region_id ( 3 )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\ncourse_authors_and_tutors.personal_name ( Julio )",
  "database schema :\ntable region , columns = [ region.region_id ( int | primary key ) , region.region_name ( text ) , region.date ( text ) , region.label ( text ) , region.format ( text ) , region.catalogue ( text ) ]\ntable party , columns = [ party.party_id ( int | primary key ) , party.minister ( text ) , party.took_office ( text ) , party.left_office ( text ) , party.region_id ( int ) , party.party_name ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.member_name ( text ) , member.party_id ( text ) , member.in_office ( text ) ]\ntable party_events , columns = [ party_events.event_id ( int | primary key ) , party_events.event_name ( text ) , party_events.party_id ( int ) , party_events.member_in_charge_id ( int ) ]\nforeign keys :\nparty.region_id = region.region_id\nmember.party_id = party.party_id\nparty_events.member_in_charge_id = member.member_id\nparty_events.party_id = party.party_id\nmatched contents :\nparty.took_office ( 1961 , 1959 )\nparty.left_office ( 1961 , 1959 )",
  "database schema :\ntable mountain , columns = [ mountain.id ( int | primary key ) , mountain.name ( text ) , mountain.height ( real ) , mountain.prominence ( real ) , mountain.range ( text ) , mountain.country ( text ) ]\ntable camera_lens , columns = [ camera_lens.id ( int | primary key ) , camera_lens.brand ( text ) , camera_lens.name ( text ) , camera_lens.focal_length_mm ( real ) , camera_lens.max_aperture ( real ) ]\ntable photos , columns = [ photos.id ( int | primary key ) , photos.camera_lens_id ( int ) , photos.mountain_id ( int ) , photos.color ( text ) , photos.name ( text ) ]\nforeign keys :\nphotos.mountain_id = mountain.id\nphotos.camera_lens_id = camera_lens.id\nmatched contents :\nphotos.name ( the mountain )",
  "database schema :\ntable college , columns = [ college.cname ( varchar(20) | primary key | comment : college name ) , college.state ( varchar(2) ) , college.enr ( numeric(5,0) | comment : enrollment ) ]\ntable player , columns = [ player.pid ( numeric(5,0) | primary key | comment : player id ) , player.pname ( varchar(20) | comment : player name ) , player.ycard ( varchar(3) | comment : yes card ) , player.hs ( numeric(5,0) | comment : training hours ) ]\ntable tryout , columns = [ tryout.pid ( numeric(5,0) | primary key | comment : player id ) , tryout.cname ( varchar(20) | primary key | comment : college name ) , tryout.ppos ( varchar(8) | comment : player position ) , tryout.decision ( varchar(3) ) ]\nforeign keys :\ntryout.cname = college.cname\ntryout.pid = player.pid\nmatched contents :\ntryout.ppos ( mid , goalie )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nappellations.appelation ( Central Coast )\nappellations.area ( Central Coast )\nwine.appelation ( Central Coast )\nwine.year ( 2008 )\nwine.drink ( 2008 )",
  "database schema :\ntable architect , columns = [ architect.id ( text | primary key ) , architect.name ( text ) , architect.nationality ( text ) , architect.gender ( text ) ]\ntable bridge , columns = [ bridge.architect_id ( int ) , bridge.id ( int | primary key ) , bridge.name ( text ) , bridge.location ( text ) , bridge.length_meters ( real ) , bridge.length_feet ( real ) ]\ntable mill , columns = [ mill.architect_id ( int ) , mill.id ( int | primary key ) , mill.location ( text ) , mill.name ( text ) , mill.type ( text ) , mill.built_year ( int ) , mill.notes ( text ) ]\nforeign keys :\nbridge.architect_id = architect.id\nmill.architect_id = architect.id\nmatched contents : None",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( History )\ncourse.dept_name ( History )\nstudent.dept_name ( History )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Math )\ncourse.dept_name ( Math )\nstudent.dept_name ( Math )",
  "database schema :\ntable movie , columns = [ movie.mid ( int | primary key | comment : movie id ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) ]\ntable reviewer , columns = [ reviewer.rid ( int | primary key | comment : reviewer id ) , reviewer.name ( text ) ]\ntable rating , columns = [ rating.rid ( int | comment : reviewer id ) , rating.mid ( int | comment : movie id ) , rating.stars ( int | comment : rating stars ) , rating.ratingdate ( date ) ]\nforeign keys :\nrating.rid = reviewer.rid\nrating.mid = movie.mid\nmatched contents :\nrating.stars ( 5 )",
  "database schema :\ntable member , columns = [ member.member_id ( int | primary key ) , member.card_number ( text ) , member.name ( text ) , member.hometown ( text ) , member.level ( int ) ]\ntable branch , columns = [ branch.branch_id ( int | primary key ) , branch.name ( text ) , branch.open_year ( text ) , branch.address_road ( text ) , branch.city ( text ) , branch.membership_amount ( text ) ]\ntable membership_register_branch , columns = [ membership_register_branch.member_id ( int | primary key ) , membership_register_branch.branch_id ( text ) , membership_register_branch.register_year ( text ) ]\ntable purchase , columns = [ purchase.member_id ( int | primary key ) , purchase.branch_id ( text | primary key ) , purchase.year ( text | primary key ) , purchase.total_pounds ( real ) ]\nforeign keys :\nmembership_register_branch.branch_id = branch.branch_id\nmembership_register_branch.member_id = member.member_id\npurchase.branch_id = branch.branch_id\npurchase.member_id = member.member_id\nmatched contents :\nbranch.open_year ( 2015 )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\nstudents.family_name ( Ward )",
  "database schema :\ntable company , columns = [ company.company_id ( int | primary key ) , company.rank ( int ) , company.company ( text ) , company.headquarters ( text ) , company.main_industry ( text ) , company.sales_billion ( real ) , company.profits_billion ( real ) , company.assets_billion ( real ) , company.market_value ( real ) ]\ntable gas_station , columns = [ gas_station.station_id ( int | primary key ) , gas_station.open_year ( int ) , gas_station.location ( text ) , gas_station.manager_name ( text ) , gas_station.vice_manager_name ( text ) , gas_station.representative_name ( text ) ]\ntable station_company , columns = [ station_company.station_id ( int | primary key ) , station_company.company_id ( int | primary key ) , station_company.rank_of_the_year ( int ) ]\nforeign keys :\nstation_company.company_id = company.company_id\nstation_company.station_id = gas_station.station_id\nmatched contents :\ncompany.company ( ExxonMobil )",
  "database schema :\ntable web_client_accelerator , columns = [ web_client_accelerator.id ( int | primary key ) , web_client_accelerator.name ( text ) , web_client_accelerator.operating_system ( text ) , web_client_accelerator.client ( text ) , web_client_accelerator.connection ( text ) ]\ntable browser , columns = [ browser.id ( int | primary key ) , browser.name ( text ) , browser.market_share ( real ) ]\ntable accelerator_compatible_browser , columns = [ accelerator_compatible_browser.accelerator_id ( int | primary key ) , accelerator_compatible_browser.browser_id ( int | primary key ) , accelerator_compatible_browser.compatible_since_year ( int ) ]\nforeign keys :\naccelerator_compatible_browser.browser_id = browser.id\naccelerator_compatible_browser.accelerator_id = web_client_accelerator.id\nmatched contents :\nbrowser.name ( Safari )",
  "database schema :\ntable school , columns = [ school.school_id ( text | primary key ) , school.school_name ( text ) , school.location ( text ) , school.mascot ( text ) , school.enrollment ( int ) , school.ihsaa_class ( text ) , school.ihsaa_football_class ( text ) , school.county ( text ) ]\ntable budget , columns = [ budget.school_id ( int | primary key ) , budget.year ( int | primary key ) , budget.budgeted ( int ) , budget.total_budget_percent_budgeted ( real ) , budget.invested ( int ) , budget.total_budget_percent_invested ( real ) , budget.budget_invested_percent ( text ) ]\ntable endowment , columns = [ endowment.endowment_id ( int | primary key ) , endowment.school_id ( int ) , endowment.donator_name ( text ) , endowment.amount ( real ) ]\nforeign keys :\nbudget.school_id = school.school_id\nendowment.school_id = school.school_id\nmatched contents :\nschool.school_name ( Triton , Glenn )",
  "database schema :\ntable station , columns = [ station.station_id ( int | primary key ) , station.name ( text ) , station.annual_entry_exit ( real ) , station.annual_interchanges ( real ) , station.total_passengers ( real ) , station.location ( text ) , station.main_services ( text ) , station.number_of_platforms ( int ) ]\ntable train , columns = [ train.train_id ( int | primary key ) , train.name ( text ) , train.time ( text ) , train.service ( text ) ]\ntable train_station , columns = [ train_station.train_id ( int | primary key ) , train_station.station_id ( int | primary key ) ]\nforeign keys :\ntrain_station.station_id = station.station_id\ntrain_station.train_id = train.train_id\nmatched contents :\nstation.station_id ( 1 )\ntrain.train_id ( 1 )\ntrain_station.train_id ( 1 )\ntrain_station.station_id ( 1 )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\nwine.name ( Numbers )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nbookings.booking_id ( 1 )\nbookings.store_id ( 1 )\ncustomer_orders.order_id ( 1 )\norder_items.order_id ( 1 )\ninvoices.order_id ( 1 )\ninvoices.order_quantity ( 1 )\ninvoices.order_item_id ( 1 )\nbookings_services.order_id ( 1 )\ninvoice_items.invoice_item_id ( 1 )\ninvoice_items.order_id ( 1 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_details ( varchar(255) ) ]\ntable properties , columns = [ properties.property_id ( integer | primary key ) , properties.property_type_code ( char(15) ) , properties.property_address ( varchar(255) ) , properties.other_details ( varchar(255) ) ]\ntable residents , columns = [ residents.resident_id ( integer | primary key ) , residents.property_id ( integer | primary key ) , residents.date_moved_in ( datetime | primary key ) , residents.date_moved_out ( datetime ) , residents.other_details ( varchar(255) ) ]\ntable organizations , columns = [ organizations.organization_id ( integer | primary key ) , organizations.parent_organization_id ( integer ) , organizations.organization_details ( varchar(255) ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.organization_id ( integer ) , services.service_type_code ( char(15) ) , services.service_details ( varchar(255) ) ]\ntable residents_services , columns = [ residents_services.resident_id ( integer | primary key ) , residents_services.service_id ( integer | primary key ) , residents_services.date_moved_in ( datetime ) , residents_services.property_id ( integer ) , residents_services.date_requested ( datetime ) , residents_services.date_provided ( datetime ) , residents_services.other_details ( varchar(255) ) ]\ntable things , columns = [ things.thing_id ( integer | primary key ) , things.organization_id ( integer ) , things.type_of_thing_code ( char(15) ) , things.service_type_code ( char(10) ) , things.service_details ( varchar(255) ) ]\ntable customer_events , columns = [ customer_events.customer_event_id ( integer | primary key ) , customer_events.customer_id ( integer ) , customer_events.date_moved_in ( datetime ) , customer_events.property_id ( integer ) , customer_events.resident_id ( integer ) , customer_events.thing_id ( integer ) ]\ntable customer_event_notes , columns = [ customer_event_notes.customer_event_note_id ( integer | primary key ) , customer_event_notes.customer_event_id ( integer ) , customer_event_notes.service_type_code ( char(15) ) , customer_event_notes.resident_id ( integer ) , customer_event_notes.property_id ( integer ) , customer_event_notes.date_moved_in ( datetime ) ]\ntable timed_status_of_things , columns = [ timed_status_of_things.thing_id ( integer | primary key ) , timed_status_of_things.date_and_date ( datetime | primary key ) , timed_status_of_things.status_of_thing_code ( char(15) | primary key ) ]\ntable timed_locations_of_things , columns = [ timed_locations_of_things.thing_id ( integer | primary key ) , timed_locations_of_things.date_and_time ( datetime | primary key ) , timed_locations_of_things.location_code ( char(15) | primary key ) ]\nforeign keys :\nresidents.property_id = properties.property_id\nservices.organization_id = organizations.organization_id\nresidents_services.resident_id = residents.resident_id\nresidents_services.property_id = residents.property_id\nresidents_services.date_moved_in = residents.date_moved_in\nresidents_services.service_id = services.service_id\nthings.organization_id = organizations.organization_id\ncustomer_events.resident_id = residents.resident_id\ncustomer_events.property_id = residents.property_id\ncustomer_events.date_moved_in = residents.date_moved_in\ncustomer_events.customer_id = customers.customer_id\ncustomer_events.thing_id = things.thing_id\ncustomer_event_notes.customer_event_id = customer_events.customer_event_id\ntimed_status_of_things.thing_id = things.thing_id\ntimed_locations_of_things.thing_id = things.thing_id\nmatched contents : None",
  "database schema :\ntable train , columns = [ train.id ( int | primary key ) , train.train_number ( int ) , train.name ( text ) , train.origin ( text ) , train.destination ( text ) , train.time ( text ) , train.interval ( text ) ]\ntable station , columns = [ station.id ( int | primary key ) , station.network_name ( text ) , station.services ( text ) , station.local_authority ( text ) ]\ntable route , columns = [ route.train_id ( int | primary key ) , route.station_id ( int | primary key ) ]\ntable weekly_weather , columns = [ weekly_weather.station_id ( int | primary key ) , weekly_weather.day_of_week ( text | primary key ) , weekly_weather.high_temperature ( int ) , weekly_weather.low_temperature ( int ) , weekly_weather.precipitation ( real ) , weekly_weather.wind_speed_mph ( int ) ]\nforeign keys :\nroute.station_id = station.id\nroute.train_id = train.id\nweekly_weather.station_id = station.id\nmatched contents :\nstation.network_name ( Amersham )",
  "database schema :\ntable book_club , columns = [ book_club.book_club_id ( int | primary key ) , book_club.year ( int ) , book_club.author_or_editor ( text ) , book_club.book_title ( text ) , book_club.publisher ( text ) , book_club.category ( text ) , book_club.result ( text ) ]\ntable movie , columns = [ movie.movie_id ( int | primary key ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) , movie.budget_million ( real ) , movie.gross_worldwide ( int ) ]\ntable culture_company , columns = [ culture_company.company_name ( text | primary key ) , culture_company.type ( text ) , culture_company.incorporated_in ( text ) , culture_company.group_equity_shareholding ( real ) , culture_company.book_club_id ( text ) , culture_company.movie_id ( text ) ]\nforeign keys :\nculture_company.movie_id = movie.movie_id\nculture_company.book_club_id = book_club.book_club_id\nmatched contents :\nmovie.year ( 2000 )",
  "database schema :\ntable medicine , columns = [ medicine.id ( int | primary key ) , medicine.name ( text ) , medicine.trade_name ( text ) , medicine.fda_approved ( text ) ]\ntable enzyme , columns = [ enzyme.id ( int | primary key ) , enzyme.name ( text ) , enzyme.location ( text ) , enzyme.product ( text ) , enzyme.chromosome ( text ) , enzyme.omim ( int ) , enzyme.porphyria ( text ) ]\ntable medicine_enzyme_interaction , columns = [ medicine_enzyme_interaction.enzyme_id ( int | primary key ) , medicine_enzyme_interaction.medicine_id ( int | primary key ) , medicine_enzyme_interaction.interaction_type ( text ) ]\nforeign keys :\nmedicine_enzyme_interaction.medicine_id = medicine.id\nmedicine_enzyme_interaction.enzyme_id = enzyme.id\nmatched contents :\nmedicine_enzyme_interaction.interaction_type ( inhibitor )",
  "database schema :\ntable swimmer , columns = [ swimmer.id ( int | primary key ) , swimmer.name ( text ) , swimmer.nationality ( text ) , swimmer.meter_100 ( real ) , swimmer.meter_200 ( text ) , swimmer.meter_300 ( text ) , swimmer.meter_400 ( text ) , swimmer.meter_500 ( text ) , swimmer.meter_600 ( text ) , swimmer.meter_700 ( text ) , swimmer.time ( text ) ]\ntable stadium , columns = [ stadium.id ( int | primary key ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.city ( text ) , stadium.country ( text ) , stadium.opening_year ( int ) ]\ntable event , columns = [ event.id ( int | primary key ) , event.name ( text ) , event.stadium_id ( int ) , event.year ( text ) ]\ntable record , columns = [ record.id ( int ) , record.result ( text ) , record.swimmer_id ( int | primary key ) , record.event_id ( int | primary key ) ]\nforeign keys :\nevent.stadium_id = stadium.id\nrecord.swimmer_id = swimmer.id\nrecord.event_id = event.id\nmatched contents :\nstadium.opening_year ( 2005 )",
  "database schema :\ntable ref_document_types , columns = [ ref_document_types.document_type_code ( char(15) | primary key ) , ref_document_types.document_type_name ( varchar(255) ) , ref_document_types.document_type_description ( varchar(255) ) ]\ntable ref_calendar , columns = [ ref_calendar.calendar_date ( datetime | primary key ) , ref_calendar.day_number ( integer ) ]\ntable ref_locations , columns = [ ref_locations.location_code ( char(15) | primary key ) , ref_locations.location_name ( varchar(255) ) , ref_locations.location_description ( varchar(255) ) ]\ntable roles , columns = [ roles.role_code ( char(15) | primary key ) , roles.role_name ( varchar(255) ) , roles.role_description ( varchar(255) ) ]\ntable all_documents , columns = [ all_documents.document_id ( integer | primary key ) , all_documents.date_stored ( datetime ) , all_documents.document_type_code ( char(15) ) , all_documents.document_name ( char(255) ) , all_documents.document_description ( char(255) ) , all_documents.other_details ( varchar(255) ) ]\ntable employees , columns = [ employees.employee_id ( integer | primary key ) , employees.role_code ( char(15) ) , employees.employee_name ( varchar(255) ) , employees.gender_mfu ( char(1) ) , employees.date_of_birth ( datetime ) , employees.other_details ( varchar(255) ) ]\ntable document_locations , columns = [ document_locations.document_id ( integer | primary key ) , document_locations.location_code ( char(15) | primary key ) , document_locations.date_in_location_from ( datetime | primary key ) , document_locations.date_in_locaton_to ( datetime ) ]\ntable documents_to_be_destroyed , columns = [ documents_to_be_destroyed.document_id ( integer | primary key ) , documents_to_be_destroyed.destruction_authorised_by_employee_id ( integer ) , documents_to_be_destroyed.destroyed_by_employee_id ( integer ) , documents_to_be_destroyed.planned_destruction_date ( datetime ) , documents_to_be_destroyed.actual_destruction_date ( datetime ) , documents_to_be_destroyed.other_details ( varchar(255) ) ]\nforeign keys :\nall_documents.date_stored = ref_calendar.calendar_date\nall_documents.document_type_code = ref_document_types.document_type_code\nemployees.role_code = roles.role_code\ndocument_locations.document_id = all_documents.document_id\ndocument_locations.date_in_locaton_to = ref_calendar.calendar_date\ndocument_locations.date_in_location_from = ref_calendar.calendar_date\ndocument_locations.location_code = ref_locations.location_code\ndocuments_to_be_destroyed.document_id = all_documents.document_id\ndocuments_to_be_destroyed.actual_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.planned_destruction_date = ref_calendar.calendar_date\ndocuments_to_be_destroyed.destruction_authorised_by_employee_id = employees.employee_id\ndocuments_to_be_destroyed.destroyed_by_employee_id = employees.employee_id\nmatched contents :\nroles.role_code ( HR )\nemployees.role_code ( HR )",
  "database schema :\ntable activity , columns = [ activity.actid ( integer | primary key | comment : activity id ) , activity.activity_name ( varchar(25) ) ]\ntable participates_in , columns = [ participates_in.stuid ( integer | comment : student id ) , participates_in.actid ( integer | comment : activity id ) ]\ntable faculty_participates_in , columns = [ faculty_participates_in.facid ( integer | comment : faculty id ) , faculty_participates_in.actid ( integer | comment : activity id ) ]\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\nforeign keys :\nparticipates_in.actid = activity.actid\nparticipates_in.stuid = student.stuid\nfaculty_participates_in.actid = activity.actid\nfaculty_participates_in.facid = faculty.facid\nmatched contents :\nstudent.lname ( Smith )\nstudent.fname ( Linda )\nfaculty.lname ( Smith )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nstores.store_name ( FJA Filming )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_content ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method ( varchar(15) ) , customers.customer_name ( varchar(80) ) , customers.date_became_customer ( datetime ) , customers.other_customer_details ( varchar(255) ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer ) , customer_addresses.address_id ( integer ) , customer_addresses.date_address_from ( datetime ) , customer_addresses.address_type ( varchar(15) ) , customer_addresses.date_address_to ( datetime ) ]\ntable customer_contact_channels , columns = [ customer_contact_channels.customer_id ( integer ) , customer_contact_channels.channel_code ( varchar(15) ) , customer_contact_channels.active_from_date ( datetime ) , customer_contact_channels.active_to_date ( datetime ) , customer_contact_channels.contact_number ( varchar(50) ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status ( varchar(15) ) , customer_orders.order_date ( datetime ) , customer_orders.order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(15) ) ]\nforeign keys :\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_contact_channels.customer_id = customers.customer_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.order_id = customer_orders.order_id\norder_items.product_id = products.product_id\nmatched contents :\naddresses.zip_postcode ( 255 )",
  "database schema :\ntable album , columns = [ album.albumid ( integer | primary key ) , album.title ( varchar(160) ) , album.artistid ( integer ) ]\ntable artist , columns = [ artist.artistid ( integer | primary key ) , artist.name ( varchar(120) ) ]\ntable customer , columns = [ customer.customerid ( integer | primary key ) , customer.firstname ( varchar(40) ) , customer.lastname ( varchar(20) ) , customer.company ( varchar(80) ) , customer.address ( varchar(70) ) , customer.city ( varchar(40) ) , customer.state ( varchar(40) ) , customer.country ( varchar(40) ) , customer.postalcode ( varchar(10) ) , customer.phone ( varchar(24) ) , customer.fax ( varchar(24) ) , customer.email ( varchar(60) ) , customer.supportrepid ( integer | comment : support representative id ) ]\ntable employee , columns = [ employee.employeeid ( integer | primary key ) , employee.lastname ( varchar(20) ) , employee.firstname ( varchar(20) ) , employee.title ( varchar(30) ) , employee.reportsto ( integer ) , employee.birthdate ( datetime ) , employee.hiredate ( datetime ) , employee.address ( varchar(70) ) , employee.city ( varchar(40) ) , employee.state ( varchar(40) ) , employee.country ( varchar(40) ) , employee.postalcode ( varchar(10) ) , employee.phone ( varchar(24) ) , employee.fax ( varchar(24) ) , employee.email ( varchar(60) ) ]\ntable genre , columns = [ genre.genreid ( integer | primary key ) , genre.name ( varchar(120) ) ]\ntable invoice , columns = [ invoice.invoiceid ( integer | primary key ) , invoice.customerid ( integer ) , invoice.invoicedate ( datetime ) , invoice.billingaddress ( varchar(70) ) , invoice.billingcity ( varchar(40) ) , invoice.billingstate ( varchar(40) ) , invoice.billingcountry ( varchar(40) ) , invoice.billingpostalcode ( varchar(10) ) , invoice.total ( decimal(10,2) ) ]\ntable invoiceline , columns = [ invoiceline.invoicelineid ( integer | primary key ) , invoiceline.invoiceid ( integer ) , invoiceline.trackid ( integer ) , invoiceline.unitprice ( decimal(10,2) ) , invoiceline.quantity ( integer ) ]\ntable mediatype , columns = [ mediatype.mediatypeid ( integer | primary key ) , mediatype.name ( varchar(120) ) ]\ntable playlist , columns = [ playlist.playlistid ( integer | primary key ) , playlist.name ( varchar(120) ) ]\ntable playlisttrack , columns = [ playlisttrack.playlistid ( integer | primary key ) , playlisttrack.trackid ( integer | primary key ) ]\ntable track , columns = [ track.trackid ( integer | primary key ) , track.name ( varchar(200) ) , track.albumid ( integer ) , track.mediatypeid ( integer ) , track.genreid ( integer ) , track.composer ( varchar(220) ) , track.milliseconds ( integer ) , track.bytes ( integer ) , track.unitprice ( decimal(10,2) ) ]\nforeign keys :\nalbum.artistid = artist.artistid\ncustomer.supportrepid = employee.employeeid\nemployee.reportsto = employee.employeeid\ninvoice.customerid = customer.customerid\ninvoiceline.trackid = track.trackid\ninvoiceline.invoiceid = invoice.invoiceid\nplaylisttrack.trackid = track.trackid\nplaylisttrack.playlistid = playlist.playlistid\ntrack.mediatypeid = mediatype.mediatypeid\ntrack.genreid = genre.genreid\ntrack.albumid = album.albumid\nmatched contents :\nemployee.city ( Calgary )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_gender ( varchar(1) ) , staff.staff_name ( varchar(80) ) ]\ntable suppliers , columns = [ suppliers.supplier_id ( integer | primary key ) , suppliers.supplier_name ( varchar(80) ) , suppliers.supplier_phone ( varchar(80) ) ]\ntable department_store_chain , columns = [ department_store_chain.dept_store_chain_id ( integer | primary key | comment : department store chain id ) , department_store_chain.dept_store_chain_name ( varchar(80) | comment : department store chain name ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.payment_method_code ( varchar(10) ) , customers.customer_code ( varchar(20) ) , customers.customer_name ( varchar(80) ) , customers.customer_address ( varchar(255) ) , customers.customer_phone ( varchar(80) ) , customers.customer_email ( varchar(80) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( varchar(10) ) , products.product_name ( varchar(80) ) , products.product_price ( decimal(19,4) ) ]\ntable supplier_addresses , columns = [ supplier_addresses.supplier_id ( integer | primary key ) , supplier_addresses.address_id ( integer | primary key ) , supplier_addresses.date_from ( datetime ) , supplier_addresses.date_to ( datetime ) ]\ntable customer_addresses , columns = [ customer_addresses.customer_id ( integer | primary key ) , customer_addresses.address_id ( integer | primary key ) , customer_addresses.date_from ( datetime ) , customer_addresses.date_to ( datetime ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.order_status_code ( varchar(10) ) , customer_orders.order_date ( datetime ) ]\ntable department_stores , columns = [ department_stores.dept_store_id ( integer | primary key | comment : department store id ) , department_stores.dept_store_chain_id ( integer | comment : department store chain id ) , department_stores.store_name ( varchar(80) ) , department_stores.store_address ( varchar(255) ) , department_stores.store_phone ( varchar(80) ) , department_stores.store_email ( varchar(80) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.dept_store_id ( integer | comment : department store id ) , departments.department_name ( varchar(80) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) ]\ntable product_suppliers , columns = [ product_suppliers.product_id ( integer | primary key ) , product_suppliers.supplier_id ( integer | primary key ) , product_suppliers.date_supplied_from ( datetime ) , product_suppliers.date_supplied_to ( datetime ) , product_suppliers.total_amount_purchased ( varchar(80) ) , product_suppliers.total_value_purchased ( decimal(19,4) ) ]\ntable staff_department_assignments , columns = [ staff_department_assignments.staff_id ( integer | primary key ) , staff_department_assignments.department_id ( integer | primary key ) , staff_department_assignments.date_assigned_from ( datetime ) , staff_department_assignments.job_title_code ( varchar(10) ) , staff_department_assignments.date_assigned_to ( datetime ) ]\nforeign keys :\nsupplier_addresses.supplier_id = suppliers.supplier_id\nsupplier_addresses.address_id = addresses.address_id\ncustomer_addresses.customer_id = customers.customer_id\ncustomer_addresses.address_id = addresses.address_id\ncustomer_orders.customer_id = customers.customer_id\ndepartment_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id\ndepartments.dept_store_id = department_stores.dept_store_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\nproduct_suppliers.product_id = products.product_id\nproduct_suppliers.supplier_id = suppliers.supplier_id\nstaff_department_assignments.staff_id = staff.staff_id\nstaff_department_assignments.department_id = departments.department_id\nmatched contents :\nproducts.product_type_code ( Hardware )",
  "database schema :\ntable basketball_match , columns = [ basketball_match.team_id ( int | primary key ) , basketball_match.school_id ( int ) , basketball_match.team_name ( text ) , basketball_match.acc_regular_season ( text ) , basketball_match.acc_percent ( text ) , basketball_match.acc_home ( text ) , basketball_match.acc_road ( text ) , basketball_match.all_games ( text ) , basketball_match.all_games_percent ( int ) , basketball_match.all_home ( text ) , basketball_match.all_road ( text ) , basketball_match.all_neutral ( text ) ]\ntable university , columns = [ university.school_id ( int | primary key ) , university.school ( text ) , university.location ( text ) , university.founded ( real ) , university.affiliation ( text ) , university.enrollment ( real ) , university.nickname ( text ) , university.primary_conference ( text ) ]\nforeign keys :\nbasketball_match.school_id = university.school_id\nmatched contents : None",
  "database schema :\ntable college , columns = [ college.college_id ( int | primary key ) , college.name ( text ) , college.leader_name ( text ) , college.college_location ( text ) ]\ntable member , columns = [ member.member_id ( int | primary key ) , member.name ( text ) , member.country ( text ) , member.college_id ( int ) ]\ntable round , columns = [ round.round_id ( int | primary key ) , round.member_id ( int | primary key ) , round.decoration_theme ( text ) , round.rank_in_round ( int ) ]\nforeign keys :\nmember.college_id = college.college_id\nround.member_id = member.member_id\nmatched contents : None",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1_number_building ( varchar(80) ) , addresses.city ( varchar(50) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_address_id ( integer ) , staff.nickname ( varchar(80) ) , staff.first_name ( varchar(80) ) , staff.middle_name ( varchar(80) ) , staff.last_name ( varchar(80) ) , staff.date_of_birth ( datetime ) , staff.date_joined_staff ( datetime ) , staff.date_left_staff ( datetime ) ]\ntable vehicles , columns = [ vehicles.vehicle_id ( integer | primary key ) , vehicles.vehicle_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_address_id ( integer ) , customers.customer_status_code ( varchar(15) ) , customers.date_became_customer ( datetime ) , customers.date_of_birth ( datetime ) , customers.first_name ( varchar(80) ) , customers.last_name ( varchar(80) ) , customers.amount_outstanding ( double ) , customers.email_address ( varchar(250) ) , customers.phone_number ( varchar(255) ) , customers.cell_mobile_phone_number ( varchar(255) ) ]\ntable customer_payments , columns = [ customer_payments.customer_id ( integer | primary key ) , customer_payments.datetime_payment ( datetime | primary key ) , customer_payments.payment_method_code ( varchar(10) ) , customer_payments.amount_payment ( double ) ]\ntable lessons , columns = [ lessons.lesson_id ( integer | primary key ) , lessons.customer_id ( integer ) , lessons.lesson_status_code ( varchar(15) ) , lessons.staff_id ( integer ) , lessons.vehicle_id ( integer ) , lessons.lesson_date ( datetime ) , lessons.lesson_time ( varchar(10) ) , lessons.price ( double ) ]\nforeign keys :\nstaff.staff_address_id = addresses.address_id\ncustomers.customer_address_id = addresses.address_id\ncustomer_payments.customer_id = customers.customer_id\nlessons.customer_id = customers.customer_id\nlessons.staff_id = staff.staff_id\nlessons.vehicle_id = vehicles.vehicle_id\nmatched contents :\nstaff.first_name ( Janessa )\nstaff.last_name ( Sawayn )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nartist.country ( UK )\nsong.country ( UK )\nsong.languages ( english )",
  "database schema :\ntable product , columns = [ product.product_id ( int | primary key ) , product.product ( text ) , product.dimensions ( text ) , product.dpi ( real ) , product.pages_per_minute_color ( real ) , product.max_page_size ( text ) , product.interface ( text ) ]\ntable store , columns = [ store.store_id ( int | primary key ) , store.store_name ( text ) , store.type ( text ) , store.area_size ( real ) , store.number_of_product_category ( real ) , store.ranking ( int ) ]\ntable district , columns = [ district.district_id ( int | primary key ) , district.district_name ( text ) , district.headquartered_city ( text ) , district.city_population ( real ) , district.city_area ( real ) ]\ntable store_product , columns = [ store_product.store_id ( int | primary key ) , store_product.product_id ( int | primary key ) ]\ntable store_district , columns = [ store_district.store_id ( int | primary key ) , store_district.district_id ( int ) ]\nforeign keys :\nstore_product.product_id = product.product_id\nstore_product.store_id = store.store_id\nstore_district.district_id = district.district_id\nstore_district.store_id = store.store_id\nmatched contents :\nstore.ranking ( 10 )\ndistrict.district_id ( 10 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable video_games , columns = [ video_games.gameid ( integer | primary key ) , video_games.gname ( varchar(40) | comment : game name ) , video_games.gtype ( varchar(40) | comment : game type ) ]\ntable plays_games , columns = [ plays_games.stuid ( integer | comment : student id ) , plays_games.gameid ( integer ) , plays_games.hours_played ( integer ) ]\ntable sportsinfo , columns = [ sportsinfo.stuid ( integer | comment : student id ) , sportsinfo.sportname ( varchar(32) ) , sportsinfo.hoursperweek ( integer ) , sportsinfo.gamesplayed ( integer ) , sportsinfo.onscholarship ( varchar(1) ) ]\nforeign keys :\nplays_games.stuid = student.stuid\nplays_games.gameid = video_games.gameid\nsportsinfo.stuid = student.stuid\nmatched contents :\nsportsinfo.sportname ( Football , Lacrosse )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.address_details ( varchar(255) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.product_type_code ( char(15) ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) ]\ntable parties , columns = [ parties.party_id ( integer | primary key ) , parties.party_details ( varchar(255) ) ]\ntable assets , columns = [ assets.asset_id ( integer | primary key ) , assets.other_details ( varchar(255) ) ]\ntable channels , columns = [ channels.channel_id ( integer | primary key ) , channels.other_details ( varchar(255) ) ]\ntable finances , columns = [ finances.finance_id ( integer | primary key ) , finances.other_details ( varchar(255) ) ]\ntable events , columns = [ events.event_id ( integer | primary key ) , events.address_id ( integer ) , events.channel_id ( integer ) , events.event_type_code ( char(15) ) , events.finance_id ( integer ) , events.location_id ( integer ) ]\ntable products_in_events , columns = [ products_in_events.product_in_event_id ( integer | primary key ) , products_in_events.event_id ( integer ) , products_in_events.product_id ( integer ) ]\ntable parties_in_events , columns = [ parties_in_events.party_id ( integer | primary key ) , parties_in_events.event_id ( integer | primary key ) , parties_in_events.role_code ( char(15) ) ]\ntable agreements , columns = [ agreements.document_id ( integer | primary key ) , agreements.event_id ( integer ) ]\ntable assets_in_events , columns = [ assets_in_events.asset_id ( integer | primary key ) , assets_in_events.event_id ( integer | primary key ) ]\nforeign keys :\nevents.finance_id = finances.finance_id\nevents.address_id = addresses.address_id\nevents.location_id = locations.location_id\nproducts_in_events.product_id = products.product_id\nproducts_in_events.event_id = events.event_id\nparties_in_events.event_id = events.event_id\nparties_in_events.party_id = parties.party_id\nagreements.event_id = events.event_id\nassets_in_events.event_id = events.event_id\nassets_in_events.event_id = events.event_id\nmatched contents : None",
  "database schema :\ntable list , columns = [ list.lastname ( text | primary key ) , list.firstname ( text | primary key ) , list.grade ( integer ) , list.classroom ( integer ) ]\ntable teachers , columns = [ teachers.lastname ( text | primary key ) , teachers.firstname ( text | primary key ) , teachers.classroom ( integer ) ]\nforeign keys : None\nmatched contents :\nlist.lastname ( GELL )\nlist.firstname ( TAMI )",
  "database schema :\ntable course_authors_and_tutors , columns = [ course_authors_and_tutors.author_id ( integer | primary key ) , course_authors_and_tutors.author_tutor_atb ( varchar(3) ) , course_authors_and_tutors.login_name ( varchar(40) ) , course_authors_and_tutors.password ( varchar(40) ) , course_authors_and_tutors.personal_name ( varchar(80) ) , course_authors_and_tutors.middle_name ( varchar(80) ) , course_authors_and_tutors.family_name ( varchar(80) ) , course_authors_and_tutors.gender_mf ( varchar(1) ) , course_authors_and_tutors.address_line_1 ( varchar(80) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.date_of_registration ( datetime ) , students.date_of_latest_logon ( datetime ) , students.login_name ( varchar(40) ) , students.password ( varchar(10) ) , students.personal_name ( varchar(40) ) , students.middle_name ( varchar(40) ) , students.family_name ( varchar(40) ) ]\ntable subjects , columns = [ subjects.subject_id ( integer | primary key ) , subjects.subject_name ( varchar(120) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.author_id ( integer ) , courses.subject_id ( integer ) , courses.course_name ( varchar(120) ) , courses.course_description ( varchar(255) ) ]\ntable student_course_enrolment , columns = [ student_course_enrolment.registration_id ( integer | primary key ) , student_course_enrolment.student_id ( integer ) , student_course_enrolment.course_id ( integer ) , student_course_enrolment.date_of_enrolment ( datetime ) , student_course_enrolment.date_of_completion ( datetime ) ]\ntable student_tests_taken , columns = [ student_tests_taken.registration_id ( integer ) , student_tests_taken.date_test_taken ( datetime ) , student_tests_taken.test_result ( varchar(255) ) ]\nforeign keys :\ncourses.subject_id = subjects.subject_id\ncourses.author_id = course_authors_and_tutors.author_id\nstudent_course_enrolment.student_id = students.student_id\nstudent_course_enrolment.course_id = courses.course_id\nstudent_tests_taken.registration_id = student_course_enrolment.registration_id\nmatched contents :\ncourses.course_name ( advanced database , database )\ncourses.course_description ( advanced database , database )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\ndorm.dorm_name ( Anonymous Donor Hall )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable club , columns = [ club.clubid ( integer | primary key ) , club.clubname ( varchar(40) ) , club.clubdesc ( varchar(1024) | comment : club description ) , club.clublocation ( varchar(40) ) ]\ntable member_of_club , columns = [ member_of_club.stuid ( integer | comment : student id ) , member_of_club.clubid ( integer ) , member_of_club.position ( varchar(40) ) ]\nforeign keys :\nmember_of_club.clubid = club.clubid\nmember_of_club.stuid = student.stuid\nmatched contents :\nclub.clublocation ( AKW )",
  "database schema :\ntable ref_hotel_star_ratings , columns = [ ref_hotel_star_ratings.star_rating_code ( char(15) | primary key ) , ref_hotel_star_ratings.star_rating_description ( varchar(80) ) ]\ntable locations , columns = [ locations.location_id ( integer | primary key ) , locations.location_name ( varchar(255) ) , locations.address ( varchar(255) ) , locations.other_details ( varchar(255) ) ]\ntable ref_attraction_types , columns = [ ref_attraction_types.attraction_type_code ( char(15) | primary key ) , ref_attraction_types.attraction_type_description ( varchar(255) ) ]\ntable visitors , columns = [ visitors.tourist_id ( integer | primary key ) , visitors.tourist_details ( varchar(255) ) ]\ntable features , columns = [ features.feature_id ( integer | primary key ) , features.feature_details ( varchar(255) ) ]\ntable hotels , columns = [ hotels.hotel_id ( integer | primary key ) , hotels.star_rating_code ( char(15) ) , hotels.pets_allowed_yn ( char(1) ) , hotels.price_range ( real ) , hotels.other_hotel_details ( varchar(255) ) ]\ntable tourist_attractions , columns = [ tourist_attractions.tourist_attraction_id ( integer | primary key ) , tourist_attractions.attraction_type_code ( char(15) ) , tourist_attractions.location_id ( integer ) , tourist_attractions.how_to_get_there ( varchar(255) ) , tourist_attractions.name ( varchar(255) ) , tourist_attractions.description ( varchar(255) ) , tourist_attractions.opening_hours ( varchar(255) ) , tourist_attractions.other_details ( varchar(255) ) ]\ntable street_markets , columns = [ street_markets.market_id ( integer | primary key ) , street_markets.market_details ( varchar(255) ) ]\ntable shops , columns = [ shops.shop_id ( integer | primary key ) , shops.shop_details ( varchar(255) ) ]\ntable museums , columns = [ museums.museum_id ( integer | primary key ) , museums.museum_details ( varchar(255) ) ]\ntable royal_family , columns = [ royal_family.royal_family_id ( integer | primary key ) , royal_family.royal_family_details ( varchar(255) ) ]\ntable theme_parks , columns = [ theme_parks.theme_park_id ( integer | primary key ) , theme_parks.theme_park_details ( varchar(255) ) ]\ntable visits , columns = [ visits.visit_id ( integer | primary key ) , visits.tourist_attraction_id ( integer ) , visits.tourist_id ( integer ) , visits.visit_date ( datetime ) , visits.visit_details ( varchar(40) ) ]\ntable photos , columns = [ photos.photo_id ( integer | primary key ) , photos.tourist_attraction_id ( integer ) , photos.name ( varchar(255) ) , photos.description ( varchar(255) ) , photos.filename ( varchar(255) ) , photos.other_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.tourist_attraction_id ( integer ) , staff.name ( varchar(40) ) , staff.other_details ( varchar(255) ) ]\ntable tourist_attraction_features , columns = [ tourist_attraction_features.tourist_attraction_id ( integer | primary key ) , tourist_attraction_features.feature_id ( integer | primary key ) ]\nforeign keys :\nhotels.star_rating_code = ref_hotel_star_ratings.star_rating_code\ntourist_attractions.attraction_type_code = ref_attraction_types.attraction_type_code\ntourist_attractions.location_id = locations.location_id\nstreet_markets.market_id = tourist_attractions.tourist_attraction_id\nshops.shop_id = tourist_attractions.tourist_attraction_id\nmuseums.museum_id = tourist_attractions.tourist_attraction_id\nroyal_family.royal_family_id = tourist_attractions.tourist_attraction_id\ntheme_parks.theme_park_id = tourist_attractions.tourist_attraction_id\nvisits.tourist_id = visitors.tourist_id\nvisits.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nphotos.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nstaff.tourist_attraction_id = tourist_attractions.tourist_attraction_id\ntourist_attraction_features.feature_id = features.feature_id\ntourist_attraction_features.tourist_attraction_id = tourist_attractions.tourist_attraction_id\nmatched contents :\nvisitors.tourist_details ( Vincent , Marcelle )",
  "database schema :\ntable member , columns = [ member.member_id ( text | primary key ) , member.name ( text ) , member.nationality ( text ) , member.role ( text ) ]\ntable performance , columns = [ performance.performance_id ( real | primary key ) , performance.date ( text ) , performance.host ( text ) , performance.location ( text ) , performance.attendance ( int ) ]\ntable member_attendance , columns = [ member_attendance.member_id ( int | primary key ) , member_attendance.performance_id ( int | primary key ) , member_attendance.num_of_pieces ( int ) ]\nforeign keys :\nmember_attendance.performance_id = performance.performance_id\nmember_attendance.member_id = member.member_id\nmatched contents : None",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nstudents.first_name ( Fanny )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Red )\nplayer.name_last ( Boston , Score )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable physician , columns = [ physician.employeeid ( integer | primary key ) , physician.name ( varchar(30) ) , physician.position ( varchar(30) ) , physician.ssn ( integer ) ]\ntable department , columns = [ department.departmentid ( integer | primary key ) , department.name ( varchar(30) ) , department.head ( integer ) ]\ntable affiliated_with , columns = [ affiliated_with.physician ( integer | primary key ) , affiliated_with.department ( integer | primary key ) , affiliated_with.primaryaffiliation ( boolean ) ]\ntable procedures , columns = [ procedures.code ( integer | primary key ) , procedures.name ( varchar(30) ) , procedures.cost ( real ) ]\ntable trained_in , columns = [ trained_in.physician ( integer | primary key ) , trained_in.treatment ( integer | primary key ) , trained_in.certificationdate ( datetime ) , trained_in.certificationexpires ( datetime ) ]\ntable patient , columns = [ patient.ssn ( integer | primary key ) , patient.name ( varchar(30) ) , patient.address ( varchar(30) ) , patient.phone ( varchar(30) ) , patient.insuranceid ( integer ) , patient.pcp ( integer ) ]\ntable nurse , columns = [ nurse.employeeid ( integer | primary key ) , nurse.name ( varchar(30) ) , nurse.position ( varchar(30) ) , nurse.registered ( boolean ) , nurse.ssn ( integer ) ]\ntable appointment , columns = [ appointment.appointmentid ( integer | primary key ) , appointment.patient ( integer ) , appointment.prepnurse ( integer ) , appointment.physician ( integer ) , appointment.start ( datetime ) , appointment.end ( datetime ) , appointment.examinationroom ( text ) ]\ntable medication , columns = [ medication.code ( integer | primary key ) , medication.name ( varchar(30) ) , medication.brand ( varchar(30) ) , medication.description ( varchar(30) ) ]\ntable prescribes , columns = [ prescribes.physician ( integer | primary key ) , prescribes.patient ( integer | primary key ) , prescribes.medication ( integer | primary key ) , prescribes.date ( datetime | primary key ) , prescribes.appointment ( integer ) , prescribes.dose ( varchar(30) ) ]\ntable block , columns = [ block.blockfloor ( integer | primary key ) , block.blockcode ( integer | primary key ) ]\ntable room , columns = [ room.roomnumber ( integer | primary key ) , room.roomtype ( varchar(30) ) , room.blockfloor ( integer ) , room.blockcode ( integer ) , room.unavailable ( boolean ) ]\ntable on_call , columns = [ on_call.nurse ( integer | primary key ) , on_call.blockfloor ( integer | primary key ) , on_call.blockcode ( integer | primary key ) , on_call.oncallstart ( datetime | primary key ) , on_call.oncallend ( datetime | primary key ) ]\ntable stay , columns = [ stay.stayid ( integer | primary key ) , stay.patient ( integer ) , stay.room ( integer ) , stay.staystart ( datetime ) , stay.stayend ( datetime ) ]\ntable undergoes , columns = [ undergoes.patient ( integer | primary key ) , undergoes.procedures ( integer | primary key ) , undergoes.stay ( integer | primary key ) , undergoes.dateundergoes ( datetime | primary key ) , undergoes.physician ( integer ) , undergoes.assistingnurse ( integer ) ]\nforeign keys :\ndepartment.head = physician.employeeid\naffiliated_with.department = department.departmentid\naffiliated_with.physician = physician.employeeid\ntrained_in.treatment = procedures.code\ntrained_in.physician = physician.employeeid\npatient.pcp = physician.employeeid\nappointment.physician = physician.employeeid\nappointment.prepnurse = nurse.employeeid\nappointment.patient = patient.ssn\nprescribes.appointment = appointment.appointmentid\nprescribes.medication = medication.code\nprescribes.patient = patient.ssn\nprescribes.physician = physician.employeeid\nroom.blockfloor = block.blockfloor\nroom.blockcode = block.blockcode\non_call.blockfloor = block.blockfloor\non_call.blockcode = block.blockcode\non_call.nurse = nurse.employeeid\nstay.room = room.roomnumber\nstay.patient = patient.ssn\nundergoes.assistingnurse = nurse.employeeid\nundergoes.physician = physician.employeeid\nundergoes.stay = stay.stayid\nundergoes.procedures = procedures.code\nundergoes.patient = patient.ssn\nmatched contents :\nmedication.name ( Procrastin-X )",
  "database schema :\ntable station , columns = [ station.id ( integer | primary key ) , station.name ( text ) , station.lat ( numeric | comment : latitude ) , station.long ( numeric | comment : longitude ) , station.dock_count ( integer ) , station.city ( text ) , station.installation_date ( text ) ]\ntable status , columns = [ status.station_id ( integer ) , status.bikes_available ( integer ) , status.docks_available ( integer ) , status.time ( text ) ]\ntable trip , columns = [ trip.id ( integer | primary key ) , trip.duration ( integer ) , trip.start_date ( text ) , trip.start_station_name ( text ) , trip.start_station_id ( integer ) , trip.end_date ( text ) , trip.end_station_name ( text ) , trip.end_station_id ( integer ) , trip.bike_id ( integer ) , trip.subscription_type ( text ) , trip.zip_code ( integer ) ]\ntable weather , columns = [ weather.date ( text ) , weather.max_temperature_f ( integer ) , weather.mean_temperature_f ( integer ) , weather.min_temperature_f ( integer ) , weather.max_dew_point_f ( integer ) , weather.mean_dew_point_f ( integer ) , weather.min_dew_point_f ( integer ) , weather.max_humidity ( integer ) , weather.mean_humidity ( integer ) , weather.min_humidity ( integer ) , weather.max_sea_level_pressure_inches ( numeric ) , weather.mean_sea_level_pressure_inches ( numeric ) , weather.min_sea_level_pressure_inches ( numeric ) , weather.max_visibility_miles ( integer ) , weather.mean_visibility_miles ( integer ) , weather.min_visibility_miles ( integer ) , weather.max_wind_speed_mph ( integer ) , weather.mean_wind_speed_mph ( integer ) , weather.max_gust_speed_mph ( integer ) , weather.precipitation_inches ( integer ) , weather.cloud_cover ( integer ) , weather.events ( text ) , weather.wind_dir_degrees ( integer ) , weather.zip_code ( integer ) ]\nforeign keys :\nstatus.station_id = station.id\nmatched contents :\nstation.id ( 50 )\nstatus.station_id ( 50 )\ntrip.start_station_id ( 50 )\ntrip.end_station_id ( 50 )\ntrip.bike_id ( 50 )\nweather.max_temperature_f ( 50 )\nweather.max_dew_point_f ( 50 )\nweather.mean_dew_point_f ( 50 )\nweather.max_humidity ( 50 )\nweather.mean_humidity ( 50 )",
  "database schema :\ntable musical , columns = [ musical.musical_id ( int | primary key ) , musical.name ( text ) , musical.year ( int ) , musical.award ( text ) , musical.category ( text ) , musical.nominee ( text ) , musical.result ( text ) ]\ntable actor , columns = [ actor.actor_id ( int | primary key ) , actor.name ( text ) , actor.musical_id ( int ) , actor.character ( text ) , actor.duration ( text ) , actor.age ( int ) ]\nforeign keys :\nactor.musical_id = actor.actor_id\nmatched contents :\nmusical.musical_id ( 3 )\nactor.actor_id ( 3 )",
  "database schema :\ntable chip_model , columns = [ chip_model.model_name ( text | primary key ) , chip_model.launch_year ( real ) , chip_model.ram_mib ( real ) , chip_model.rom_mib ( real ) , chip_model.slots ( text ) , chip_model.wifi ( text ) , chip_model.bluetooth ( text ) ]\ntable screen_mode , columns = [ screen_mode.graphics_mode ( real | primary key ) , screen_mode.char_cells ( text ) , screen_mode.pixels ( text ) , screen_mode.hardware_colours ( real ) , screen_mode.used_kb ( real ) , screen_mode.map ( text ) , screen_mode.type ( text ) ]\ntable phone , columns = [ phone.company_name ( text ) , phone.hardware_model_name ( text | primary key ) , phone.accreditation_type ( text ) , phone.accreditation_level ( text ) , phone.date ( text ) , phone.chip_model ( text ) , phone.screen_mode ( text ) ]\nforeign keys :\nphone.chip_model = chip_model.model_name\nphone.screen_mode = screen_mode.graphics_mode\nmatched contents :\nscreen_mode.type ( Text )\nphone.company_name ( Nokia Corporation )",
  "database schema :\ntable problem_category_codes , columns = [ problem_category_codes.problem_category_code ( varchar(20) | primary key ) , problem_category_codes.problem_category_description ( varchar(80) ) ]\ntable problem_log , columns = [ problem_log.problem_log_id ( integer | primary key ) , problem_log.assigned_to_staff_id ( integer ) , problem_log.problem_id ( integer ) , problem_log.problem_category_code ( varchar(20) ) , problem_log.problem_status_code ( varchar(20) ) , problem_log.log_entry_date ( datetime ) , problem_log.log_entry_description ( varchar(255) ) , problem_log.log_entry_fix ( varchar(255) ) , problem_log.other_log_details ( varchar(255) ) ]\ntable problem_status_codes , columns = [ problem_status_codes.problem_status_code ( varchar(20) | primary key ) , problem_status_codes.problem_status_description ( varchar(80) ) ]\ntable product , columns = [ product.product_id ( integer | primary key ) , product.product_name ( varchar(80) ) , product.product_details ( varchar(255) ) ]\ntable staff , columns = [ staff.staff_id ( integer | primary key ) , staff.staff_first_name ( varchar(80) ) , staff.staff_last_name ( varchar(80) ) , staff.other_staff_details ( varchar(255) ) ]\ntable problems , columns = [ problems.problem_id ( integer | primary key ) , problems.product_id ( integer ) , problems.closure_authorised_by_staff_id ( integer ) , problems.reported_by_staff_id ( integer ) , problems.date_problem_reported ( datetime ) , problems.date_problem_closed ( datetime ) , problems.problem_description ( varchar(255) ) , problems.other_problem_details ( varchar(255) ) ]\nforeign keys :\nproblem_log.problem_status_code = problem_status_codes.problem_status_code\nproblem_log.problem_id = problems.problem_id\nproblem_log.assigned_to_staff_id = staff.staff_id\nproblem_log.problem_category_code = problem_category_codes.problem_category_code\nproblems.reported_by_staff_id = staff.staff_id\nproblems.product_id = product.product_id\nproblems.closure_authorised_by_staff_id = staff.staff_id\nmatched contents :\nproblem_log.problem_status_code ( Reported )\nproblem_status_codes.problem_status_code ( Reported )\nproblem_status_codes.problem_status_description ( Reported )\nstaff.staff_first_name ( Rylan )\nstaff.staff_last_name ( Homenick )",
  "database schema :\ntable artists , columns = [ artists.id ( integer | primary key | comment : name ) , artists.name ( varchar(120) | comment : seq ) ]\ntable albums , columns = [ albums.id ( integer | primary key ) , albums.title ( varchar(160) ) , albums.artist_id ( integer ) ]\ntable employees , columns = [ employees.id ( integer | primary key ) , employees.last_name ( varchar(20) ) , employees.first_name ( varchar(20) ) , employees.title ( varchar(30) ) , employees.reports_to ( integer ) , employees.birth_date ( timestamp ) , employees.hire_date ( timestamp ) , employees.address ( varchar(70) ) , employees.city ( varchar(40) ) , employees.state ( varchar(40) ) , employees.country ( varchar(40) ) , employees.postal_code ( varchar(10) ) , employees.phone ( varchar(24) ) , employees.fax ( varchar(24) ) , employees.email ( varchar(60) ) ]\ntable customers , columns = [ customers.id ( integer | primary key ) , customers.first_name ( varchar(40) ) , customers.last_name ( varchar(20) ) , customers.company ( varchar(80) ) , customers.address ( varchar(70) ) , customers.city ( varchar(40) ) , customers.state ( varchar(40) ) , customers.country ( varchar(40) ) , customers.postal_code ( varchar(10) ) , customers.phone ( varchar(24) ) , customers.fax ( varchar(24) ) , customers.email ( varchar(60) ) , customers.support_rep_id ( integer ) ]\ntable genres , columns = [ genres.id ( integer | primary key ) , genres.name ( varchar(120) ) ]\ntable invoices , columns = [ invoices.id ( integer | primary key ) , invoices.customer_id ( integer ) , invoices.invoice_date ( timestamp ) , invoices.billing_address ( varchar(70) ) , invoices.billing_city ( varchar(40) ) , invoices.billing_state ( varchar(40) ) , invoices.billing_country ( varchar(40) ) , invoices.billing_postal_code ( varchar(10) ) , invoices.total ( numeric(10,2) ) ]\ntable media_types , columns = [ media_types.id ( integer | primary key ) , media_types.name ( varchar(120) ) ]\ntable tracks , columns = [ tracks.id ( integer | primary key ) , tracks.name ( varchar(200) ) , tracks.album_id ( integer ) , tracks.media_type_id ( integer ) , tracks.genre_id ( integer ) , tracks.composer ( varchar(220) ) , tracks.milliseconds ( integer ) , tracks.bytes ( integer ) , tracks.unit_price ( numeric(10,2) ) ]\ntable invoice_lines , columns = [ invoice_lines.id ( integer | primary key ) , invoice_lines.invoice_id ( integer ) , invoice_lines.track_id ( integer ) , invoice_lines.unit_price ( numeric(10,2) ) , invoice_lines.quantity ( integer ) ]\ntable playlists , columns = [ playlists.id ( integer | primary key ) , playlists.name ( varchar(120) ) ]\ntable playlist_tracks , columns = [ playlist_tracks.playlist_id ( integer | primary key ) , playlist_tracks.track_id ( integer | primary key ) ]\nforeign keys :\nalbums.artist_id = artists.id\nemployees.reports_to = employees.id\ncustomers.support_rep_id = employees.id\ninvoices.customer_id = customers.id\ntracks.media_type_id = media_types.id\ntracks.genre_id = genres.id\ntracks.album_id = albums.id\ninvoice_lines.track_id = tracks.id\ninvoice_lines.invoice_id = invoices.id\nplaylist_tracks.track_id = tracks.id\nplaylist_tracks.playlist_id = playlists.id\nmatched contents :\ngenres.name ( Rock , Jazz )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\ndepartment.room ( 268 )",
  "database schema :\ntable grapes , columns = [ grapes.id ( integer | primary key ) , grapes.grape ( text ) , grapes.color ( text ) ]\ntable appellations , columns = [ appellations.no ( integer | primary key ) , appellations.appelation ( text ) , appellations.county ( text ) , appellations.state ( text ) , appellations.area ( text ) , appellations.isava ( text ) ]\ntable wine , columns = [ wine.no ( integer ) , wine.grape ( text ) , wine.winery ( text ) , wine.appelation ( text ) , wine.state ( text ) , wine.name ( text ) , wine.year ( integer ) , wine.price ( integer ) , wine.score ( integer ) , wine.cases ( integer ) , wine.drink ( text ) ]\nforeign keys :\nwine.appelation = appellations.appelation\nwine.grape = grapes.grape\nmatched contents :\ngrapes.id ( 3 )\nappellations.no ( 3 )\nwine.no ( 3 )",
  "database schema :\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) ]\ntable participants , columns = [ participants.participant_id ( integer | primary key ) , participants.participant_type_code ( char(15) ) , participants.participant_details ( varchar(255) ) ]\ntable events , columns = [ events.event_id ( integer | primary key ) , events.service_id ( integer ) , events.event_details ( varchar(255) ) ]\ntable participants_in_events , columns = [ participants_in_events.event_id ( integer | primary key ) , participants_in_events.participant_id ( integer | primary key ) ]\nforeign keys :\nevents.service_id = services.service_id\nparticipants_in_events.event_id = events.event_id\nparticipants_in_events.participant_id = participants.participant_id\nmatched contents :\nservices.service_type_code ( Marriage )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nfiles.f_id ( 3 )\nsong.f_id ( 3 )",
  "database schema :\ntable customers , columns = [ customers.customer_id ( integer | primary key ) , customers.customer_first_name ( varchar(50) ) , customers.customer_middle_initial ( varchar(1) ) , customers.customer_last_name ( varchar(50) ) , customers.gender ( varchar(1) ) , customers.email_address ( varchar(255) ) , customers.login_name ( varchar(80) ) , customers.login_password ( varchar(20) ) , customers.phone_number ( varchar(255) ) , customers.town_city ( varchar(50) ) , customers.state_county_province ( varchar(50) ) , customers.country ( varchar(50) ) ]\ntable orders , columns = [ orders.order_id ( integer | primary key ) , orders.customer_id ( integer ) , orders.date_order_placed ( datetime ) , orders.order_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_number ( integer | primary key ) , invoices.order_id ( integer ) , invoices.invoice_date ( datetime ) ]\ntable accounts , columns = [ accounts.account_id ( integer | primary key ) , accounts.customer_id ( integer ) , accounts.date_account_opened ( datetime ) , accounts.account_name ( varchar(50) ) , accounts.other_account_details ( varchar(255) ) ]\ntable product_categories , columns = [ product_categories.production_type_code ( varchar(15) | primary key ) , product_categories.product_type_description ( varchar(80) ) , product_categories.vat_rating ( decimal(19,4) ) ]\ntable products , columns = [ products.product_id ( integer | primary key ) , products.parent_product_id ( integer ) , products.production_type_code ( varchar(15) ) , products.unit_price ( decimal(19,4) ) , products.product_name ( varchar(80) ) , products.product_color ( varchar(20) ) , products.product_size ( varchar(20) ) ]\ntable financial_transactions , columns = [ financial_transactions.transaction_id ( integer ) , financial_transactions.account_id ( integer ) , financial_transactions.invoice_number ( integer ) , financial_transactions.transaction_type ( varchar(15) ) , financial_transactions.transaction_date ( datetime ) , financial_transactions.transaction_amount ( decimal(19,4) ) , financial_transactions.transaction_comment ( varchar(255) ) , financial_transactions.other_transaction_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.product_quantity ( varchar(50) ) , order_items.other_order_item_details ( varchar(255) ) ]\ntable invoice_line_items , columns = [ invoice_line_items.order_item_id ( integer ) , invoice_line_items.invoice_number ( integer ) , invoice_line_items.product_id ( integer ) , invoice_line_items.product_title ( varchar(80) ) , invoice_line_items.product_quantity ( varchar(50) ) , invoice_line_items.product_price ( decimal(19,4) ) , invoice_line_items.derived_product_cost ( decimal(19,4) ) , invoice_line_items.derived_vat_payable ( decimal(19,4) ) , invoice_line_items.derived_total_cost ( decimal(19,4) ) ]\nforeign keys :\norders.customer_id = customers.customer_id\ninvoices.order_id = orders.order_id\naccounts.customer_id = customers.customer_id\nproducts.production_type_code = product_categories.production_type_code\nfinancial_transactions.account_id = accounts.account_id\nfinancial_transactions.invoice_number = invoices.invoice_number\norder_items.order_id = orders.order_id\norder_items.product_id = products.product_id\ninvoice_line_items.product_id = products.product_id\ninvoice_line_items.invoice_number = invoices.invoice_number\ninvoice_line_items.order_item_id = order_items.order_item_id\nmatched contents :\ncustomers.customer_first_name ( Meaghan )",
  "database schema :\ntable festival_detail , columns = [ festival_detail.festival_id ( int | primary key ) , festival_detail.festival_name ( text ) , festival_detail.chair_name ( text ) , festival_detail.location ( text ) , festival_detail.year ( int ) , festival_detail.num_of_audience ( int ) ]\ntable artwork , columns = [ artwork.artwork_id ( int | primary key ) , artwork.type ( text ) , artwork.name ( text ) ]\ntable nomination , columns = [ nomination.artwork_id ( int | primary key ) , nomination.festival_id ( int | primary key ) , nomination.result ( text ) ]\nforeign keys :\nnomination.festival_id = festival_detail.festival_id\nnomination.artwork_id = artwork.artwork_id\nmatched contents :\nfestival_detail.year ( 2007 )",
  "database schema :\ntable classroom , columns = [ classroom.building ( varchar(15) | primary key ) , classroom.room_number ( varchar(7) | primary key ) , classroom.capacity ( numeric(4,0) ) ]\ntable department , columns = [ department.dept_name ( varchar(20) | primary key | comment : department name ) , department.building ( varchar(15) ) , department.budget ( numeric(12,2) ) ]\ntable course , columns = [ course.course_id ( varchar(8) | primary key ) , course.title ( varchar(50) ) , course.dept_name ( varchar(20) | comment : department name ) , course.credits ( numeric(2,0) ) ]\ntable instructor , columns = [ instructor.id ( varchar(5) | primary key ) , instructor.name ( varchar(20) ) , instructor.dept_name ( varchar(20) | comment : department name ) , instructor.salary ( numeric(8,2) ) ]\ntable section , columns = [ section.course_id ( varchar(8) | primary key ) , section.sec_id ( varchar(8) | primary key | comment : section id ) , section.semester ( varchar(6) | primary key ) , section.year ( numeric(4,0) | primary key ) , section.building ( varchar(15) ) , section.room_number ( varchar(7) ) , section.time_slot_id ( varchar(4) ) ]\ntable teaches , columns = [ teaches.id ( varchar(5) | primary key ) , teaches.course_id ( varchar(8) | primary key ) , teaches.sec_id ( varchar(8) | primary key | comment : section id ) , teaches.semester ( varchar(6) | primary key ) , teaches.year ( numeric(4,0) | primary key ) ]\ntable student , columns = [ student.id ( varchar(5) | primary key ) , student.name ( varchar(20) ) , student.dept_name ( varchar(20) | comment : department name ) , student.tot_cred ( numeric(3,0) | comment : total credits ) ]\ntable takes , columns = [ takes.id ( varchar(5) | primary key ) , takes.course_id ( varchar(8) | primary key ) , takes.sec_id ( varchar(8) | primary key | comment : section id ) , takes.semester ( varchar(6) | primary key ) , takes.year ( numeric(4,0) | primary key ) , takes.grade ( varchar(2) ) ]\ntable advisor , columns = [ advisor.s_id ( varchar(5) | primary key | comment : student id ) , advisor.i_id ( varchar(5) | comment : instructor id ) ]\ntable time_slot , columns = [ time_slot.time_slot_id ( varchar(4) | primary key ) , time_slot.day ( varchar(1) | primary key ) , time_slot.start_hr ( numeric(2) | primary key | comment : start hour ) , time_slot.start_min ( numeric(2) | primary key | comment : start minute ) , time_slot.end_hr ( numeric(2) | comment : end hour ) , time_slot.end_min ( numeric(2) | comment : end minute ) ]\ntable prereq , columns = [ prereq.course_id ( varchar(8) | primary key ) , prereq.prereq_id ( varchar(8) | primary key | comment : prerequisite id ) ]\nforeign keys :\ncourse.dept_name = department.dept_name\ninstructor.dept_name = department.dept_name\nsection.building = classroom.building\nsection.room_number = classroom.room_number\nsection.course_id = course.course_id\nteaches.id = instructor.id\nteaches.course_id = section.course_id\nteaches.sec_id = section.sec_id\nteaches.semester = section.semester\nteaches.year = section.year\nstudent.dept_name = department.dept_name\ntakes.id = student.id\ntakes.course_id = section.course_id\ntakes.sec_id = section.sec_id\ntakes.semester = section.semester\ntakes.year = section.year\nadvisor.s_id = student.id\nadvisor.i_id = instructor.id\nprereq.prereq_id = course.course_id\nprereq.course_id = course.course_id\nmatched contents :\ndepartment.dept_name ( Statistics , Psychology )\ncourse.dept_name ( Statistics , Psychology )\ninstructor.dept_name ( Statistics , Psychology )\nstudent.dept_name ( Statistics , Psychology )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nhall_of_fame.category ( Player )\nplayer.birth_country ( USA )\nplayer.death_country ( USA )\ncollege.country ( USA )",
  "database schema :\ntable ref_payment_methods , columns = [ ref_payment_methods.payment_method_code ( char(10) | primary key ) , ref_payment_methods.payment_method_description ( varchar(80) ) ]\ntable ref_service_types , columns = [ ref_service_types.service_type_code ( char(15) | primary key ) , ref_service_types.parent_service_type_code ( char(15) ) , ref_service_types.service_type_description ( varchar(255) ) ]\ntable addresses , columns = [ addresses.address_id ( varchar(100) | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.city_town ( varchar(255) ) , addresses.state_county ( varchar(255) ) , addresses.other_details ( varchar(255) ) ]\ntable products , columns = [ products.product_id ( varchar(100) | primary key ) , products.product_name ( varchar(255) ) , products.product_price ( decimal(20,4) ) , products.product_description ( varchar(255) ) , products.other_product_service_details ( varchar(255) ) ]\ntable marketing_regions , columns = [ marketing_regions.marketing_region_code ( char(15) | primary key ) , marketing_regions.marketing_region_name ( varchar(255) ) , marketing_regions.marketing_region_descriptrion ( varchar(255) ) , marketing_regions.other_details ( varchar(255) ) ]\ntable clients , columns = [ clients.client_id ( integer | primary key ) , clients.address_id ( integer ) , clients.customer_email_address ( varchar(255) ) , clients.customer_name ( varchar(255) ) , clients.customer_phone ( varchar(255) ) , clients.other_details ( varchar(255) ) ]\ntable drama_workshop_groups , columns = [ drama_workshop_groups.workshop_group_id ( integer | primary key ) , drama_workshop_groups.address_id ( integer ) , drama_workshop_groups.currency_code ( char(15) ) , drama_workshop_groups.marketing_region_code ( char(15) ) , drama_workshop_groups.store_name ( varchar(255) ) , drama_workshop_groups.store_phone ( varchar(255) ) , drama_workshop_groups.store_email_address ( varchar(255) ) , drama_workshop_groups.other_details ( varchar(255) ) ]\ntable performers , columns = [ performers.performer_id ( integer | primary key ) , performers.address_id ( integer ) , performers.customer_name ( varchar(255) ) , performers.customer_phone ( varchar(255) ) , performers.customer_email_address ( varchar(255) ) , performers.other_details ( varchar(255) ) ]\ntable customers , columns = [ customers.customer_id ( varchar(100) | primary key ) , customers.address_id ( integer ) , customers.customer_name ( varchar(255) ) , customers.customer_phone ( varchar(255) ) , customers.customer_email_address ( varchar(255) ) , customers.other_details ( varchar(255) ) ]\ntable stores , columns = [ stores.store_id ( varchar(100) | primary key ) , stores.address_id ( integer ) , stores.marketing_region_code ( char(15) ) , stores.store_name ( varchar(255) ) , stores.store_phone ( varchar(255) ) , stores.store_email_address ( varchar(255) ) , stores.other_details ( varchar(255) ) ]\ntable bookings , columns = [ bookings.booking_id ( integer | primary key ) , bookings.customer_id ( integer ) , bookings.workshop_group_id ( varchar(100) ) , bookings.status_code ( char(15) ) , bookings.store_id ( integer ) , bookings.order_date ( datetime ) , bookings.planned_delivery_date ( datetime ) , bookings.actual_delivery_date ( datetime ) , bookings.other_order_details ( varchar(255) ) ]\ntable performers_in_bookings , columns = [ performers_in_bookings.order_id ( integer | primary key ) , performers_in_bookings.performer_id ( integer | primary key ) ]\ntable customer_orders , columns = [ customer_orders.order_id ( integer | primary key ) , customer_orders.customer_id ( integer ) , customer_orders.store_id ( integer ) , customer_orders.order_date ( datetime ) , customer_orders.planned_delivery_date ( datetime ) , customer_orders.actual_delivery_date ( datetime ) , customer_orders.other_order_details ( varchar(255) ) ]\ntable order_items , columns = [ order_items.order_item_id ( integer | primary key ) , order_items.order_id ( integer ) , order_items.product_id ( integer ) , order_items.order_quantity ( varchar(288) ) , order_items.other_item_details ( varchar(255) ) ]\ntable invoices , columns = [ invoices.invoice_id ( integer | primary key ) , invoices.order_id ( integer ) , invoices.payment_method_code ( char(15) ) , invoices.product_id ( integer ) , invoices.order_quantity ( varchar(288) ) , invoices.other_item_details ( varchar(255) ) , invoices.order_item_id ( integer ) ]\ntable services , columns = [ services.service_id ( integer | primary key ) , services.service_type_code ( char(15) ) , services.workshop_group_id ( integer ) , services.product_description ( varchar(255) ) , services.product_name ( varchar(255) ) , services.product_price ( decimal(20,4) ) , services.other_product_service_details ( varchar(255) ) ]\ntable bookings_services , columns = [ bookings_services.order_id ( integer | primary key ) , bookings_services.product_id ( integer | primary key ) ]\ntable invoice_items , columns = [ invoice_items.invoice_item_id ( integer | primary key ) , invoice_items.invoice_id ( integer ) , invoice_items.order_id ( integer ) , invoice_items.order_item_id ( integer ) , invoice_items.product_id ( integer ) , invoice_items.order_quantity ( integer ) , invoice_items.other_item_details ( varchar(255) ) ]\nforeign keys :\nclients.address_id = addresses.address_id\ndrama_workshop_groups.address_id = addresses.address_id\nperformers.address_id = addresses.address_id\ncustomers.address_id = addresses.address_id\nstores.marketing_region_code = marketing_regions.marketing_region_code\nstores.address_id = addresses.address_id\nbookings.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings.customer_id = clients.client_id\nperformers_in_bookings.order_id = bookings.booking_id\nperformers_in_bookings.performer_id = performers.performer_id\ncustomer_orders.store_id = stores.store_id\ncustomer_orders.customer_id = customers.customer_id\norder_items.product_id = products.product_id\norder_items.order_id = customer_orders.order_id\ninvoices.payment_method_code = ref_payment_methods.payment_method_code\ninvoices.order_id = bookings.booking_id\ninvoices.order_id = customer_orders.order_id\nservices.service_type_code = ref_service_types.service_type_code\nservices.workshop_group_id = drama_workshop_groups.workshop_group_id\nbookings_services.product_id = services.service_id\nbookings_services.order_id = bookings.booking_id\ninvoice_items.order_id = bookings_services.order_id\ninvoice_items.product_id = bookings_services.product_id\ninvoice_items.invoice_id = invoices.invoice_id\ninvoice_items.order_item_id = order_items.order_item_id\nmatched contents :\nproducts.product_name ( film )\nservices.product_name ( film )",
  "database schema :\ntable regions , columns = [ regions.region_id ( decimal(5,0) | primary key ) , regions.region_name ( varchar(25) ) ]\ntable countries , columns = [ countries.country_id ( varchar(2) | primary key ) , countries.country_name ( varchar(40) ) , countries.region_id ( decimal(10,0) ) ]\ntable departments , columns = [ departments.department_id ( decimal(4,0) | primary key ) , departments.department_name ( varchar(30) ) , departments.manager_id ( decimal(6,0) ) , departments.location_id ( decimal(4,0) ) ]\ntable jobs , columns = [ jobs.job_id ( varchar(10) | primary key ) , jobs.job_title ( varchar(35) ) , jobs.min_salary ( decimal(6,0) ) , jobs.max_salary ( decimal(6,0) ) ]\ntable employees , columns = [ employees.employee_id ( decimal(6,0) | primary key ) , employees.first_name ( varchar(20) ) , employees.last_name ( varchar(25) ) , employees.email ( varchar(25) ) , employees.phone_number ( varchar(20) ) , employees.hire_date ( date ) , employees.job_id ( varchar(10) ) , employees.salary ( decimal(8,2) ) , employees.commission_pct ( decimal(2,2) ) , employees.manager_id ( decimal(6,0) ) , employees.department_id ( decimal(4,0) ) ]\ntable job_history , columns = [ job_history.employee_id ( decimal(6,0) | primary key ) , job_history.start_date ( date | primary key ) , job_history.end_date ( date ) , job_history.job_id ( varchar(10) ) , job_history.department_id ( decimal(4,0) ) ]\ntable locations , columns = [ locations.location_id ( decimal(4,0) | primary key ) , locations.street_address ( varchar(40) ) , locations.postal_code ( varchar(12) ) , locations.city ( varchar(30) ) , locations.state_province ( varchar(25) ) , locations.country_id ( varchar(2) ) ]\nforeign keys :\ncountries.region_id = regions.region_id\nemployees.job_id = jobs.job_id\nemployees.department_id = departments.department_id\njob_history.job_id = jobs.job_id\njob_history.department_id = departments.department_id\njob_history.employee_id = employees.employee_id\nlocations.country_id = countries.country_id\nmatched contents :\nemployees.last_name ( McEwen )",
  "database schema :\ntable driver , columns = [ driver.driver_id ( int | primary key ) , driver.name ( text ) , driver.party ( text ) , driver.home_city ( text ) , driver.age ( int ) ]\ntable school , columns = [ school.school_id ( int | primary key ) , school.grade ( text ) , school.school ( text ) , school.location ( text ) , school.type ( text ) ]\ntable school_bus , columns = [ school_bus.school_id ( int | primary key ) , school_bus.driver_id ( int | primary key ) , school_bus.years_working ( int ) , school_bus.if_full_time ( bool ) ]\nforeign keys :\nschool_bus.driver_id = driver.driver_id\nschool_bus.school_id = school.school_id\nmatched contents :\ndriver.age ( 40 )",
  "database schema :\ntable document_types , columns = [ document_types.document_type_code ( varchar(10) | primary key ) , document_types.document_description ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.document_type_code ( varchar(10) ) , documents.grant_id ( integer ) , documents.sent_date ( datetime ) , documents.response_received_date ( datetime ) , documents.other_details ( varchar(255) ) ]\ntable grants , columns = [ grants.grant_id ( integer | primary key ) , grants.organisation_id ( integer ) , grants.grant_amount ( decimal(19,4) ) , grants.grant_start_date ( datetime ) , grants.grant_end_date ( datetime ) , grants.other_details ( varchar(255) ) ]\ntable organisation_types , columns = [ organisation_types.organisation_type ( varchar(10) | primary key ) , organisation_types.organisation_type_description ( varchar(255) ) ]\ntable organisations , columns = [ organisations.organisation_id ( integer | primary key ) , organisations.organisation_type ( varchar(10) ) , organisations.organisation_details ( varchar(255) ) ]\ntable project_outcomes , columns = [ project_outcomes.project_id ( integer ) , project_outcomes.outcome_code ( varchar(10) ) , project_outcomes.outcome_details ( varchar(255) ) ]\ntable project_staff , columns = [ project_staff.staff_id ( double | primary key ) , project_staff.project_id ( integer ) , project_staff.role_code ( varchar(10) ) , project_staff.date_from ( datetime ) , project_staff.date_to ( datetime ) , project_staff.other_details ( varchar(255) ) ]\ntable projects , columns = [ projects.project_id ( integer | primary key ) , projects.organisation_id ( integer ) , projects.project_details ( varchar(255) ) ]\ntable research_outcomes , columns = [ research_outcomes.outcome_code ( varchar(10) | primary key ) , research_outcomes.outcome_description ( varchar(255) ) ]\ntable research_staff , columns = [ research_staff.staff_id ( integer | primary key ) , research_staff.employer_organisation_id ( integer ) , research_staff.staff_details ( varchar(255) ) ]\ntable staff_roles , columns = [ staff_roles.role_code ( varchar(10) | primary key ) , staff_roles.role_description ( varchar(255) ) ]\ntable tasks , columns = [ tasks.task_id ( integer | primary key ) , tasks.project_id ( integer ) , tasks.task_details ( varchar(255) ) , tasks.`eg agree objectives` ( varchar(1) ) ]\nforeign keys :\ndocuments.grant_id = grants.grant_id\ndocuments.document_type_code = document_types.document_type_code\ngrants.organisation_id = organisations.organisation_id\norganisations.organisation_type = organisation_types.organisation_type\nproject_outcomes.outcome_code = research_outcomes.outcome_code\nproject_outcomes.project_id = projects.project_id\nproject_staff.role_code = staff_roles.role_code\nproject_staff.project_id = projects.project_id\nprojects.organisation_id = organisations.organisation_id\nresearch_staff.employer_organisation_id = organisations.organisation_id\ntasks.project_id = projects.project_id\nmatched contents : None",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nhall_of_fame.category ( Player )\nplayer.birth_city ( Boston )\nplayer.death_city ( Boston )\nplayer.name_first ( Red )\nplayer.name_last ( Boston )\npark.city ( Boston )\ncollege.city ( Boston )\nteam.name ( Boston Red Stockings , Boston Reds )\nteam_franchise.franchise_name ( Boston Red Stockings , Boston Reds )",
  "database schema :\ntable aircraft , columns = [ aircraft.aircraft_id ( int | primary key ) , aircraft.order_year ( int ) , aircraft.manufacturer ( text ) , aircraft.model ( text ) , aircraft.fleet_series ( text ) , aircraft.powertrain ( text ) , aircraft.fuel_propulsion ( text ) ]\ntable pilot , columns = [ pilot.pilot_id ( int | primary key ) , pilot.pilot_name ( text ) , pilot.rank ( int ) , pilot.age ( int ) , pilot.nationality ( text ) , pilot.position ( text ) , pilot.join_year ( int ) , pilot.team ( text ) ]\ntable pilot_record , columns = [ pilot_record.record_id ( int ) , pilot_record.pilot_id ( int | primary key ) , pilot_record.aircraft_id ( int | primary key ) , pilot_record.date ( text | primary key ) ]\nforeign keys :\npilot_record.aircraft_id = aircraft.aircraft_id\npilot_record.pilot_id = pilot.pilot_id\nmatched contents :\npilot.rank ( 34 )",
  "database schema :\ntable ref_address_types , columns = [ ref_address_types.address_type_code ( varchar(15) | primary key ) , ref_address_types.address_type_description ( varchar(80) ) ]\ntable ref_detention_type , columns = [ ref_detention_type.detention_type_code ( varchar(10) | primary key ) , ref_detention_type.detention_type_description ( varchar(80) ) ]\ntable ref_incident_type , columns = [ ref_incident_type.incident_type_code ( varchar(10) | primary key ) , ref_incident_type.incident_type_description ( varchar(80) ) ]\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(120) ) , addresses.line_2 ( varchar(120) ) , addresses.line_3 ( varchar(120) ) , addresses.city ( varchar(80) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(50) ) , addresses.country ( varchar(50) ) , addresses.other_address_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.date_first_rental ( datetime ) , students.date_left_university ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable teachers , columns = [ teachers.teacher_id ( integer | primary key ) , teachers.address_id ( integer ) , teachers.first_name ( varchar(80) ) , teachers.middle_name ( varchar(80) ) , teachers.last_name ( varchar(80) ) , teachers.gender ( varchar(1) ) , teachers.cell_mobile_number ( varchar(40) ) , teachers.email_address ( varchar(40) ) , teachers.other_details ( varchar(255) ) ]\ntable assessment_notes , columns = [ assessment_notes.notes_id ( integer ) , assessment_notes.student_id ( integer ) , assessment_notes.teacher_id ( integer ) , assessment_notes.date_of_notes ( datetime ) , assessment_notes.text_of_notes ( varchar(255) ) , assessment_notes.other_details ( varchar(255) ) ]\ntable behavior_incident , columns = [ behavior_incident.incident_id ( integer | primary key ) , behavior_incident.incident_type_code ( varchar(10) ) , behavior_incident.student_id ( integer ) , behavior_incident.date_incident_start ( datetime ) , behavior_incident.date_incident_end ( datetime ) , behavior_incident.incident_summary ( varchar(255) ) , behavior_incident.recommendations ( varchar(255) ) , behavior_incident.other_details ( varchar(255) ) ]\ntable detention , columns = [ detention.detention_id ( integer | primary key ) , detention.detention_type_code ( varchar(10) ) , detention.teacher_id ( integer ) , detention.datetime_detention_start ( datetime ) , detention.datetime_detention_end ( datetime ) , detention.detention_summary ( varchar(255) ) , detention.other_details ( varchar(255) ) ]\ntable student_addresses , columns = [ student_addresses.student_id ( integer ) , student_addresses.address_id ( integer ) , student_addresses.date_address_from ( datetime ) , student_addresses.date_address_to ( datetime ) , student_addresses.monthly_rental ( decimal(19,4) ) , student_addresses.other_details ( varchar(255) ) ]\ntable students_in_detention , columns = [ students_in_detention.student_id ( integer ) , students_in_detention.detention_id ( integer ) , students_in_detention.incident_id ( integer ) ]\nforeign keys :\nstudents.address_id = addresses.address_id\nteachers.address_id = addresses.address_id\nassessment_notes.teacher_id = teachers.teacher_id\nassessment_notes.student_id = students.student_id\nbehavior_incident.student_id = students.student_id\nbehavior_incident.incident_type_code = ref_incident_type.incident_type_code\ndetention.teacher_id = teachers.teacher_id\ndetention.detention_type_code = ref_detention_type.detention_type_code\nstudent_addresses.student_id = students.student_id\nstudent_addresses.address_id = addresses.address_id\nstudents_in_detention.student_id = students.student_id\nstudents_in_detention.detention_id = detention.detention_id\nstudents_in_detention.incident_id = behavior_incident.incident_id\nmatched contents :\nteachers.first_name ( Lyla )",
  "database schema :\ntable all_star , columns = [ all_star.player_id ( text ) , all_star.year ( integer ) , all_star.game_num ( integer ) , all_star.game_id ( text ) , all_star.team_id ( text ) , all_star.league_id ( text ) , all_star.gp ( numeric ) , all_star.starting_pos ( numeric ) ]\ntable appearances , columns = [ appearances.year ( integer ) , appearances.team_id ( text ) , appearances.league_id ( text ) , appearances.player_id ( text ) , appearances.g_all ( numeric ) , appearances.gs ( numeric ) , appearances.g_batting ( integer ) , appearances.g_defense ( numeric ) , appearances.g_p ( integer ) , appearances.g_c ( integer ) , appearances.g_1b ( integer ) , appearances.g_2b ( integer ) , appearances.g_3b ( integer ) , appearances.g_ss ( integer ) , appearances.g_lf ( integer ) , appearances.g_cf ( integer ) , appearances.g_rf ( integer ) , appearances.g_of ( integer ) , appearances.g_dh ( numeric ) , appearances.g_ph ( numeric ) , appearances.g_pr ( numeric ) ]\ntable manager_award , columns = [ manager_award.player_id ( text ) , manager_award.award_id ( text ) , manager_award.year ( integer ) , manager_award.league_id ( text ) , manager_award.tie ( text ) , manager_award.notes ( numeric ) ]\ntable player_award , columns = [ player_award.player_id ( text ) , player_award.award_id ( text ) , player_award.year ( integer ) , player_award.league_id ( text ) , player_award.tie ( text ) , player_award.notes ( text ) ]\ntable manager_award_vote , columns = [ manager_award_vote.award_id ( text ) , manager_award_vote.year ( integer ) , manager_award_vote.league_id ( text ) , manager_award_vote.player_id ( text ) , manager_award_vote.points_won ( integer ) , manager_award_vote.points_max ( integer ) , manager_award_vote.votes_first ( integer ) ]\ntable player_award_vote , columns = [ player_award_vote.award_id ( text ) , player_award_vote.year ( integer ) , player_award_vote.league_id ( text ) , player_award_vote.player_id ( text ) , player_award_vote.points_won ( numeric ) , player_award_vote.points_max ( integer ) , player_award_vote.votes_first ( numeric ) ]\ntable batting , columns = [ batting.player_id ( text ) , batting.year ( integer ) , batting.stint ( integer ) , batting.team_id ( text ) , batting.league_id ( text ) , batting.g ( integer ) , batting.ab ( numeric ) , batting.r ( numeric ) , batting.h ( numeric ) , batting.double ( numeric ) , batting.triple ( numeric ) , batting.hr ( numeric ) , batting.rbi ( numeric ) , batting.sb ( numeric ) , batting.cs ( numeric ) , batting.bb ( numeric ) , batting.so ( numeric ) , batting.ibb ( numeric ) , batting.hbp ( numeric ) , batting.sh ( numeric ) , batting.sf ( numeric ) , batting.g_idp ( numeric ) ]\ntable batting_postseason , columns = [ batting_postseason.year ( integer ) , batting_postseason.round ( text ) , batting_postseason.player_id ( text ) , batting_postseason.team_id ( text ) , batting_postseason.league_id ( text ) , batting_postseason.g ( integer ) , batting_postseason.ab ( integer ) , batting_postseason.r ( integer ) , batting_postseason.h ( integer ) , batting_postseason.double ( integer ) , batting_postseason.triple ( integer ) , batting_postseason.hr ( integer ) , batting_postseason.rbi ( integer ) , batting_postseason.sb ( integer ) , batting_postseason.cs ( numeric ) , batting_postseason.bb ( integer ) , batting_postseason.so ( integer ) , batting_postseason.ibb ( numeric ) , batting_postseason.hbp ( numeric ) , batting_postseason.sh ( numeric ) , batting_postseason.sf ( numeric ) , batting_postseason.g_idp ( numeric ) ]\ntable player_college , columns = [ player_college.player_id ( text ) , player_college.college_id ( text ) , player_college.year ( integer ) ]\ntable fielding , columns = [ fielding.player_id ( text ) , fielding.year ( integer ) , fielding.stint ( integer ) , fielding.team_id ( text ) , fielding.league_id ( text ) , fielding.pos ( text ) , fielding.g ( integer ) , fielding.gs ( numeric ) , fielding.inn_outs ( numeric ) , fielding.po ( numeric ) , fielding.a ( numeric ) , fielding.e ( numeric ) , fielding.dp ( numeric ) , fielding.pb ( numeric ) , fielding.wp ( numeric ) , fielding.sb ( numeric ) , fielding.cs ( numeric ) , fielding.zr ( numeric ) ]\ntable fielding_outfield , columns = [ fielding_outfield.player_id ( text ) , fielding_outfield.year ( integer ) , fielding_outfield.stint ( integer ) , fielding_outfield.glf ( numeric ) , fielding_outfield.gcf ( numeric ) , fielding_outfield.grf ( numeric ) ]\ntable fielding_postseason , columns = [ fielding_postseason.player_id ( text ) , fielding_postseason.year ( integer ) , fielding_postseason.team_id ( text ) , fielding_postseason.league_id ( text ) , fielding_postseason.round ( text ) , fielding_postseason.pos ( text ) , fielding_postseason.g ( integer ) , fielding_postseason.gs ( numeric ) , fielding_postseason.inn_outs ( numeric ) , fielding_postseason.po ( integer ) , fielding_postseason.a ( integer ) , fielding_postseason.e ( integer ) , fielding_postseason.dp ( integer ) , fielding_postseason.tp ( integer ) , fielding_postseason.pb ( numeric ) , fielding_postseason.sb ( numeric ) , fielding_postseason.cs ( numeric ) ]\ntable hall_of_fame , columns = [ hall_of_fame.player_id ( text ) , hall_of_fame.yearid ( integer ) , hall_of_fame.votedby ( text ) , hall_of_fame.ballots ( numeric ) , hall_of_fame.needed ( numeric ) , hall_of_fame.votes ( numeric ) , hall_of_fame.inducted ( text ) , hall_of_fame.category ( text ) , hall_of_fame.needed_note ( text ) ]\ntable home_game , columns = [ home_game.year ( integer ) , home_game.league_id ( text ) , home_game.team_id ( text ) , home_game.park_id ( text ) , home_game.span_first ( text ) , home_game.span_last ( text ) , home_game.games ( integer ) , home_game.openings ( integer ) , home_game.attendance ( integer ) ]\ntable manager , columns = [ manager.player_id ( text ) , manager.year ( integer ) , manager.team_id ( text ) , manager.league_id ( text ) , manager.inseason ( integer ) , manager.g ( integer ) , manager.w ( integer ) , manager.l ( integer ) , manager.rank ( numeric ) , manager.plyr_mgr ( text ) ]\ntable manager_half , columns = [ manager_half.player_id ( text ) , manager_half.year ( integer ) , manager_half.team_id ( text ) , manager_half.league_id ( text ) , manager_half.inseason ( integer ) , manager_half.half ( integer ) , manager_half.g ( integer ) , manager_half.w ( integer ) , manager_half.l ( integer ) , manager_half.rank ( integer ) ]\ntable player , columns = [ player.player_id ( text ) , player.birth_year ( numeric ) , player.birth_month ( numeric ) , player.birth_day ( numeric ) , player.birth_country ( text ) , player.birth_state ( text ) , player.birth_city ( text ) , player.death_year ( numeric ) , player.death_month ( numeric ) , player.death_day ( numeric ) , player.death_country ( text ) , player.death_state ( text ) , player.death_city ( text ) , player.name_first ( text ) , player.name_last ( text ) , player.name_given ( text ) , player.weight ( numeric ) , player.height ( numeric ) , player.bats ( text ) , player.throws ( text ) , player.debut ( text ) , player.final_game ( text ) , player.retro_id ( text ) , player.bbref_id ( text ) ]\ntable park , columns = [ park.park_id ( text ) , park.park_name ( text ) , park.park_alias ( text ) , park.city ( text ) , park.state ( text ) , park.country ( text ) ]\ntable pitching , columns = [ pitching.player_id ( text ) , pitching.year ( integer ) , pitching.stint ( integer ) , pitching.team_id ( text ) , pitching.league_id ( text ) , pitching.w ( integer ) , pitching.l ( integer ) , pitching.g ( integer ) , pitching.gs ( integer ) , pitching.cg ( integer ) , pitching.sho ( integer ) , pitching.sv ( integer ) , pitching.ipouts ( numeric ) , pitching.h ( integer ) , pitching.er ( integer ) , pitching.hr ( integer ) , pitching.bb ( integer ) , pitching.so ( integer ) , pitching.baopp ( numeric ) , pitching.era ( numeric ) , pitching.ibb ( numeric ) , pitching.wp ( numeric ) , pitching.hbp ( numeric ) , pitching.bk ( integer ) , pitching.bfp ( numeric ) , pitching.gf ( numeric ) , pitching.r ( integer ) , pitching.sh ( numeric ) , pitching.sf ( numeric ) , pitching.g_idp ( numeric ) ]\ntable pitching_postseason , columns = [ pitching_postseason.player_id ( text ) , pitching_postseason.year ( integer ) , pitching_postseason.round ( text ) , pitching_postseason.team_id ( text ) , pitching_postseason.league_id ( text ) , pitching_postseason.w ( integer ) , pitching_postseason.l ( integer ) , pitching_postseason.g ( integer ) , pitching_postseason.gs ( integer ) , pitching_postseason.cg ( integer ) , pitching_postseason.sho ( integer ) , pitching_postseason.sv ( integer ) , pitching_postseason.ipouts ( integer ) , pitching_postseason.h ( integer ) , pitching_postseason.er ( integer ) , pitching_postseason.hr ( integer ) , pitching_postseason.bb ( integer ) , pitching_postseason.so ( integer ) , pitching_postseason.baopp ( text ) , pitching_postseason.era ( numeric ) , pitching_postseason.ibb ( numeric ) , pitching_postseason.wp ( numeric ) , pitching_postseason.hbp ( numeric ) , pitching_postseason.bk ( numeric ) , pitching_postseason.bfp ( numeric ) , pitching_postseason.gf ( integer ) , pitching_postseason.r ( integer ) , pitching_postseason.sh ( numeric ) , pitching_postseason.sf ( numeric ) , pitching_postseason.g_idp ( numeric ) ]\ntable salary , columns = [ salary.year ( integer ) , salary.team_id ( text ) , salary.league_id ( text ) , salary.player_id ( text ) , salary.salary ( integer ) ]\ntable college , columns = [ college.college_id ( text ) , college.name_full ( text ) , college.city ( text ) , college.state ( text ) , college.country ( text ) ]\ntable postseason , columns = [ postseason.year ( integer ) , postseason.round ( text ) , postseason.team_id_winner ( text ) , postseason.league_id_winner ( text ) , postseason.team_id_loser ( text ) , postseason.league_id_loser ( text ) , postseason.wins ( integer ) , postseason.losses ( integer ) , postseason.ties ( integer ) ]\ntable team , columns = [ team.year ( integer ) , team.league_id ( text ) , team.team_id ( text ) , team.franchise_id ( text ) , team.div_id ( text ) , team.rank ( integer ) , team.g ( integer ) , team.ghome ( numeric ) , team.w ( integer ) , team.l ( integer ) , team.div_win ( text ) , team.wc_win ( text ) , team.lg_win ( text ) , team.ws_win ( text ) , team.r ( integer ) , team.ab ( integer ) , team.h ( integer ) , team.double ( integer ) , team.triple ( integer ) , team.hr ( integer ) , team.bb ( integer ) , team.so ( numeric ) , team.sb ( numeric ) , team.cs ( numeric ) , team.hbp ( numeric ) , team.sf ( numeric ) , team.ra ( integer ) , team.er ( integer ) , team.era ( numeric ) , team.cg ( integer ) , team.sho ( integer ) , team.sv ( integer ) , team.ipouts ( integer ) , team.ha ( integer ) , team.hra ( integer ) , team.bba ( integer ) , team.soa ( integer ) , team.e ( integer ) , team.dp ( numeric ) , team.fp ( numeric ) , team.name ( text ) , team.park ( text ) , team.attendance ( numeric ) , team.bpf ( integer ) , team.ppf ( integer ) , team.team_id_br ( text ) , team.team_id_lahman45 ( text ) , team.team_id_retro ( text ) ]\ntable team_franchise , columns = [ team_franchise.franchise_id ( text ) , team_franchise.franchise_name ( text ) , team_franchise.active ( text ) , team_franchise.na_assoc ( text ) ]\ntable team_half , columns = [ team_half.year ( integer ) , team_half.league_id ( text ) , team_half.team_id ( text ) , team_half.half ( integer ) , team_half.div_id ( text ) , team_half.div_win ( text ) , team_half.rank ( integer ) , team_half.g ( integer ) , team_half.w ( integer ) , team_half.l ( integer ) ]\nforeign keys :\nall_star.player_id = player.player_id\nappearances.player_id = player.player_id\nappearances.team_id = team.team_id\nmanager_award.player_id = player.player_id\nplayer_award.player_id = player.player_id\nplayer_award_vote.player_id = player.player_id\nbatting.player_id = player.player_id\nbatting_postseason.team_id = team.team_id\nbatting_postseason.player_id = player.player_id\nplayer_college.college_id = college.college_id\nplayer_college.player_id = player.player_id\nfielding.player_id = player.player_id\nfielding_outfield.player_id = player.player_id\nfielding_postseason.team_id = player.team_id\nfielding_postseason.player_id = player.player_id\nhall_of_fame.player_id = player.player_id\nhome_game.park_id = park.park_id\nhome_game.team_id = team.team_id\nmanager.team_id = team.team_id\nmanager_half.team_id = team.team_id\nmatched contents :\nall_star.year ( 1960 , 1961 )\nappearances.year ( 1960 , 1961 )\nbatting.year ( 1960 , 1961 )\nbatting_postseason.year ( 1960 , 1961 )\nfielding.year ( 1960 , 1961 )\nfielding.inn_outs ( 1960 , 1961 )\nfielding_postseason.year ( 1960 , 1961 )\nhall_of_fame.yearid ( 1960 , 1961 )\nhall_of_fame.category ( Player )\nhome_game.year ( 1960 , 1961 )\nmanager.year ( 1960 , 1961 )",
  "database schema :\ntable school , columns = [ school.school_id ( text | primary key ) , school.school_name ( text ) , school.location ( text ) , school.mascot ( text ) , school.enrollment ( int ) , school.ihsaa_class ( text ) , school.ihsaa_football_class ( text ) , school.county ( text ) ]\ntable budget , columns = [ budget.school_id ( int | primary key ) , budget.year ( int | primary key ) , budget.budgeted ( int ) , budget.total_budget_percent_budgeted ( real ) , budget.invested ( int ) , budget.total_budget_percent_invested ( real ) , budget.budget_invested_percent ( text ) ]\ntable endowment , columns = [ endowment.endowment_id ( int | primary key ) , endowment.school_id ( int ) , endowment.donator_name ( text ) , endowment.amount ( real ) ]\nforeign keys :\nbudget.school_id = school.school_id\nendowment.school_id = school.school_id\nmatched contents :\nbudget.year ( 2001 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable faculty , columns = [ faculty.facid ( integer | primary key | comment : faculty id ) , faculty.lname ( varchar(15) | comment : last name ) , faculty.fname ( varchar(15) | comment : first name ) , faculty.rank ( varchar(15) ) , faculty.sex ( varchar(1) ) , faculty.phone ( integer ) , faculty.room ( varchar(5) ) , faculty.building ( varchar(13) ) ]\ntable department , columns = [ department.dno ( integer | primary key | comment : department number ) , department.division ( varchar(2) ) , department.dname ( varchar(25) | comment : department name ) , department.room ( varchar(5) ) , department.building ( varchar(13) ) , department.dphone ( integer | comment : department phone ) ]\ntable member_of , columns = [ member_of.facid ( integer | comment : faculty id ) , member_of.dno ( integer | comment : department number ) , member_of.appt_type ( varchar(15) ) ]\ntable course , columns = [ course.cid ( varchar(7) | primary key | comment : course id ) , course.cname ( varchar(40) | comment : course name ) , course.credits ( integer ) , course.instructor ( integer ) , course.days ( varchar(5) ) , course.hours ( varchar(11) ) , course.dno ( integer | comment : department number ) ]\ntable minor_in , columns = [ minor_in.stuid ( integer | comment : student id ) , minor_in.dno ( integer | comment : department number ) ]\ntable enrolled_in , columns = [ enrolled_in.stuid ( integer | comment : student id ) , enrolled_in.cid ( varchar(7) | comment : course id ) , enrolled_in.grade ( varchar(2) ) ]\ntable gradeconversion , columns = [ gradeconversion.lettergrade ( varchar(2) | primary key ) , gradeconversion.gradepoint ( float ) ]\nforeign keys :\nmember_of.dno = department.dno\nmember_of.facid = faculty.facid\ncourse.dno = department.dno\ncourse.instructor = faculty.facid\nminor_in.dno = department.dno\nminor_in.stuid = student.stuid\nenrolled_in.grade = gradeconversion.lettergrade\nenrolled_in.cid = course.cid\nenrolled_in.stuid = student.stuid\nmatched contents :\ndepartment.dno ( 140 )\nminor_in.dno ( 140 )",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable dorm , columns = [ dorm.dormid ( integer ) , dorm.dorm_name ( varchar(20) ) , dorm.student_capacity ( integer ) , dorm.gender ( varchar(1) ) ]\ntable dorm_amenity , columns = [ dorm_amenity.amenid ( integer | comment : amenity id ) , dorm_amenity.amenity_name ( varchar(25) ) ]\ntable has_amenity , columns = [ has_amenity.dormid ( integer ) , has_amenity.amenid ( integer | comment : amenity id ) ]\ntable lives_in , columns = [ lives_in.stuid ( integer | comment : student id ) , lives_in.dormid ( integer ) , lives_in.room_number ( integer ) ]\nforeign keys :\nhas_amenity.amenid = dorm_amenity.amenid\nhas_amenity.dormid = dorm.dormid\nlives_in.dormid = dorm.dormid\nlives_in.stuid = student.stuid\nmatched contents :\ndorm_amenity.amenity_name ( TV Lounge )",
  "database schema :\ntable country , columns = [ country.country_id ( int | primary key ) , country.country_name ( text ) , country.capital ( text ) , country.official_native_language ( text ) ]\ntable team , columns = [ team.team_id ( int | primary key ) , team.name ( text ) ]\ntable match_season , columns = [ match_season.season ( real | primary key ) , match_season.player ( text ) , match_season.position ( text ) , match_season.country ( int ) , match_season.team ( int ) , match_season.draft_pick_number ( int ) , match_season.draft_class ( text ) , match_season.college ( text ) ]\ntable player , columns = [ player.player_id ( int | primary key ) , player.player ( text ) , player.years_played ( text ) , player.total_wl ( text ) , player.singles_wl ( text ) , player.doubles_wl ( text ) , player.team ( int ) ]\nforeign keys :\nmatch_season.team = team.team_id\nmatch_season.country = country.country_id\nplayer.team = team.team_id\nmatched contents :\nmatch_season.college ( Maryland , Duke )",
  "database schema :\ntable book_club , columns = [ book_club.book_club_id ( int | primary key ) , book_club.year ( int ) , book_club.author_or_editor ( text ) , book_club.book_title ( text ) , book_club.publisher ( text ) , book_club.category ( text ) , book_club.result ( text ) ]\ntable movie , columns = [ movie.movie_id ( int | primary key ) , movie.title ( text ) , movie.year ( int ) , movie.director ( text ) , movie.budget_million ( real ) , movie.gross_worldwide ( int ) ]\ntable culture_company , columns = [ culture_company.company_name ( text | primary key ) , culture_company.type ( text ) , culture_company.incorporated_in ( text ) , culture_company.group_equity_shareholding ( real ) , culture_company.book_club_id ( text ) , culture_company.movie_id ( text ) ]\nforeign keys :\nculture_company.movie_id = movie.movie_id\nculture_company.book_club_id = book_club.book_club_id\nmatched contents :\nmovie.year ( 1999 )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nfiles.formats ( mp3 )",
  "database schema :\ntable allergy_type , columns = [ allergy_type.allergy ( varchar(20) | primary key | comment : allergy name ) , allergy_type.allergytype ( varchar(20) ) ]\ntable has_allergy , columns = [ has_allergy.stuid ( integer ) , has_allergy.allergy ( varchar(20) ) ]\ntable student , columns = [ student.stuid ( integer | primary key ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\nforeign keys :\nhas_allergy.allergy = allergy_type.allergy\nhas_allergy.stuid = student.stuid\nmatched contents :\nstudent.age ( 18 )",
  "database schema :\ntable genre , columns = [ genre.g_name ( varchar2(20) | primary key | comment : genre name ) , genre.rating ( varchar2(10) ) , genre.most_popular_in ( varchar2(50) ) ]\ntable artist , columns = [ artist.artist_name ( varchar2(50) | primary key ) , artist.country ( varchar2(20) ) , artist.gender ( varchar2(20) ) , artist.preferred_genre ( varchar2(50) ) ]\ntable files , columns = [ files.f_id ( number(10) | primary key | comment : song id ) , files.artist_name ( varchar2(50) ) , files.file_size ( varchar2(20) ) , files.duration ( varchar2(20) ) , files.formats ( varchar2(20) ) ]\ntable song , columns = [ song.song_name ( varchar2(50) | primary key ) , song.artist_name ( varchar2(50) ) , song.country ( varchar2(20) ) , song.f_id ( number(10) | comment : song id ) , song.genre_is ( varchar2(20) ) , song.rating ( number(10) ) , song.languages ( varchar2(20) ) , song.releasedate ( date ) , song.resolution ( number(10) ) ]\nforeign keys :\nartist.preferred_genre = genre.g_name\nfiles.artist_name = artist.artist_name\nsong.genre_is = genre.g_name\nsong.f_id = files.f_id\nsong.artist_name = artist.artist_name\nmatched contents :\nfiles.formats ( mp4 )\nsong.resolution ( 720 )",
  "database schema :\ntable customer_master_index , columns = [ customer_master_index.master_customer_id ( integer | primary key ) , customer_master_index.cmi_details ( varchar(255) ) ]\ntable cmi_cross_references , columns = [ cmi_cross_references.cmi_cross_ref_id ( integer | primary key | comment : cmi cross reference id ) , cmi_cross_references.master_customer_id ( integer ) , cmi_cross_references.source_system_code ( char(15) ) ]\ntable council_tax , columns = [ council_tax.council_tax_id ( integer | primary key ) , council_tax.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable business_rates , columns = [ business_rates.business_rates_id ( integer | primary key ) , business_rates.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable benefits_overpayments , columns = [ benefits_overpayments.council_tax_id ( integer | primary key ) , benefits_overpayments.cmi_cross_ref_id ( integer ) ]\ntable parking_fines , columns = [ parking_fines.council_tax_id ( integer | primary key ) , parking_fines.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable rent_arrears , columns = [ rent_arrears.council_tax_id ( integer | primary key ) , rent_arrears.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\ntable electoral_register , columns = [ electoral_register.electoral_register_id ( integer | primary key ) , electoral_register.cmi_cross_ref_id ( integer | comment : cmi cross reference id ) ]\nforeign keys :\ncmi_cross_references.master_customer_id = customer_master_index.master_customer_id\ncouncil_tax.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbusiness_rates.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nbenefits_overpayments.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nparking_fines.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nrent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nelectoral_register.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id\nmatched contents :\ncmi_cross_references.source_system_code ( Parking )"
]