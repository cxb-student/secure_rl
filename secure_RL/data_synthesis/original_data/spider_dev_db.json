[
  "database schema :\ntable stadium , columns = [ stadium.stadium_id ( int | primary key ) , stadium.location ( text ) , stadium.name ( text ) , stadium.capacity ( int ) , stadium.highest ( int ) , stadium.lowest ( int ) , stadium.average ( int ) ]\ntable singer , columns = [ singer.singer_id ( int | primary key ) , singer.name ( text ) , singer.country ( text ) , singer.song_name ( text ) , singer.song_release_year ( text ) , singer.age ( int ) , singer.is_male ( bool ) ]\ntable concert , columns = [ concert.concert_id ( int | primary key ) , concert.concert_name ( text ) , concert.theme ( text ) , concert.stadium_id ( text ) , concert.year ( text ) ]\ntable singer_in_concert , columns = [ singer_in_concert.concert_id ( int | primary key ) , singer_in_concert.singer_id ( text | primary key ) ]\nforeign keys :\nconcert.stadium_id = stadium.stadium_id\nsinger_in_concert.singer_id = singer.singer_id\nsinger_in_concert.concert_id = concert.concert_id\nmatched contents : None",
  "database schema :\ntable student , columns = [ student.stuid ( integer | primary key | comment : student id ) , student.lname ( varchar(12) | comment : last name ) , student.fname ( varchar(12) | comment : first name ) , student.age ( integer ) , student.sex ( varchar(1) ) , student.major ( integer ) , student.advisor ( integer ) , student.city_code ( varchar(3) ) ]\ntable has_pet , columns = [ has_pet.stuid ( integer | comment : student id ) , has_pet.petid ( integer ) ]\ntable pets , columns = [ pets.petid ( integer | primary key ) , pets.pettype ( varchar(20) ) , pets.pet_age ( integer ) , pets.weight ( real ) ]\nforeign keys :\nhas_pet.stuid = student.stuid\nhas_pet.petid = pets.petid\nmatched contents : None",
  "database schema :\ntable continents , columns = [ continents.contid ( integer | primary key ) , continents.continent ( text ) ]\ntable countries , columns = [ countries.countryid ( integer | primary key ) , countries.countryname ( text ) , countries.continent ( integer ) ]\ntable car_makers , columns = [ car_makers.id ( integer | primary key ) , car_makers.maker ( text ) , car_makers.fullname ( text ) , car_makers.country ( text ) ]\ntable model_list , columns = [ model_list.modelid ( integer | primary key ) , model_list.maker ( integer ) , model_list.model ( text ) ]\ntable car_names , columns = [ car_names.makeid ( integer | primary key ) , car_names.model ( text ) , car_names.make ( text ) ]\ntable cars_data , columns = [ cars_data.id ( integer | primary key ) , cars_data.mpg ( text ) , cars_data.cylinders ( integer ) , cars_data.edispl ( real ) , cars_data.horsepower ( text ) , cars_data.weight ( integer ) , cars_data.accelerate ( real ) , cars_data.year ( integer ) ]\nforeign keys :\ncountries.continent = continents.contid\ncar_makers.country = countries.countryid\nmodel_list.maker = car_makers.id\ncar_names.model = model_list.model\ncars_data.id = car_names.makeid\nmatched contents : None",
  "database schema :\ntable airlines , columns = [ airlines.uid ( integer | primary key | comment : airline id ) , airlines.airline ( text | comment : airline name ) , airlines.abbreviation ( text ) , airlines.country ( text ) ]\ntable airports , columns = [ airports.city ( text ) , airports.airportcode ( text | primary key ) , airports.airportname ( text ) , airports.country ( text ) , airports.countryabbrev ( text ) ]\ntable flights , columns = [ flights.airline ( integer | primary key ) , flights.flightno ( integer | primary key | comment : flight number ) , flights.sourceairport ( text ) , flights.destairport ( text | comment : destination airport ) ]\nforeign keys :\nflights.destairport = airports.airportcode\nflights.sourceairport = airports.airportcode\nmatched contents :\nairlines.airline ( JetBlue Airways )\nairlines.abbreviation ( JetBlue )",
  "database schema :\ntable employee , columns = [ employee.employee_id ( int | primary key ) , employee.name ( text ) , employee.age ( int ) , employee.city ( text ) ]\ntable shop , columns = [ shop.shop_id ( int | primary key ) , shop.name ( text ) , shop.location ( text ) , shop.district ( text ) , shop.number_products ( int ) , shop.manager_name ( text ) ]\ntable hiring , columns = [ hiring.shop_id ( int ) , hiring.employee_id ( int | primary key ) , hiring.start_from ( text ) , hiring.is_full_time ( bool ) ]\ntable evaluation , columns = [ evaluation.employee_id ( text | primary key ) , evaluation.year_awarded ( text | primary key ) , evaluation.bonus ( real ) ]\nforeign keys :\nhiring.employee_id = employee.employee_id\nhiring.shop_id = shop.shop_id\nevaluation.employee_id = employee.employee_id\nmatched contents : None",
  "database schema :\ntable ref_template_types , columns = [ ref_template_types.template_type_code ( char(15) | primary key ) , ref_template_types.template_type_description ( varchar(255) ) ]\ntable templates , columns = [ templates.template_id ( integer | primary key ) , templates.version_number ( integer ) , templates.template_type_code ( char(15) ) , templates.date_effective_from ( datetime ) , templates.date_effective_to ( datetime ) , templates.template_details ( varchar(255) ) ]\ntable documents , columns = [ documents.document_id ( integer | primary key ) , documents.template_id ( integer ) , documents.document_name ( varchar(255) ) , documents.document_description ( varchar(255) ) , documents.other_details ( varchar(255) ) ]\ntable paragraphs , columns = [ paragraphs.paragraph_id ( integer | primary key ) , paragraphs.document_id ( integer ) , paragraphs.paragraph_text ( varchar(255) ) , paragraphs.other_details ( varchar(255) ) ]\nforeign keys :\ntemplates.template_type_code = ref_template_types.template_type_code\ndocuments.template_id = templates.template_id\nparagraphs.document_id = documents.document_id\nmatched contents : None",
  "database schema :\ntable course , columns = [ course.course_id ( int | primary key ) , course.staring_date ( text ) , course.course ( text ) ]\ntable teacher , columns = [ teacher.teacher_id ( int | primary key ) , teacher.name ( text ) , teacher.age ( text ) , teacher.hometown ( text ) ]\ntable course_arrange , columns = [ course_arrange.course_id ( int | primary key ) , course_arrange.teacher_id ( int | primary key ) , course_arrange.grade ( int | primary key ) ]\nforeign keys :\ncourse_arrange.teacher_id = teacher.teacher_id\ncourse_arrange.course_id = course.course_id\nmatched contents : None",
  "database schema :\ntable museum , columns = [ museum.museum_id ( int | primary key ) , museum.name ( text ) , museum.num_of_staff ( int ) , museum.open_year ( text ) ]\ntable visitor , columns = [ visitor.id ( int | primary key | comment : customer id ) , visitor.name ( text ) , visitor.level_of_membership ( int ) , visitor.age ( int ) ]\ntable visit , columns = [ visit.museum_id ( int | primary key ) , visit.visitor_id ( text | primary key | comment : customer id ) , visit.num_of_ticket ( int ) , visit.total_spent ( real ) ]\nforeign keys :\nvisit.visitor_id = visitor.id\nvisit.museum_id = museum.museum_id\nmatched contents : None",
  "database schema :\ntable players , columns = [ players.player_id ( int | primary key ) , players.first_name ( text ) , players.last_name ( text ) , players.hand ( text ) , players.birth_date ( date ) , players.country_code ( text ) ]\ntable matches , columns = [ matches.best_of ( int ) , matches.draw_size ( int ) , matches.loser_age ( float ) , matches.loser_entry ( text ) , matches.loser_hand ( text ) , matches.loser_ht ( int ) , matches.loser_id ( int ) , matches.loser_ioc ( text ) , matches.loser_name ( text ) , matches.loser_rank ( int ) , matches.loser_rank_points ( int ) , matches.loser_seed ( int ) , matches.match_num ( int ) , matches.minutes ( int ) , matches.round ( text ) , matches.score ( text ) , matches.surface ( text ) , matches.tourney_date ( date ) , matches.tourney_id ( text ) , matches.tourney_level ( text ) , matches.tourney_name ( text ) , matches.winner_age ( float ) , matches.winner_entry ( text ) , matches.winner_hand ( text ) , matches.winner_ht ( int ) , matches.winner_id ( int ) , matches.winner_ioc ( text ) , matches.winner_name ( text ) , matches.winner_rank ( int ) , matches.winner_rank_points ( int ) , matches.winner_seed ( int ) , matches.year ( int ) ]\ntable rankings , columns = [ rankings.ranking_date ( date ) , rankings.ranking ( int ) , rankings.player_id ( int ) , rankings.ranking_points ( int ) , rankings.tours ( int ) ]\nforeign keys :\nmatches.winner_id = players.player_id\nmatches.loser_id = players.player_id\nrankings.player_id = players.player_id\nmatched contents : None",
  "database schema :\ntable battle , columns = [ battle.id ( int | primary key ) , battle.name ( text ) , battle.date ( text ) , battle.bulgarian_commander ( text ) , battle.latin_commander ( text ) , battle.result ( text ) ]\ntable ship , columns = [ ship.lost_in_battle ( int ) , ship.id ( int | primary key ) , ship.name ( text ) , ship.tonnage ( text ) , ship.ship_type ( text ) , ship.location ( text ) , ship.disposition_of_ship ( text ) ]\ntable death , columns = [ death.caused_by_ship_id ( int ) , death.id ( int | primary key ) , death.note ( text ) , death.killed ( int ) , death.injured ( int ) ]\nforeign keys :\nship.lost_in_battle = battle.id\ndeath.caused_by_ship_id = ship.id\nmatched contents :\nship.disposition_of_ship ( Captured )",
  "database schema :\ntable addresses , columns = [ addresses.address_id ( integer | primary key ) , addresses.line_1 ( varchar(255) ) , addresses.line_2 ( varchar(255) ) , addresses.line_3 ( varchar(255) ) , addresses.city ( varchar(255) ) , addresses.zip_postcode ( varchar(20) ) , addresses.state_province_county ( varchar(255) ) , addresses.country ( varchar(255) ) , addresses.other_address_details ( varchar(255) ) ]\ntable courses , columns = [ courses.course_id ( integer | primary key ) , courses.course_name ( varchar(255) ) , courses.course_description ( varchar(255) ) , courses.other_details ( varchar(255) ) ]\ntable departments , columns = [ departments.department_id ( integer | primary key ) , departments.department_name ( varchar(255) ) , departments.department_description ( varchar(255) ) , departments.other_details ( varchar(255) ) ]\ntable degree_programs , columns = [ degree_programs.degree_program_id ( integer | primary key ) , degree_programs.department_id ( integer ) , degree_programs.degree_summary_name ( varchar(255) ) , degree_programs.degree_summary_description ( varchar(255) ) , degree_programs.other_details ( varchar(255) ) ]\ntable sections , columns = [ sections.section_id ( integer | primary key ) , sections.course_id ( integer ) , sections.section_name ( varchar(255) ) , sections.section_description ( varchar(255) ) , sections.other_details ( varchar(255) ) ]\ntable semesters , columns = [ semesters.semester_id ( integer | primary key ) , semesters.semester_name ( varchar(255) ) , semesters.semester_description ( varchar(255) ) , semesters.other_details ( varchar(255) ) ]\ntable students , columns = [ students.student_id ( integer | primary key ) , students.current_address_id ( integer ) , students.permanent_address_id ( integer ) , students.first_name ( varchar(80) ) , students.middle_name ( varchar(40) ) , students.last_name ( varchar(40) ) , students.cell_mobile_number ( varchar(40) ) , students.email_address ( varchar(40) ) , students.ssn ( varchar(40) ) , students.date_first_registered ( datetime ) , students.date_left ( datetime ) , students.other_student_details ( varchar(255) ) ]\ntable student_enrolment , columns = [ student_enrolment.student_enrolment_id ( integer | primary key ) , student_enrolment.degree_program_id ( integer ) , student_enrolment.semester_id ( integer ) , student_enrolment.student_id ( integer ) , student_enrolment.other_details ( varchar(255) ) ]\ntable student_enrolment_courses , columns = [ student_enrolment_courses.student_course_id ( integer | primary key ) , student_enrolment_courses.course_id ( integer ) , student_enrolment_courses.student_enrolment_id ( integer ) ]\ntable transcripts , columns = [ transcripts.transcript_id ( integer | primary key ) , transcripts.transcript_date ( datetime ) , transcripts.other_details ( varchar(255) ) ]\ntable transcript_contents , columns = [ transcript_contents.student_course_id ( integer ) , transcript_contents.transcript_id ( integer ) ]\nforeign keys :\ndegree_programs.department_id = departments.department_id\nsections.course_id = courses.course_id\nstudents.permanent_address_id = addresses.address_id\nstudents.current_address_id = addresses.address_id\nstudent_enrolment.student_id = students.student_id\nstudent_enrolment.semester_id = semesters.semester_id\nstudent_enrolment.degree_program_id = degree_programs.degree_program_id\nstudent_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id\nstudent_enrolment_courses.course_id = courses.course_id\ntranscript_contents.transcript_id = transcripts.transcript_id\ntranscript_contents.student_course_id = student_enrolment_courses.student_course_id\nmatched contents :\naddresses.address_id ( 1 , 2 )\ncourses.course_id ( 1 , 2 )\ndepartments.department_id ( 1 , 2 )\ndegree_programs.degree_program_id ( 1 , 2 )\ndegree_programs.department_id ( 2 )\nsections.section_id ( 1 , 2 )\nsections.course_id ( 1 , 2 )\nsemesters.semester_id ( 1 , 2 )\nstudent_enrolment.student_enrolment_id ( 1 )\nstudent_enrolment.degree_program_id ( 2 )\nstudent_enrolment.semester_id ( 1 , 2 )\nstudent_enrolment.student_id ( 1 )",
  "database schema :\ntable tv_channel , columns = [ tv_channel.id ( text | primary key ) , tv_channel.series_name ( text ) , tv_channel.country ( text ) , tv_channel.language ( text ) , tv_channel.content ( text ) , tv_channel.pixel_aspect_ratio_par ( text ) , tv_channel.hight_definition_tv ( text ) , tv_channel.pay_per_view_ppv ( text ) , tv_channel.package_option ( text ) ]\ntable tv_series , columns = [ tv_series.id ( real | primary key ) , tv_series.episode ( text ) , tv_series.air_date ( text ) , tv_series.rating ( text ) , tv_series.share ( real ) , tv_series.18_49_rating_share ( text ) , tv_series.viewers_m ( text ) , tv_series.weekly_rank ( real ) , tv_series.channel ( text ) ]\ntable cartoon , columns = [ cartoon.id ( real | primary key ) , cartoon.title ( text ) , cartoon.directed_by ( text ) , cartoon.written_by ( text ) , cartoon.original_air_date ( text ) , cartoon.production_code ( real ) , cartoon.channel ( text ) ]\nforeign keys :\ntv_series.channel = tv_channel.id\ncartoon.channel = tv_channel.id\nmatched contents : None",
  "database schema :\ntable poker_player , columns = [ poker_player.poker_player_id ( int | primary key ) , poker_player.people_id ( int ) , poker_player.final_table_made ( real ) , poker_player.best_finish ( real ) , poker_player.money_rank ( real ) , poker_player.earnings ( real ) ]\ntable people , columns = [ people.people_id ( int | primary key ) , people.nationality ( text ) , people.name ( text ) , people.birth_date ( text ) , people.height ( real ) ]\nforeign keys :\npoker_player.people_id = people.people_id\nmatched contents : None",
  "database schema :\ntable area_code_state , columns = [ area_code_state.area_code ( integer | primary key ) , area_code_state.state ( varchar(2) ) ]\ntable contestants , columns = [ contestants.contestant_number ( integer | primary key ) , contestants.contestant_name ( varchar(50) ) ]\ntable votes , columns = [ votes.vote_id ( integer | primary key ) , votes.phone_number ( integer ) , votes.state ( varchar(2) ) , votes.contestant_number ( integer ) , votes.created ( timestamp ) ]\nforeign keys :\nvotes.contestant_number = contestants.contestant_number\nvotes.state = area_code_state.state\nmatched contents : None",
  "database schema :\ntable city , columns = [ city.id ( integer | primary key ) , city.name ( char(35) ) , city.countrycode ( char(3) ) , city.district ( char(20) ) , city.population ( integer ) ]\ntable country , columns = [ country.code ( char(3) | primary key ) , country.name ( char(52) ) , country.continent ( text ) , country.region ( char(26) ) , country.surfacearea ( float(10,2) ) , country.indepyear ( integer | comment : indepdent year ) , country.population ( integer ) , country.lifeexpectancy ( float(3,1) ) , country.gnp ( float(10,2) ) , country.gnpold ( float(10,2) ) , country.localname ( char(45) ) , country.governmentform ( char(45) ) , country.headofstate ( char(60) ) , country.capital ( integer ) , country.code2 ( char(2) ) ]\ntable countrylanguage , columns = [ countrylanguage.countrycode ( char(3) | primary key ) , countrylanguage.language ( char(30) | primary key ) , countrylanguage.isofficial ( text ) , countrylanguage.percentage ( float(4,1) ) ]\nforeign keys :\ncity.countrycode = country.code\ncountrylanguage.countrycode = country.code\nmatched contents :\ncity.id ( 1950 )",
  "database schema :\ntable conductor , columns = [ conductor.conductor_id ( int | primary key ) , conductor.name ( text ) , conductor.age ( int ) , conductor.nationality ( text ) , conductor.year_of_work ( int ) ]\ntable orchestra , columns = [ orchestra.orchestra_id ( int | primary key ) , orchestra.orchestra ( text ) , orchestra.conductor_id ( int ) , orchestra.record_company ( text ) , orchestra.year_of_founded ( real ) , orchestra.major_record_format ( text ) ]\ntable performance , columns = [ performance.performance_id ( int | primary key ) , performance.orchestra_id ( int ) , performance.type ( text ) , performance.date ( text ) , performance.`official_ratings_(millions)` ( real ) , performance.weekly_rank ( text ) , performance.share ( text ) ]\ntable show , columns = [ show.show_id ( int ) , show.performance_id ( int ) , show.if_first_show ( bool ) , show.result ( text ) , show.attendance ( real ) ]\nforeign keys :\norchestra.conductor_id = conductor.conductor_id\nperformance.orchestra_id = orchestra.orchestra_id\nshow.performance_id = performance.performance_id\nmatched contents : None",
  "database schema :\ntable highschooler , columns = [ highschooler.id ( int | primary key ) , highschooler.name ( text ) , highschooler.grade ( int ) ]\ntable friend , columns = [ friend.student_id ( int | primary key ) , friend.friend_id ( int | primary key ) ]\ntable likes , columns = [ likes.student_id ( int | primary key ) , likes.liked_id ( int | primary key ) ]\nforeign keys :\nfriend.friend_id = highschooler.id\nfriend.student_id = highschooler.id\nlikes.student_id = highschooler.id\nlikes.liked_id = highschooler.id\nmatched contents : None",
  "database schema :\ntable breeds , columns = [ breeds.breed_code ( varchar(10) | primary key ) , breeds.breed_name ( varchar(80) ) ]\ntable charges , columns = [ charges.charge_id ( integer | primary key ) , charges.charge_type ( varchar(10) ) , charges.charge_amount ( decimal(19,4) ) ]\ntable sizes , columns = [ sizes.size_code ( varchar(10) | primary key ) , sizes.size_description ( varchar(80) ) ]\ntable treatment_types , columns = [ treatment_types.treatment_type_code ( varchar(10) | primary key ) , treatment_types.treatment_type_description ( varchar(80) ) ]\ntable owners , columns = [ owners.owner_id ( integer | primary key ) , owners.first_name ( varchar(50) ) , owners.last_name ( varchar(50) ) , owners.street ( varchar(50) ) , owners.city ( varchar(50) ) , owners.state ( varchar(20) ) , owners.zip_code ( varchar(20) ) , owners.email_address ( varchar(50) ) , owners.home_phone ( varchar(20) ) , owners.cell_number ( varchar(20) ) ]\ntable dogs , columns = [ dogs.dog_id ( integer | primary key ) , dogs.owner_id ( integer ) , dogs.abandoned_yn ( varchar(1) | comment : abandoned yes or no ) , dogs.breed_code ( varchar(10) ) , dogs.size_code ( varchar(10) ) , dogs.name ( varchar(50) ) , dogs.age ( varchar(20) ) , dogs.date_of_birth ( datetime ) , dogs.gender ( varchar(1) ) , dogs.weight ( varchar(20) ) , dogs.date_arrived ( datetime ) , dogs.date_adopted ( datetime ) , dogs.date_departed ( datetime ) ]\ntable professionals , columns = [ professionals.professional_id ( integer | primary key ) , professionals.role_code ( varchar(10) ) , professionals.first_name ( varchar(50) ) , professionals.street ( varchar(50) ) , professionals.city ( varchar(50) ) , professionals.state ( varchar(20) ) , professionals.zip_code ( varchar(20) ) , professionals.last_name ( varchar(50) ) , professionals.email_address ( varchar(50) ) , professionals.home_phone ( varchar(20) ) , professionals.cell_number ( varchar(20) ) ]\ntable treatments , columns = [ treatments.treatment_id ( integer | primary key ) , treatments.dog_id ( integer ) , treatments.professional_id ( integer ) , treatments.treatment_type_code ( varchar(10) ) , treatments.date_of_treatment ( datetime ) , treatments.cost_of_treatment ( decimal(19,4) ) ]\nforeign keys :\ndogs.owner_id = owners.owner_id\ndogs.owner_id = owners.owner_id\ndogs.size_code = sizes.size_code\ndogs.breed_code = breeds.breed_code\ntreatments.dog_id = dogs.dog_id\ntreatments.professional_id = professionals.professional_id\ntreatments.treatment_type_code = treatment_types.treatment_type_code\nmatched contents : None",
  "database schema :\ntable singer , columns = [ singer.singer_id ( int | primary key ) , singer.name ( text ) , singer.birth_year ( real ) , singer.net_worth_millions ( real ) , singer.citizenship ( text ) ]\ntable song , columns = [ song.song_id ( int | primary key ) , song.title ( text ) , song.singer_id ( int ) , song.sales ( real ) , song.highest_position ( real ) ]\nforeign keys :\nsong.singer_id = singer.singer_id\nmatched contents : None",
  "database schema :\ntable ref_feature_types , columns = [ ref_feature_types.feature_type_code ( varchar(20) | primary key ) , ref_feature_types.feature_type_name ( varchar(80) ) ]\ntable ref_property_types , columns = [ ref_property_types.property_type_code ( varchar(20) | primary key ) , ref_property_types.property_type_description ( varchar(80) ) ]\ntable other_available_features , columns = [ other_available_features.feature_id ( integer | primary key ) , other_available_features.feature_type_code ( varchar(20) ) , other_available_features.feature_name ( varchar(80) ) , other_available_features.feature_description ( varchar(80) ) ]\ntable properties , columns = [ properties.property_id ( integer | primary key ) , properties.property_type_code ( varchar(20) ) , properties.date_on_market ( datetime ) , properties.date_sold ( datetime ) , properties.property_name ( varchar(80) ) , properties.property_address ( varchar(255) ) , properties.room_count ( integer ) , properties.vendor_requested_price ( decimal(19,4) ) , properties.buyer_offered_price ( decimal(19,4) ) , properties.agreed_selling_price ( decimal(19,4) ) , properties.apt_feature_1 ( varchar(255) ) , properties.apt_feature_2 ( varchar(255) ) , properties.apt_feature_3 ( varchar(255) ) , properties.fld_feature_1 ( varchar(255) ) , properties.fld_feature_2 ( varchar(255) ) , properties.fld_feature_3 ( varchar(255) ) , properties.hse_feature_1 ( varchar(255) ) , properties.hse_feature_2 ( varchar(255) ) , properties.hse_feature_3 ( varchar(255) ) , properties.oth_feature_1 ( varchar(255) ) , properties.oth_feature_2 ( varchar(255) ) , properties.oth_feature_3 ( varchar(255) ) , properties.shp_feature_1 ( varchar(255) ) , properties.shp_feature_2 ( varchar(255) ) , properties.shp_feature_3 ( varchar(255) ) , properties.other_property_details ( varchar(255) ) ]\ntable other_property_features , columns = [ other_property_features.property_id ( integer ) , other_property_features.feature_id ( integer ) , other_property_features.property_feature_description ( varchar(80) ) ]\nforeign keys :\nother_available_features.feature_type_code = ref_feature_types.feature_type_code\nproperties.property_type_code = ref_property_types.property_type_code\nother_property_features.property_id = properties.property_id\nother_property_features.feature_id = other_available_features.feature_id\nmatched contents : None"
]